name: CI

on:
  pull_request:
  push:
    branches:
      - "xdai"

jobs:
  lint:
    strategy:
      matrix:
        node: ["10.x"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache YARN dependencies
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.OS }}-${{ matrix.node }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.OS }}-${{ matrix.node }}-yarn-cache-

      - run: yarn --no-progress --non-interactive --frozen-lockfile

      - run: yarn build
      - run: yarn format

  test:
    strategy:
      matrix:
        node: ["10.x"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache YARN dependencies
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.OS }}-${{ matrix.node }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.OS }}-${{ matrix.node }}-yarn-cache-

      - run: yarn --no-progress --non-interactive --frozen-lockfile

      - run: yarn build
      - run: yarn test

  echidna:
    name: Echidna
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testName:
          - BadgeRolesInvariant

    steps:
      - uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install node dependencies
        run: yarn install --frozen-lockfile

      - name: Install pip3
        run: |
          python -m pip install --upgrade pip
      - name: Install slither
        run: |
          pip3 install slither-analyzer
      - name: Install solc-select
        run: |
          pip3 install solc-select
      - name: Set solc v0.6.12
        run: |
          solc-select install 0.6.12
          solc-select use 0.6.12
      - name: Install echidna
        run: |
          sudo wget -O /tmp/echidna-test.tar.gz https://github.com/crytic/echidna/releases/download/v1.6.0/echidna-test-v1.6.0-Ubuntu-18.04.tar.gz
          sudo tar -xf /tmp/echidna-test.tar.gz -C /usr/bin
          sudo chmod +x /usr/bin/echidna-test
      - name: Run ${{ matrix.testName }}
        run: echidna-test . --contract ${{ matrix.testName }} --config echidna.config.yml
