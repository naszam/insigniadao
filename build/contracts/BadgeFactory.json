{
  "contractName": "BadgeFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "insignia_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "templateId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "BadgeActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "templateId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "image",
          "type": "string"
        }
      ],
      "name": "NewTemplate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "TEMPLATER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "addTemplater",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTrustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "isTemplater",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "templateId",
          "type": "uint256"
        }
      ],
      "name": "getTemplate",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "image",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTemplatesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "image",
          "type": "string"
        }
      ],
      "name": "createTemplate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getBadgeTemplate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "templateId",
          "type": "uint256"
        }
      ],
      "name": "getBadgeTemplateQuantity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "templateId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "activateBadge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burnBadge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"insignia_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"BadgeActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"}],\"name\":\"NewTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEMPLATER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"activateBadge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"addTemplater\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burnBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"}],\"name\":\"createTemplate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getBadgeTemplate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"}],\"name\":\"getBadgeTemplateQuantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"}],\"name\":\"getTemplate\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTemplatesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"isTemplater\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"activateBadge(bytes32[],uint256,string)\":{\"details\":\"Verify if the caller is a redeemer\",\"params\":{\"proof\":\"Merkle Proof\",\"templateId\":\"Template Id\",\"tokenURI\":\"Token URI\"},\"returns\":{\"_tokenId\":\"Token Id of the new Badge\"}},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"burnBadge(uint256)\":{\"details\":\"burn() Check if the caller is approved or owner of the Badge\",\"params\":{\"tokenId\":\"Token Id of the Badge to burn\"},\"returns\":{\"_0\":\"True if the Badge has been burned\"}},\"createTemplate(string,string,string)\":{\"details\":\"Access restricted to only Templaters\",\"params\":{\"description\":\"A description of the new template\",\"image\":\"A filename of the new template\",\"name\":\"The name of the new template\"},\"returns\":{\"_templateId\":\"The template Id\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"getBadgeTemplate(uint256)\":{\"details\":\"Check if the tokenId exists\",\"params\":{\"tokenId\":\"Token Id of the Badge\"},\"returns\":{\"_0\":\"Template Id associated with the tokenId\"}},\"getBadgeTemplateQuantity(uint256)\":{\"details\":\"Check if the template Id exists\",\"params\":{\"templateId\":\"Template Id\"},\"returns\":{\"_0\":\"Quantity of Badges associated with templateId\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getTemplate(uint256)\":{\"details\":\"Check if templateId exists\",\"params\":{\"templateId\":\"Template Id of the template to return\"},\"returns\":{\"name\":\"description image Of the specified templateId\"}},\"getTemplatesCount()\":{\"details\":\"Return lenght of template array\",\"returns\":{\"count\":\"The current number of templates\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"pause()\":{\"details\":\"the caller must have the 'PAUSER_ROLE'\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"setBaseURI(string)\":{\"details\":\"Update the baseURI specified in the constructor\",\"params\":{\"baseURI\":\"New baseURI\"},\"returns\":{\"_0\":\"True if the new baseURI is set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}).     * If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings.     * .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"token.uri/123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"\\\" | \\\"token.uri/<tokenId>\\\" |===     * Requirements:     * - `tokenId` must exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"the caller must have the 'PAUSER_ROLE'\"}}},\"userdoc\":{\"methods\":{\"activateBadge(bytes32[],uint256,string)\":{\"notice\":\"Activate Badge by redeemers\"},\"burnBadge(uint256)\":{\"notice\":\"Burn Badge\"},\"createTemplate(string,string,string)\":{\"notice\":\"Create a new template\"},\"getBadgeTemplate(uint256)\":{\"notice\":\"Getter function for templateId associated with the tokenId\"},\"getBadgeTemplateQuantity(uint256)\":{\"notice\":\"Getter function for number of badges associated with templateId\"},\"getTemplate(uint256)\":{\"notice\":\"Getter function for templates\"},\"getTemplatesCount()\":{\"notice\":\"TemplatesGetter function for templates count\"},\"pause()\":{\"notice\":\"Pause all the functions\"},\"setBaseURI(string)\":{\"notice\":\"Set the baseURI\"},\"unpause()\":{\"notice\":\"Unpause all the functions\"}}}},\"settings\":{\"compilationTarget\":{\"/home/sencha/insigniadao/contracts/BadgeFactory.sol\":\"BadgeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/sencha/insigniadao/contracts/BadgeFactory.sol\":{\"keccak256\":\"0x27c69afa965b76188d476a7cc3133202625db64d053f7d4c8af62bf5de14e939\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8177fa5790bd46114edd970eadb632bbb27b1e78cf2445615b1769b6b7115fa7\",\"dweb:/ipfs/QmWhN5sJx8JHdFT1XxebpVwxSLLTzgqpRS5X1wDwZ2Hzvm\"]},\"/home/sencha/insigniadao/contracts/BadgeRoles.sol\":{\"keccak256\":\"0xa217cca4efbc408b9d6ab3948fa6c347ea1ef945a4a31e17828510a03f131e62\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b6eb0c37909744917202811a700e7c8e723949bc052d37af13116e1adac968a3\",\"dweb:/ipfs/Qmcz9yUREfQ4PNRyFgpaH7zRuTqApdekbAVSgt1tiAo9rF\"]},\"@opengsn/gsn/contracts/0x/LibBytesV06.sol\":{\"keccak256\":\"0xa6217e51e9bb624ad88f364c0860ec3c5f28db2dfe688ad16c85a6afb43b71f4\",\"urls\":[\"bzz-raw://9e42917ab4a1e7f3e3c2b1aa569807ee653bd65478078ef786e078c90228d50c\",\"dweb:/ipfs/QmVhdoLV3cAszujPoFrrEf6FjFFiP7cRuAjr49sRiz9sP5\"]},\"@opengsn/gsn/contracts/0x/errors/LibBytesRichErrorsV06.sol\":{\"keccak256\":\"0x8358515b57f1d45a61a099caafe10ad8889f0ad877153f9965f1ba143172beb0\",\"urls\":[\"bzz-raw://14093162accbd47b21708eaa433a4cf74a1aea356203203ed98880269d74b617\",\"dweb:/ipfs/QmTX8QsX611eVm4XWeebGpepaNTgT9ZTiahqGTfgYgVGwP\"]},\"@opengsn/gsn/contracts/0x/errors/LibRichErrorsV06.sol\":{\"keccak256\":\"0xe3bb5df566a92b15bc1b681965f7b7279bb81b044ab3beac47a8f193b2510c84\",\"urls\":[\"bzz-raw://e680ff51e6a01984fcfa6b89269409736fe2a40688b73dd295e4a2b11543e359\",\"dweb:/ipfs/Qmew3pXCnUpUGbZH8Bx9PBSeyHzF8N7W2Dmj2qNg2qVv5W\"]},\"@opengsn/gsn/contracts/BaseRelayRecipient.sol\":{\"keccak256\":\"0xb66be09ced6c1e50fe47bbf97c62079c539ddd2b1c89b9f18317f77228dfabeb\",\"urls\":[\"bzz-raw://5dce40e7121dac48a7f8016f365c5173e08595d25b95a89443e9781318fd906a\",\"dweb:/ipfs/QmbeKYCsxd2ZNNj6PLjB5XjgrahPCScDAz4HzonzQFGSHw\"]},\"@opengsn/gsn/contracts/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x6ccb49ede883eb865ce03ceb8f9e9d41f5b0fd25d910d3fedaf5fd2ffc0eeb4d\",\"urls\":[\"bzz-raw://1e1cb382ef511f9a0f5d9971ed09423bcbe437e81a98ddc0f2141f7d392ad2d7\",\"dweb:/ipfs/QmNPTcD68AFgXnyeF3NncPTzymBQY7ptEfdjQNUpSFWhQJ\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc35d706da2c3b3228e8c2bfd9c775201688ef307e4990cd59a6dadc2a61abddc\",\"urls\":[\"bzz-raw://45c9859e241844143aaad5054ca5ffebf998a069592cd9c780c88c723849400b\",\"dweb:/ipfs/QmPFPTuys4hWRUga4UJvdyXKP32a9kdhg8hDu7Zku1ENFT\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x169f43befe6b7b973f4fac92a53a74e480a04a490aa84901fdaaf4b423991920\",\"urls\":[\"bzz-raw://299172b91507b45d6409024bb4977bfd7999713e15b687c0357f46d371f78e2e\",\"dweb:/ipfs/QmSZDnjpgBKSWENKouFfPXbb88kKuK9uL4oG5FvKt4tCzN\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x98aa1380fd49a255d6cbea58558ea76bff35c59b218671fde8842907b44e7390\",\"urls\":[\"bzz-raw://613eaff66d4c270ddd87448c06267b6e043ef8c8223cb39d8767bc9daa9cb1ec\",\"dweb:/ipfs/Qmcg56orudv25ghmnZCxN37HwNKCXmTTDxj5cyoYYnvHTg\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x67a43d3926e72576c96ebf0e6360c979a8cc04f25e4b0ca40c221547d8903ba4\",\"urls\":[\"bzz-raw://77c6f48115c491411f0e27f6b70e2e524b1b57c66e74bd7f1974a31a448e2540\",\"dweb:/ipfs/QmPZCizouS9PVJ1dVf8zqTjHyEo5cSa1ZmPCQpk52TgrmV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0x70d75229a5b340148faab86a10d39e8d242b7202ce23a6925066abcfb7ff567a\",\"urls\":[\"bzz-raw://895e0ad84c44490543b58118f65a6332f3de58752b80d03dfd5d063244841b24\",\"dweb:/ipfs/QmeK33G3TKYdYFhZgvoDKuh2cHEGgLdVAdBq3m7Go9XA4B\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x708f339ccc3e9d164ec61bb0db7d4c224161a3bca52413c8bbeddb114154e52b\",\"urls\":[\"bzz-raw://1462c089d30cd75f9ce18c39a26f41adcb74e4a14d2cb9f5c8bcb0a8631fa660\",\"dweb:/ipfs/QmP9hGNkYTpRazqXnQoSyiUiL8DJr3Y8nX9Wcg7SukNMUf\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x09bbc2d7d73986e6e645d0dd65cd16f41248e5cc991f06d42db2946b5f2e3786\",\"urls\":[\"bzz-raw://4f5f3ca771fe28f1bd7de5521bb2ef23b7fadb681b0b0a7ed13d0e2772a1d945\",\"dweb:/ipfs/QmSbLtedzXRjruuhQjx7AXjpg5CGC98g1TBKaVUf1nU38a\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x435bd9ac283c6678ac71c809bae5fb738ea2228b7cf8663ad111894d19f567cb\",\"urls\":[\"bzz-raw://01d79169830e56ab0980901b66d4b404db89acfafd5836903eadf0df22f8dcdd\",\"dweb:/ipfs/QmTTBj8GUZoMZ8EH7YyaV88QmD4QDg32vs2KNymdUKAoMd\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x4f3a00edb976e97943fe0a620ea2948955a75eff2a9231c202d50d1e062d8da5\",\"urls\":[\"bzz-raw://4d83aa87b7c75f666d57a0e5b779a19c00b453b14ee4ed88cfda6d056fdcf14c\",\"dweb:/ipfs/QmXpWwQVFo66hsrAZmHxoxNzwEwBDgNWvaUYqY4TJV38vk\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xfd5cf8319cb84ca04ea407d6fba686d53ad7f5d2bf476f41678f5a751d12a7ea\",\"urls\":[\"bzz-raw://45b75b553c4a9053429609b1c3db481f1728ca00448f01acc4065249bbf87adc\",\"dweb:/ipfs/QmRZH6QM32mJn1GZCAPXUQtBz65H4kk6DsGQbGNo4ZNPy9\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x0336d64bd695c5d8bb962fd3dacb3d26f52879b19e75472d7dea9f91f7add79a\",\"urls\":[\"bzz-raw://d709c1de86475b74fa4f614458e868213f8e5b13eed8b29b465793cd97e5c0f5\",\"dweb:/ipfs/QmYVgazum1VVeDoJYYmKhAJ1mcuTy8vidb2iFEMWcVdSeY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xd1d78b1c8534fbcf8fdc8fbfec9133df142ef8cae9ae820929dfe6d80d2c790a\",\"urls\":[\"bzz-raw://193a827fbe83fa83c4cabb172dc438dd45c50253858a1f2bf56e8f9a2d548386\",\"dweb:/ipfs/QmbWBHwHv7CyHSZY6jxnaDiHWGEEyVb8LeGdRpWXUjaiBr\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200678238038062006782833981810160405260208110156200003757600080fd5b81019080805190602001909291905050506040518060400160405280600e81526020017f496e7369676e69614261646765730000000000000000000000000000000000008152506040518060400160405280600681526020017f42414447455300000000000000000000000000000000000000000000000000008152506000620000c6620003aa60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506000600260006101000a81548160ff021916908315150217905550620001a36000801b62000197620003c660201b60201c565b620003ef60201b60201c565b620001f960405180807f54454d504c415445525f524f4c45000000000000000000000000000000000000815250600e0190506040518091039020620001ed620003c660201b60201c565b620003ef60201b60201c565b6200024f60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902062000243620003c660201b60201c565b620003ef60201b60201c565b736453d37248ab2c16ebd1a8f782a2cbc65860e60b600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620002bc6301ffc9a760e01b6200040560201b60201c565b8160099080519060200190620002d4929190620008ad565b5080600a9080519060200190620002ed929190620008ad565b50620003066380ac58cd60e01b6200040560201b60201c565b6200031e635b5e139f60e01b6200040560201b60201c565b6200033663780e9d6360e01b6200040560201b60201c565b50506200036260405180606001604052806022815260200162006760602291396200050f60201b60201c565b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200095c565b6000620003c16200052b60201b62003c1e1760201c565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b620004018282620005f560201b60201c565b5050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620004a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b600160036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b80600c908051906020019062000527929190620008ad565b5050565b600060186000369050101580156200057d57506200054e6200069960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15620005ee57620005e66000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506014600036905003620006c360201b62003cd01760201c565b9050620005f2565b3390505b90565b6200062481600160008581526020019081526020016000206000016200073060201b62003d221790919060201c565b1562000695576200063a620003aa60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006014820183511015620007055762000704620006f360048551601486016200076860201b62003d521760201c565b6200080860201b62003df11760201c565b5b60148201915073ffffffffffffffffffffffffffffffffffffffff8284015116905080905092915050565b600062000760836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200081060201b60201c565b905092915050565b6060632800659560e01b848484604051602401808460078111156200078957fe5b60ff1681526020018381526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b805160208201fd5b60006200082483836200088a60201b60201c565b6200087f57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000884565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620008f057805160ff191683800117855562000921565b8280016001018555821562000921579182015b828111156200092057825182559160200191906001019062000903565b5b50905062000930919062000934565b5090565b6200095991905b80821115620009555760008160009055506001016200093b565b5090565b90565b615df4806200096c6000396000f3fe608060405234801561001057600080fd5b506004361061028e5760003560e01c80636cdd0a161161015c578063b88d4fde116100ce578063d4c10e4611610087578063d4c10e46146112c9578063d547741f14611436578063e63ab1e914611484578063e6c0d714146114a2578063e985e9c5146114fe578063f2fde38b1461157a5761028f565b8063b88d4fde14610e38578063c87b56dd14610f3d578063ca15c87314610fe4578063cc11dd4e14611026578063ccb4bcb614611082578063ce1b815f1461127f5761028f565b80639010d07c116101205780639010d07c14610c4b57806391d1485414610cc357806395d89b4114610d29578063a217fddf14610dac578063a22cb46514610dca578063b5900eea14610e1a5761028f565b80636cdd0a1614610b7757806370a0823114610b95578063715018a614610bed5780638456cb5914610bf75780638da5cb5b14610c015761028f565b806331543cf4116102005780634f6ccce7116101b95780634f6ccce71461090957806355de28ae1461094b57806355f804b3146109915780635c975abb14610a645780636352211e14610a865780636c0360eb14610af45761028f565b806331543cf41461065457806336568abe146107d35780633f4ba83a1461082157806342842e0e1461082b57806342966c68146108995780634de46fd0146108c75761028f565b806318160ddd1161025257806318160ddd1461047a57806323b872dd14610498578063248a9ca31461050657806324d7806c146105485780632f2ff15d146105a45780632f745c59146105f25761028f565b806301ffc9a71461029457806304523af1146102f957806306fdde031461033b578063081812fc146103be578063095ea7b31461042c5761028f565b5b600080fd5b6102df600480360360208110156102aa57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506115be565b604051808215151515815260200191505060405180910390f35b6103256004803603602081101561030f57600080fd5b8101908080359060200190929190505050611626565b6040518082815260200191505060405180910390f35b610343611740565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610383578082015181840152602081019050610368565b50505050905090810190601f1680156103b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ea600480360360208110156103d457600080fd5b81019080803590602001909291905050506117e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104786004803603604081101561044257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061187d565b005b6104826119c1565b6040518082815260200191505060405180910390f35b610504600480360360608110156104ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119d2565b005b6105326004803603602081101561051c57600080fd5b8101908080359060200190929190505050611a48565b6040518082815260200191505060405180910390f35b61058a6004803603602081101561055e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a68565b604051808215151515815260200191505060405180910390f35b6105f0600480360360408110156105ba57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a7e565b005b61063e6004803603604081101561060857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b08565b6040518082815260200191505060405180910390f35b6106806004803603602081101561066a57600080fd5b8101908080359060200190929190505050611b63565b60405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b838110156106c85780820151818401526020810190506106ad565b50505050905090810190601f1680156106f55780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561072e578082015181840152602081019050610713565b50505050905090810190601f16801561075b5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015610794578082015181840152602081019050610779565b50505050905090810190601f1680156107c15780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b61081f600480360360408110156107e957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611eee565b005b610829611f87565b005b6108976004803603606081101561084157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061202c565b005b6108c5600480360360208110156108af57600080fd5b810190808035906020019092919050505061204c565b005b6108f3600480360360208110156108dd57600080fd5b81019080803590602001909291905050506120be565b6040518082815260200191505060405180910390f35b6109356004803603602081101561091f57600080fd5b81019080803590602001909291905050506121d9565b6040518082815260200191505060405180910390f35b6109776004803603602081101561096157600080fd5b81019080803590602001909291905050506121fc565b604051808215151515815260200191505060405180910390f35b610a4a600480360360208110156109a757600080fd5b81019080803590602001906401000000008111156109c457600080fd5b8201836020820111156109d657600080fd5b803590602001918460018302840111640100000000831117156109f857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506122df565b604051808215151515815260200191505060405180910390f35b610a6c6123bc565b604051808215151515815260200191505060405180910390f35b610ab260048036036020811015610a9c57600080fd5b81019080803590602001909291905050506123d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610afc61240a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b3c578082015181840152602081019050610b21565b50505050905090810190601f168015610b695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b7f6124ac565b6040518082815260200191505060405180910390f35b610bd760048036036020811015610bab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124e5565b6040518082815260200191505060405180910390f35b610bf56125ba565b005b610bff612742565b005b610c096127e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c8160048036036040811015610c6157600080fd5b810190808035906020019092919080359060200190929190505050612810565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610d0f60048036036040811015610cd957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612842565b604051808215151515815260200191505060405180910390f35b610d31612874565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d71578082015181840152602081019050610d56565b50505050905090810190601f168015610d9e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610db4612916565b6040518082815260200191505060405180910390f35b610e1860048036036040811015610de057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061291d565b005b610e22612ad5565b6040518082815260200191505060405180910390f35b610f3b60048036036080811015610e4e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610eb557600080fd5b820183602082011115610ec757600080fd5b80359060200191846001830284011164010000000083111715610ee957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612b65565b005b610f6960048036036020811015610f5357600080fd5b8101908080359060200190929190505050612bdd565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610fa9578082015181840152602081019050610f8e565b50505050905090810190601f168015610fd65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61101060048036036020811015610ffa57600080fd5b8101908080359060200190929190505050612ec6565b6040518082815260200191505060405180910390f35b6110686004803603602081101561103c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612eed565b604051808215151515815260200191505060405180910390f35b6112696004803603606081101561109857600080fd5b81019080803590602001906401000000008111156110b557600080fd5b8201836020820111156110c757600080fd5b803590602001918460018302840111640100000000831117156110e957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561114c57600080fd5b82018360208201111561115e57600080fd5b8035906020019184600183028401116401000000008311171561118057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156111e357600080fd5b8201836020820111156111f557600080fd5b8035906020019184600183028401116401000000008311171561121757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612f35565b6040518082815260200191505060405180910390f35b6112876132f4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b611420600480360360608110156112df57600080fd5b81019080803590602001906401000000008111156112fc57600080fd5b82018360208201111561130e57600080fd5b8035906020019184602083028401116401000000008311171561133057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019064010000000081111561139a57600080fd5b8201836020820111156113ac57600080fd5b803590602001918460018302840111640100000000831117156113ce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061331e565b6040518082815260200191505060405180910390f35b6114826004803603604081101561144c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506137ee565b005b61148c613878565b6040518082815260200191505060405180910390f35b6114e4600480360360208110156114b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506138b1565b604051808215151515815260200191505060405180910390f35b6115606004803603604081101561151457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061397d565b604051808215151515815260200191505060405180910390f35b6115bc6004803603602081101561159057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613a11565b005b600060036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000600260009054906101000a900460ff16156116ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b81600f8054905011611725576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f2074656d706c61746520776974682074686174206964000000000000000081525060200191505060405180910390fd5b60106000838152602001908152602001600020549050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117d85780601f106117ad576101008083540402835291602001916117d8565b820191906000526020600020905b8154815290600101906020018083116117bb57829003601f168201915b5050505050905090565b60006117ed82613df9565b611842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615c32602c913960400191505060405180910390fd5b6007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611888826123d3565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561190f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180615d0e6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661192e613e16565b73ffffffffffffffffffffffffffffffffffffffff16148061195d575061195c81611957613e16565b61397d565b5b6119b2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180615b856038913960400191505060405180910390fd5b6119bc8383613e25565b505050565b60006119cd6005613ede565b905090565b6119e36119dd613e16565b82613ef3565b611a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180615d2f6031913960400191505060405180910390fd5b611a43838383613fe7565b505050565b600060016000838152602001908152602001600020600201549050919050565b6000611a776000801b83612842565b9050919050565b611aa56001600084815260200190815260200160002060020154611aa0613e16565b612842565b611afa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615a50602f913960400191505060405180910390fd5b611b04828261406c565b5050565b6000611b5b82600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061410090919063ffffffff16565b905092915050565b6060806060600260009054906101000a900460ff1615611beb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b83600f8054905011611c65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f2074656d706c61746520776974682074686174206964000000000000000081525060200191505060405180910390fd5b611c6d615902565b600f8581548110611c7a57fe5b9060005260206000209060040201604051806080016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d2c5780601f10611d0157610100808354040283529160200191611d2c565b820191906000526020600020905b815481529060010190602001808311611d0f57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dce5780601f10611da357610100808354040283529160200191611dce565b820191906000526020600020905b815481529060010190602001808311611db157829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e705780601f10611e4557610100808354040283529160200191611e70565b820191906000526020600020905b815481529060010190602001808311611e5357829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806000015181602001518260400151935093509350509193909250565b611ef6613e16565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615d90602f913960400191505060405180910390fd5b611f83828261411a565b5050565b611fcd60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020611fc8613e16565b612842565b612022576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615a7f602e913960400191505060405180910390fd5b61202a6141ae565b565b61204783838360405180602001604052806000815250612b65565b505050565b61205d612057613e16565b82613ef3565b6120b2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180615d606030913960400191505060405180910390fd5b6120bb816142b7565b50565b6000600260009054906101000a900460ff1615612143576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b61214c82613df9565b6121be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4552433732313a204e6f20746f6b656e2077697468207468617420696400000081525060200191505060405180910390fd5b60116000838152602001908152602001600020549050919050565b6000806121f08360056143f190919063ffffffff16565b50905080915050919050565b6000600260009054906101000a900460ff1615612281576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b600061228c836120be565b90506122978361204c565b6122be6001601060008481526020019081526020016000205461442090919063ffffffff16565b60106000838152602001908152602001600020819055506001915050919050565b60006122e9613e16565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146123aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6123b38261446a565b60019050919050565b6000600260009054906101000a900460ff16905090565b600061240382604051806060016040528060298152602001615be76029913960056144849092919063ffffffff16565b9050919050565b6060600c8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124a25780601f10612477576101008083540402835291602001916124a2565b820191906000526020600020905b81548152906001019060200180831161248557829003601f168201915b5050505050905090565b60405180807f54454d504c415445525f524f4c45000000000000000000000000000000000000815250600e019050604051809103902081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561256c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615bbd602a913960400191505060405180910390fd5b6125b3600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206144a3565b9050919050565b6125c2613e16565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612683576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61278860405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020612783613e16565b612842565b6127dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615c8a602c913960400191505060405180910390fd5b6127e56144b8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061283a82600160008681526020019081526020016000206000016145c290919063ffffffff16565b905092915050565b600061286c82600160008681526020019081526020016000206000016145dc90919063ffffffff16565b905092915050565b6060600a8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561290c5780601f106128e15761010080835404028352916020019161290c565b820191906000526020600020905b8154815290600101906020018083116128ef57829003601f168201915b5050505050905090565b6000801b81565b612925613e16565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156129c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600860006129d3613e16565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16612a80613e16565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600260009054906101000a900460ff1615612b5a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b600f80549050905090565b612b76612b70613e16565b83613ef3565b612bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180615d2f6031913960400191505060405180910390fd5b612bd78484848461460c565b50505050565b6060612be882613df9565b612c3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615cdf602f913960400191505060405180910390fd5b6060600b60008481526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ce65780601f10612cbb57610100808354040283529160200191612ce6565b820191906000526020600020905b815481529060010190602001808311612cc957829003601f168201915b505050505090506000600c8054600181600116156101000203166002900490501415612d155780915050612ec1565b600081511115612dee57600c816040516020018083805460018160011615610100020316600290048015612d805780601f10612d5e576101008083540402835291820191612d80565b820191906000526020600020905b815481529060010190602001808311612d6c575b505082805190602001908083835b60208310612db15780518252602082019150602081019050602083039250612d8e565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050612ec1565b600c612df98461467e565b6040516020018083805460018160011615610100020316600290048015612e575780601f10612e35576101008083540402835291820191612e57565b820191906000526020600020905b815481529060010190602001808311612e43575b505082805190602001908083835b60208310612e885780518252602082019150602081019050602083039250612e65565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000612ee6600160008481526020019081526020016000206000016147c5565b9050919050565b6000612f2e60405180807f54454d504c415445525f524f4c45000000000000000000000000000000000000815250600e019050604051809103902083612842565b9050919050565b6000612f47612f42613e16565b612eed565b612fb9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616c6c6572206973206e6f7420612074656d706c617465206f776e6572000081525060200191505060405180910390fd5b600260009054906101000a900460ff161561303c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b613044615902565b6040518060800160405280868152602001858152602001848152602001613069613e16565b73ffffffffffffffffffffffffffffffffffffffff168152509050600f81908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190805190602001906130cc929190615940565b5060208201518160010190805190602001906130e9929190615940565b506040820151816002019080519060200190613106929190615940565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506131696001600f8054905061442090919063ffffffff16565b91507f335347d3c0abbe88e13ee17ff9db9ff2aabea3e099f1ffd10807e9c7f9cf82ad8286868660405180858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b838110156131de5780820151818401526020810190506131c3565b50505050905090810190601f16801561320b5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015613244578082015181840152602081019050613229565b50505050905090810190601f1680156132715780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156132aa57808201518184015260208101905061328f565b50505050905090810190601f1680156132d75780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a1819150509392505050565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900460ff16156133a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b82600f805490501161341d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f2074656d706c61746520776974682074686174206964000000000000000081525060200191505060405180910390fd5b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166363a9c3d7613463613e16565b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156134c357600080fd5b505afa1580156134d7573d6000803e3d6000fd5b505050506040513d60208110156134ed57600080fd5b8101908080519060200190929190505050806136235750613622600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c2b40ae4856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561357a57600080fd5b505afa15801561358e573d6000803e3d6000fd5b505050506040513d60208110156135a457600080fd5b81019080805190602001909291905050506135bd613e16565b604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140191505060405160208183030381529060405280519060200120866147da9092919063ffffffff16565b5b613695576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f43616c6c6572206973206e6f7420612072656465656d6572000000000000000081525060200191505060405180910390fd5b6136a66136a0613e16565b83614892565b508260116000838152602001908152602001600020819055506136e6600160106000868152602001908152602001600020546148ce90919063ffffffff16565b60106000858152602001908152602001600020819055507f6d9b3316ed00d7a8176f774914703e1d3404a4911e6236f45e6c50017d7674f8613726613e16565b828585604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156137a757808201518184015260208101905061378c565b50505050905090810190601f1680156137d45780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a18090509392505050565b6138156001600084815260200190815260200160002060020154613810613e16565b612842565b61386a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180615b556030913960400191505060405180910390fd5b613874828261411a565b5050565b60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b60006138c36138be613e16565b611a68565b613935576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616c6c6572206973206e6f7420616e2061646d696e0000000000000000000081525060200191505060405180910390fd5b61397460405180807f54454d504c415445525f524f4c45000000000000000000000000000000000000815250600e019050604051809103902083611a7e565b60019050919050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613a19613e16565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613ada576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613b60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180615adf6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006018600036905010158015613c675750613c386132f4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15613cc957613cc26000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506014600036905003613cd0565b9050613ccd565b3390505b90565b60006014820183511015613cf757613cf6613cf16004855160148601613d52565b613df1565b5b60148201915073ffffffffffffffffffffffffffffffffffffffff8284015116905080905092915050565b6000613d4a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b614956565b905092915050565b6060632800659560e01b84848460405160240180846007811115613d7257fe5b60ff1681526020018381526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b805160208201fd5b6000613e0f8260056149c690919063ffffffff16565b9050919050565b6000613e20613c1e565b905090565b816007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16613e98836123d3565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000613eec826000016149e0565b9050919050565b6000613efe82613df9565b613f53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615b29602c913960400191505060405180910390fd5b6000613f5e836123d3565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480613fcd57508373ffffffffffffffffffffffffffffffffffffffff16613fb5846117e2565b73ffffffffffffffffffffffffffffffffffffffff16145b80613fde5750613fdd818561397d565b5b91505092915050565b60011561405c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4552433732313a20746f6b656e207472616e736665722064697361626c65640081525060200191505060405180910390fd5b6140678383836149f1565b505050565b6140948160016000858152602001908152602001600020600001613d2290919063ffffffff16565b156140fc576140a1613e16565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600061410f8360000183614c34565b60001c905092915050565b6141428160016000858152602001908152602001600020600001614cb790919063ffffffff16565b156141aa5761414f613e16565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600260009054906101000a900460ff16614230576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa614274613e16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006142c2826123d3565b90506142d081600084614ce7565b6142db600083613e25565b6000600b60008481526020019081526020016000208054600181600116156101000203166002900490501461432a57600b6000838152602001908152602001600020600061432991906159c0565b5b61437b82600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614cec90919063ffffffff16565b50614390826005614d0690919063ffffffff16565b5081600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000806000806144048660000186614d20565b915091508160001c8160001c8090509350935050509250929050565b600061446283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614db9565b905092915050565b80600c9080519060200190614480929190615940565b5050565b6000614497846000018460001b84614e79565b60001c90509392505050565b60006144b182600001614f6f565b9050919050565b600260009054906101000a900460ff161561453b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861457f613e16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006145d18360000183614c34565b60001c905092915050565b6000614604836000018373ffffffffffffffffffffffffffffffffffffffff1660001b614f80565b905092915050565b614617848484613fe7565b61462384848484614fa3565b614678576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180615aad6032913960400191505060405180910390fd5b50505050565b606060008214156146c6576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506147c0565b600082905060005b600082146146f0578080600101915050600a82816146e857fe5b0491506146ce565b60608167ffffffffffffffff8111801561470957600080fd5b506040519080825280601f01601f19166020018201604052801561473c5781602001600182028036833780820191505090505b50905060006001830390508593505b600084146147b857600a848161475d57fe5b0660300160f81b8282806001900393508151811061477757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84816147b057fe5b04935061474b565b819450505050505b919050565b60006147d382600001614f6f565b9050919050565b60008082905060008090505b85518110156148845760008682815181106147fd57fe5b602002602001015190508083116148445782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250614876565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b5080806001019150506147e6565b508381149150509392505050565b60006148a7836148a2600d6152c6565b6152d4565b6148ba6148b4600d6152c6565b836154c8565b6148c4600d615552565b6001905092915050565b60008082840190508381101561494c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006149628383614f80565b6149bb5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506149c0565b600090505b92915050565b60006149d8836000018360001b615568565b905092915050565b600081600001805490509050919050565b8273ffffffffffffffffffffffffffffffffffffffff16614a11826123d3565b73ffffffffffffffffffffffffffffffffffffffff1614614a7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180615cb66029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415614b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180615b056024913960400191505060405180910390fd5b614b0e838383614ce7565b614b19600082613e25565b614b6a81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614cec90919063ffffffff16565b50614bbc81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061558b90919063ffffffff16565b50614bd3818360056155a59092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081836000018054905011614c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615a2e6022913960400191505060405180910390fd5b826000018281548110614ca457fe5b9060005260206000200154905092915050565b6000614cdf836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6155da565b905092915050565b505050565b6000614cfe836000018360001b6155da565b905092915050565b6000614d18836000018360001b6156c2565b905092915050565b60008082846000018054905011614d82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615c106022913960400191505060405180910390fd5b6000846000018481548110614d9357fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b6000838311158290614e66576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614e2b578082015181840152602081019050614e10565b50505050905090810190601f168015614e585780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008084600101600085815260200190815260200160002054905060008114158390614f40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614f05578082015181840152602081019050614eea565b50505050905090810190601f168015614f325780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110614f5357fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000614fc48473ffffffffffffffffffffffffffffffffffffffff166157db565b614fd157600190506152be565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b614ffc613e16565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156150ac578082015181840152602081019050615091565b50505050905090810190601f1680156150d95780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310615171578051825260208201915060208101905060208303925061514e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146151d3576040519150601f19603f3d011682016040523d82523d6000602084013e6151d8565b606091505b509150915081615246576000815111156151f55780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180615aad6032913960400191505060405180910390fd5b600081806020019051602081101561525d57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415615377576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61538081613df9565b156153f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b6153ff60008383614ce7565b61545081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061558b90919063ffffffff16565b50615467818360056155a59092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6154d182613df9565b615526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615c5e602c913960400191505060405180910390fd5b80600b6000848152602001908152602001600020908051906020019061554d929190615940565b505050565b6001816000016000828254019250508190555050565b600080836001016000848152602001908152602001600020541415905092915050565b600061559d836000018360001b614956565b905092915050565b60006155d1846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b615826565b90509392505050565b600080836001016000848152602001908152602001600020549050600081146156b6576000600182039050600060018660000180549050039050600086600001828154811061562557fe5b906000526020600020015490508087600001848154811061564257fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061567a57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506156bc565b60009150505b92915050565b600080836001016000848152602001908152602001600020549050600081146157cf576000600182039050600060018660000180549050039050600086600001828154811061570d57fe5b906000526020600020906002020190508087600001848154811061572d57fe5b906000526020600020906002020160008201548160000155600182015481600101559050506001830187600101600083600001548152602001908152602001600020819055508660000180548061578057fe5b60019003818190600052602060002090600202016000808201600090556001820160009055505090558660010160008781526020019081526020016000206000905560019450505050506157d5565b60009150505b92915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561581d57506000801b8214155b92505050919050565b60008084600101600085815260200190815260200160002054905060008114156158cd578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506158fb565b828560000160018303815481106158e057fe5b90600052602060002090600202016001018190555060009150505b9392505050565b6040518060800160405280606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061598157805160ff19168380011785556159af565b828001600101855582156159af579182015b828111156159ae578251825591602001919060010190615993565b5b5090506159bc9190615a08565b5090565b50805460018160011615610100020316600290046000825580601f106159e65750615a05565b601f016020900490600052602060002090810190615a049190615a08565b5b50565b615a2a91905b80821115615a26576000816000905550600101615a0e565b5090565b9056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744261646765466163746f72793a206d75737420686176652070617573657220726f6c6520746f20756e70617573654552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4261646765466163746f72793a206d75737420686176652070617573657220726f6c6520746f2070617573654552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220c2ad7c25ac6b3a79aa04a3f94207f4447dfab88ea143bc73385252b6cf8bb29864736f6c6343000608003368747470733a2f2f6261646765732e6d616b657264616f2e636f6d2f746f6b656e2f",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "880:6405:0:-:0;;;1634:183;5:9:-1;2:2;;;27:1;24;17:12;2:2;1634:183:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1634:183:0;;;;;;;;;;;;;;;;3419:365:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:17:17;852:12;:10;;;:12;;:::i;:::-;832:32;;883:9;874:6;;:18;;;;;;;;;;;;;;;;;;940:9;907:43;;936:1;907:43;;;;;;;;;;;;798:159;900:5:33;890:7;;:15;;;;;;;;;;;;;;;;;;986:39:2;1729:4:16;997:18:2;;1017:7;:5;;;:7;;:::i;:::-;986:10;;;:39;;:::i;:::-;1036:35;857:27;;;;;;;;;;;;;;;;;;;1063:7;:5;;;:7;;:::i;:::-;1036:10;;;:35;;:::i;:::-;1081:32;926:24;;;;;;;;;;;;;;;;;;;1105:7;:5;;;:7;;:::i;:::-;1081:10;;;:32;;:::i;:::-;1191:42;1171:16;;:62;;;;;;;;;;;;;;;;;;718:40:20;385:10;737:20;;718:18;;;:40;;:::i;:::-;3499:4:23;3491:5;:12;;;;;;;;;;;;:::i;:::-;;3523:6;3513:7;:16;;;;;;;;;;;;:::i;:::-;;3617:40;2697:10;3636:20;;3617:18;;;:40;;:::i;:::-;3667:49;3029:10;3686:29;;3667:18;;;:49;;:::i;:::-;3726:51;3402:10;3745:31;;3726:18;;;:51;;:::i;:::-;3419:365;;1723:49:0::1;;;;;;;;;;;;;;;;;;:11;;;:49;;:::i;:::-;1801:9;1778:8;;:33;;;;;;;;;;;;;;;;;;1634:183:::0;880:6405;;2144:149;2219:15;2257:31;:29;;;;;:31;;:::i;:::-;2250:38;;2144:149;:::o;1033:77:17:-;1071:7;1097:6;;;;;;;;;;;1090:13;;1033:77;:::o;6132:110:16:-;6210:25;6221:4;6227:7;6210:10;;;:25;;:::i;:::-;6132:110;;:::o;1449:198:20:-;1547:10;1532:25;;:11;:25;;;;;1524:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:4;1600:20;:33;1621:11;1600:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1449:198;:::o;19650:98:23:-;19733:8;19722;:19;;;;;;;;;;;;:::i;:::-;;19650:98;:::o;1121:534:9:-;1183:15;1233:2;1214:8;;:15;;:21;;:69;;;;;1261:21;:19;;;:21;;:::i;:::-;1239:44;;:10;:44;;;1214:69;1210:412;;;1554:55;1578:8;;1554:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1554:55:9;;;;;;1606:2;1588:8;;:15;;:20;1554:23;;;;;:55;;:::i;:::-;1531:80;;;;1210:412;1638:10;1631:17;;1121:534;;:::o;6449:184:16:-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;;;:12;;:::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;760:109:9:-;820:7;846:16;;;;;;;;;;;839:23;;760:109;:::o;10857:1080:5:-;10978:14;11031:2;11023:5;:10;11012:1;:8;:21;11008:330;;;11049:278;11074:252;11139:92;11249:1;:8;11283:2;11275:5;:10;11074:47;;;;;:252;;:::i;:::-;11049:24;;;;;:278;;:::i;:::-;11008:330;11584:2;11575:11;;;;11855:42;11846:5;11843:1;11839:13;11833:20;11829:69;11819:79;;11924:6;11917:13;;10857:1080;;;;:::o;4831:141:32:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;;;:41;;:::i;:::-;4917:48;;4831:141;;;;:::o;1295:378:6:-;1483:12;1235:10;1554:37;;1605:9;1628:6;1648:8;1518:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1518:148:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;1518:148:6;1511:155;;1295:378;;;;;:::o;1492:170:7:-;1635:9;1629:16;1622:4;1611:9;1607:20;1600:46;1578:404:32;1641:4;1662:21;1672:3;1677:5;1662:9;;;:21;;:::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:32;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;880:6405:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "880:6405:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;880:6405:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;915:140:20;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;915:140:20;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5384:219:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5384:219:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4690:90:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4690:90:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9350:209;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9350:209:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8684:381;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;8684:381:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7564:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11061:300;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;11061:300:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3826:112:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3826:112:16;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1821:107:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1821:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4188:223:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4188:223:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7259:152:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7259:152:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3343:346:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3343:346:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3343:346:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3343:346:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3343:346:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5362:205:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5362:205:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2494:156:2;;;:::i;:::-;;12010:149:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12010:149:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;371:241:24;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;371:241:24;;;;;;;;;;;;;;;;;:::i;:::-;;4970:193:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4970:193:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8102:161:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;8102:161:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6712:242:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6712:242:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2464:123;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2464:123:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;2464:123:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2464:123:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2464:123:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2464:123:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1007:76:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4418:167:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4418:167:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6798:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6798:87:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;816:68:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3988:211:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3988:211:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1656:145:17;;;:::i;:::-;;2260:140:2;;;:::i;:::-;;1033:77:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3509:136:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3509:136:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2494:137;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2494:137:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4889:94:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4889:94:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:49:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9858:290:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9858:290:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3856:113:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12882:282:23;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;12882:282:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;12882:282:23;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;12882:282:23;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12882:282:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12882:282:23;;;;;;;;;;;;;;;:::i;:::-;;5826:740;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5826:740:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5826:740:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2799:125:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2799:125:16;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1932:107:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1932:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4255:489:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4255:489:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;4255:489:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;4255:489:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4255:489:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4255:489:0;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;4255:489:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;4255:489:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4255:489:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4255:489:0;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;4255:489:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;4255:489:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4255:489:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4255:489:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;760:109:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5844:668:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5844:668:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;5844:668:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;5844:668:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5844:668:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5844:668:0;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;5844:668:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;5844:668:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5844:668:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5844:668:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4645:226:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4645:226:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;888:62:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2043:125;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2043:125:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10470:154:23;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;10470:154:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1950:240:17;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1950:240:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;915:140:20;992:4;1015:20;:33;1036:11;1015:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:40;;915:140;;;:::o;5384:219:0:-;5473:7;1236::33;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5515:10:0::1;5496:9;:16;;;;:29;5488:66;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;5567:19;:31;5587:10;5567:31;;;;;;;;;;;;5560:38;;5384:219:::0;;;:::o;4690:90:23:-;4736:13;4768:5;4761:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4690:90;:::o;9350:209::-;9418:7;9445:16;9453:7;9445;:16::i;:::-;9437:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9528:15;:24;9544:7;9528:24;;;;;;;;;;;;;;;;;;;;;9521:31;;9350:209;;;:::o;8684:381::-;8764:13;8780:16;8788:7;8780;:16::i;:::-;8764:32;;8820:5;8814:11;;:2;:11;;;;8806:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8898:5;8882:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;8907:37;8924:5;8931:12;:10;:12::i;:::-;8907:16;:37::i;:::-;8882:62;8874:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9037:21;9046:2;9050:7;9037:8;:21::i;:::-;8684:381;;;:::o;7564:200::-;7617:7;7736:21;:12;:19;:21::i;:::-;7729:28;;7564:200;:::o;11061:300::-;11220:41;11239:12;:10;:12::i;:::-;11253:7;11220:18;:41::i;:::-;11212:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11326:28;11336:4;11342:2;11346:7;11326:9;:28::i;:::-;11061:300;;;:::o;3826:112:16:-;3883:7;3909:6;:12;3916:4;3909:12;;;;;;;;;;;:22;;;3902:29;;3826:112;;;:::o;1821:107:2:-;1872:4;1891:32;1729:4:16;1899:18:2;;1919:3;1891:7;:32::i;:::-;1884:39;;1821:107;;;:::o;4188:223:16:-;4271:45;4279:6;:12;4286:4;4279:12;;;;;;;;;;;:22;;;4303:12;:10;:12::i;:::-;4271:7;:45::i;:::-;4263:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4379:25;4390:4;4396:7;4379:10;:25::i;:::-;4188:223;;:::o;7259:152:23:-;7348:7;7374:30;7398:5;7374:13;:20;7388:5;7374:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;7367:37;;7259:152;;;;:::o;3343:346:0:-;3419:18;3439:25;3466:19;1236:7:33;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3520:10:0::1;3501:9;:16;;;;:29;3493:66;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3565:29;;:::i;:::-;3597:9;3607:10;3597:21;;;;;;;;;;;;;;;;;;3565:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3632:8;:13;;;3647:8;:20;;;3669:8;:14;;;3624:60;;;;;;;3343:346:::0;;;;;:::o;5362:205:16:-;5459:12;:10;:12::i;:::-;5448:23;;:7;:23;;;5440:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5534:26;5546:4;5552:7;5534:11;:26::i;:::-;5362:205;;:::o;2494:156:2:-;2538:34;926:24;;;;;;;;;;;;;;;;;;;2559:12;:10;:12::i;:::-;2538:7;:34::i;:::-;2530:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:10;:8;:10::i;:::-;2494:156::o;12010:149:23:-;12113:39;12130:4;12136:2;12140:7;12113:39;;;;;;;;;;;;:16;:39::i;:::-;12010:149;;;:::o;371:241:24:-;487:41;506:12;:10;:12::i;:::-;520:7;487:18;:41::i;:::-;479:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:14;597:7;591:5;:14::i;:::-;371:241;:::o;4970:193:0:-;5048:7;1236::33;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5071:16:0::1;5079:7;5071;:16::i;:::-;5063:58;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;5134:15;:24;5150:7;5134:24;;;;;;;;;;;;5127:31;;4970:193:::0;;;:::o;8102:161:23:-;8169:7;8189:15;8210:22;8226:5;8210:12;:15;;:22;;;;:::i;:::-;8188:44;;;8249:7;8242:14;;;8102:161;;;:::o;6712:242:0:-;6778:4;1236:7:33;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6789:18:0::1;6810:25;6827:7;6810:16;:25::i;:::-;6789:46;;6841:13;6846:7;6841:4;:13::i;:::-;6894:38;6930:1;6894:19;:31;6914:10;6894:31;;;;;;;;;;;;:35;;:38;;;;:::i;:::-;6860:19;:31;6880:10;6860:31;;;;;;;;;;;:72;;;;6945:4;6938:11;;;6712:242:::0;;;:::o;2464:123::-;2533:4;1247:12:17;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2545:20:0::1;2557:7;2545:11;:20::i;:::-;2578:4;2571:11;;2464:123:::0;;;:::o;1007:76:33:-;1046:4;1069:7;;;;;;;;;;;1062:14;;1007:76;:::o;4418:167:23:-;4482:7;4508:70;4525:7;4508:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4501:77;;4418:167;;;:::o;6798:87::-;6838:13;6870:8;6863:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6798:87;:::o;816:68:2:-;857:27;;;;;;;;;;;;;;;;;;;816:68;:::o;3988:211:23:-;4052:7;4096:1;4079:19;;:5;:19;;;;4071:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4163:29;:13;:20;4177:5;4163:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4156:36;;3988:211;;;:::o;1656:145:17:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:1:::1;1725:40;;1746:6;::::0;::::1;;;;;;;;;1725:40;;;;;;;;;;;;1792:1;1775:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1656:145::o:0;2260:140:2:-;2298:34;926:24;;;;;;;;;;;;;;;;;;;2319:12;:10;:12::i;:::-;2298:7;:34::i;:::-;2290:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2387:8;:6;:8::i;:::-;2260:140::o;1033:77:17:-;1071:7;1097:6;;;;;;;;;;;1090:13;;1033:77;:::o;3509:136:16:-;3582:7;3608:30;3632:5;3608:6;:12;3615:4;3608:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;3601:37;;3509:136;;;;:::o;2494:137::-;2563:4;2586:38;2616:7;2586:6;:12;2593:4;2586:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;2579:45;;2494:137;;;;:::o;4889:94:23:-;4937:13;4969:7;4962:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4889:94;:::o;1684:49:16:-;1729:4;1684:49;;;:::o;9858:290:23:-;9972:12;:10;:12::i;:::-;9960:24;;:8;:24;;;;9952:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10070:8;10025:18;:32;10044:12;:10;:12::i;:::-;10025:32;;;;;;;;;;;;;;;:42;10058:8;10025:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;10122:8;10093:48;;10108:12;:10;:12::i;:::-;10093:48;;;10132:8;10093:48;;;;;;;;;;;;;;;;;;;;;;9858:290;;:::o;3856:113:0:-;3920:13;1236:7:33;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3948:9:0::1;:16;;;;3941:23;;3856:113:::0;:::o;12882:282:23:-;13013:41;13032:12;:10;:12::i;:::-;13046:7;13013:18;:41::i;:::-;13005:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:39;13132:4;13138:2;13142:7;13151:5;13118:13;:39::i;:::-;12882:282;;;;:::o;5826:740::-;5891:13;5924:16;5932:7;5924;:16::i;:::-;5916:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6003:23;6029:10;:19;6040:7;6029:19;;;;;;;;;;;6003:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6147:1;6127:8;6121:22;;;;;;;;;;;;;;;;:27;6117:74;;;6171:9;6164:16;;;;;6117:74;6319:1;6299:9;6293:23;:27;6289:110;;;6367:8;6377:9;6350:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6350:37:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6350:37:23;;;6336:52;;;;;6289:110;6529:8;6539:18;:7;:16;:18::i;:::-;6512:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6512:46:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6512:46:23;;;6498:61;;;5826:740;;;;:::o;2799:125:16:-;2862:7;2888:29;:6;:12;2895:4;2888:12;;;;;;;;;;;:20;;:27;:29::i;:::-;2881:36;;2799:125;;;:::o;1932:107:2:-;1987:4;2006:28;857:27;;;;;;;;;;;;;;;;;;;2030:3;2006:7;:28::i;:::-;1999:35;;1932:107;;;:::o;4255:489:0:-;4391:19;1404:25:2;1416:12;:10;:12::i;:::-;1404:11;:25::i;:::-;1396:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:7:33::1;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4419:33:0::2;;:::i;:::-;4455:122;;;;;;;;4484:4;4455:122;;;;4538:11;4455:122;;;;4565:5;4455:122;;;;4504:12;:10;:12::i;:::-;4455:122;;;;::::0;4419:158:::2;;4583:9;4598:12;4583:28;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4583:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4631:23;4652:1;4631:9;:16;;;;:20;;:23;;;;:::i;:::-;4617:37;;4665:50;4677:11;4690:4;4696:11;4709:5;4665:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4665:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4665:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4665:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4728:11;4721:18;;;4255:489:::0;;;;;:::o;760:109:9:-;820:7;846:16;;;;;;;;;;;839:23;;760:109;:::o;5844:668:0:-;5965:16;1236:7:33;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6016:10:0::1;5997:9;:16;;;;:29;5989:66;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;6069:8;;;;;;;;;;;:15;;;6085:12;:10;:12::i;:::-;6069:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;6069:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;6069:29:0;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;6069:29:0;;;;;;;;;;;;;;;;:116;;;;6102:83;6115:8;;;;;;;;;;;:14;;;6130:10;6115:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;6115:26:0;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;6115:26:0;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;6115:26:0;;;;;;;;;;;;;;;;6170:12;:10;:12::i;:::-;6153:30;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6153:30:0;;;6143:41;;;;;;6102:5;:12;;:83;;;;;:::i;:::-;6069:116;6061:153;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;6221:41;6239:12;:10;:12::i;:::-;6253:8;6221:17;:41::i;:::-;;6328:10;6300:15;:25;6316:8;6300:25;;;;;;;;;;;:38;;;;6378;6414:1;6378:19;:31;6398:10;6378:31;;;;;;;;;;;;:35;;:38;;;;:::i;:::-;6344:19;:31;6364:10;6344:31;;;;;;;;;;;:72;;;;6427:59;6442:12;:10;:12::i;:::-;6455:8;6465:10;6477:8;6427:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6427:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6499:8;6492:15;;5844:668:::0;;;;;:::o;4645:226:16:-;4729:45;4737:6;:12;4744:4;4737:12;;;;;;;;;;;:22;;;4761:12;:10;:12::i;:::-;4729:7;:45::i;:::-;4721:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4838:26;4850:4;4856:7;4838:11;:26::i;:::-;4645:226;;:::o;888:62:2:-;926:24;;;;;;;;;;;;;;;;;;;888:62;:::o;2043:125::-;2104:4;1295:21;1303:12;:10;:12::i;:::-;1295:7;:21::i;:::-;1287:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2116:30:::1;857:27;;;;;;;::::0;::::1;;;;;;;;;;;2142:3;2116:9;:30::i;:::-;2159:4;2152:11;;2043:125:::0;;;:::o;10470:154:23:-;10559:4;10582:18;:25;10601:5;10582:25;;;;;;;;;;;;;;;:35;10608:8;10582:35;;;;;;;;;;;;;;;;;;;;;;;;;10575:42;;10470:154;;;;:::o;1950:240:17:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2058:1:::1;2038:22;;:8;:22;;;;2030:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2147:8;2118:38;;2139:6;::::0;::::1;;;;;;;;;2118:38;;;;;;;;;;;;2175:8;2166:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1950:240:::0;:::o;1121:534:9:-;1183:15;1233:2;1214:8;;:15;;:21;;:69;;;;;1261:21;:19;:21::i;:::-;1239:44;;:10;:44;;;1214:69;1210:412;;;1554:55;1578:8;;1554:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1554:55:9;;;;;;1606:2;1588:8;;:15;;:20;1554:23;:55::i;:::-;1531:80;;;;1210:412;1638:10;1631:17;;1121:534;;:::o;10857:1080:5:-;10978:14;11031:2;11023:5;:10;11012:1;:8;:21;11008:330;;;11049:278;11074:252;11139:92;11249:1;:8;11283:2;11275:5;:10;11074:47;:252::i;:::-;11049:24;:278::i;:::-;11008:330;11584:2;11575:11;;;;11855:42;11846:5;11843:1;11839:13;11833:20;11829:69;11819:79;;11924:6;11917:13;;10857:1080;;;;:::o;4831:141:32:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;:41::i;:::-;4917:48;;4831:141;;;;:::o;1295:378:6:-;1483:12;1235:10;1554:37;;1605:9;1628:6;1648:8;1518:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1518:148:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;1518:148:6;1511:155;;1295:378;;;;;:::o;1492:170:7:-;1635:9;1629:16;1622:4;1611:9;1607:20;1600:46;14333:117:23;14390:4;14413:30;14435:7;14413:12;:21;;:30;;;;:::i;:::-;14406:37;;14333:117;;;:::o;2144:149:0:-;2219:15;2257:31;:29;:31::i;:::-;2250:38;;2144:149;:::o;21357:155:23:-;21449:2;21422:15;:24;21438:7;21422:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;21497:7;21493:2;21466:39;;21475:16;21483:7;21475;:16::i;:::-;21466:39;;;;;;;;;;;;21357:155;;:::o;6990:121:31:-;7059:7;7085:19;7093:3;:10;;7085:7;:19::i;:::-;7078:26;;6990:121;;;:::o;14811:329:23:-;14896:4;14920:16;14928:7;14920;:16::i;:::-;14912:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14995:13;15011:16;15019:7;15011;:16::i;:::-;14995:32;;15056:5;15045:16;;:7;:16;;;:51;;;;15089:7;15065:31;;:20;15077:7;15065:11;:20::i;:::-;:31;;;15045:51;:87;;;;15100:32;15117:5;15124:7;15100:16;:32::i;:::-;15045:87;15037:96;;;14811:329;;;;:::o;7102:180:0:-;7197:4;7196:5;7188:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7243:34;7259:4;7265:2;7269:7;7243:15;:34::i;:::-;7102:180;;;:::o;6449:184:16:-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;:12::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;7616:135:32:-;7687:7;7721:22;7725:3;:10;;7737:5;7721:3;:22::i;:::-;7713:31;;7706:38;;7616:135;;;;:::o;6639:188:16:-;6713:36;6741:7;6713:6;:12;6720:4;6713:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;6709:112;;;6797:12;:10;:12::i;:::-;6770:40;;6788:7;6770:40;;6782:4;6770:40;;;;;;;;;;6709:112;6639:188;;:::o;1709:117:33:-;1427:7;;;;;;;;;;;1419:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:5:::1;1767:7;;:15;;;;;;;;;;;;;;;;;;1797:22;1806:12;:10;:12::i;:::-;1797:22;;;;;;;;;;;;;;;;;;;;;;1709:117::o:0;17444:502:23:-;17503:13;17519:16;17527:7;17519;:16::i;:::-;17503:32;;17546:48;17567:5;17582:1;17586:7;17546:20;:48::i;:::-;17632:29;17649:1;17653:7;17632:8;:29::i;:::-;17748:1;17717:10;:19;17728:7;17717:19;;;;;;;;;;;17711:33;;;;;;;;;;;;;;;;:38;17707:95;;17772:10;:19;17783:7;17772:19;;;;;;;;;;;;17765:26;;;;:::i;:::-;17707:95;17812:36;17840:7;17812:13;:20;17826:5;17812:20;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;;17859:28;17879:7;17859:12;:19;;:28;;;;:::i;:::-;;17931:7;17927:1;17903:36;;17912:5;17903:36;;;;;;;;;;;;17444:502;;:::o;7439:224:31:-;7519:7;7528;7548:11;7561:13;7578:22;7582:3;:10;;7594:5;7578:3;:22::i;:::-;7547:53;;;;7626:3;7618:12;;7648:5;7640:14;;7610:46;;;;;;;;;7439:224;;;;;:::o;1274:134:22:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;19650:98:23:-;19733:8;19722;:19;;;;;;;;;;;;:::i;:::-;;19650:98;:::o;8082:202:31:-;8189:7;8231:44;8236:3;:10;;8256:3;8248:12;;8262;8231:4;:44::i;:::-;8223:53;;8208:69;;8082:202;;;;;:::o;7172:112:32:-;7232:7;7258:19;7266:3;:10;;7258:7;:19::i;:::-;7251:26;;7172:112;;;:::o;1535:115:33:-;1236:7;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:4:::1;1594:7;;:14;;;;;;;;;;;;;;;;;;1623:20;1630:12;:10;:12::i;:::-;1623:20;;;;;;;;;;;;;;;;;;;;;;1535:115::o:0;6052:147:32:-;6126:7;6168:22;6172:3;:10;;6184:5;6168:3;:22::i;:::-;6160:31;;6145:47;;6052:147;;;;:::o;5368:156::-;5448:4;5471:46;5481:3;:10;;5509:5;5501:14;;5493:23;;5471:9;:46::i;:::-;5464:53;;5368:156;;;;:::o;13869:269:23:-;13982:28;13992:4;13998:2;14002:7;13982:9;:28::i;:::-;14028:48;14051:4;14057:2;14061:7;14070:5;14028:22;:48::i;:::-;14020:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13869:269;;;;:::o;169:723:34:-;225:13;451:1;442:5;:10;438:51;;;468:10;;;;;;;;;;;;;;;;;;;;;438:51;498:12;513:5;498:20;;528:14;552:75;567:1;559:4;:9;552:75;;584:8;;;;;;;614:2;606:10;;;;;;;;;552:75;;;636:19;668:6;658:17;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;658:17:34;;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;658:17:34;;;;636:39;;685:13;710:1;701:6;:10;685:26;;728:5;721:12;;743:112;758:1;750:4;:9;743:112;;816:2;809:4;:9;;;;;;804:2;:14;793:27;;775:6;782:7;;;;;;;775:15;;;;;;;;;;;:45;;;;;;;;;;;842:2;834:10;;;;;;;;;743:112;;;878:6;864:21;;;;;;169:723;;;;:::o;5605:115:32:-;5668:7;5694:19;5702:3;:10;;5694:7;:19::i;:::-;5687:26;;5605:115;;;:::o;464:779:19:-;555:4;571:20;594:4;571:27;;614:9;626:1;614:13;;609:515;633:5;:12;629:1;:16;609:515;;;666:20;689:5;695:1;689:8;;;;;;;;;;;;;;666:31;;732:12;716;:28;712:402;;884:12;898;867:44;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;867:44:19;;;857:55;;;;;;842:70;;712:402;;;1071:12;1085;1054:44;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1054:44:19;;;1044:55;;;;;;1029:70;;712:402;609:515;647:3;;;;;;;609:515;;;;1232:4;1216:12;:20;1209:27;;;464:779;;;;;:::o;2891:239:0:-;2972:4;2984:36;2990:2;2994:25;:15;:23;:25::i;:::-;2984:5;:36::i;:::-;3026:49;3039:25;:15;:23;:25::i;:::-;3066:8;3026:12;:49::i;:::-;3081:27;:15;:25;:27::i;:::-;3121:4;3114:11;;2891:239;;;;:::o;834:176:22:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1578:404:32:-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:32;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;6758:149:31:-;6842:4;6865:35;6875:3;:10;;6895:3;6887:12;;6865:9;:35::i;:::-;6858:42;;6758:149;;;;:::o;4450:108::-;4506:7;4532:3;:12;;:19;;;;4525:26;;4450:108;;;:::o;18323:559:23:-;18440:4;18420:24;;:16;18428:7;18420;:16::i;:::-;:24;;;18412:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18522:1;18508:16;;:2;:16;;;;18500:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18576:39;18597:4;18603:2;18607:7;18576:20;:39::i;:::-;18677:29;18694:1;18698:7;18677:8;:29::i;:::-;18717:35;18744:7;18717:13;:19;18731:4;18717:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;18762:30;18784:7;18762:13;:17;18776:2;18762:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;18803:29;18820:7;18829:2;18803:12;:16;;:29;;;;;:::i;:::-;;18867:7;18863:2;18848:27;;18857:4;18848:27;;;;;;;;;;;;18323:559;;;:::o;4390:201:32:-;4457:7;4505:5;4484:3;:11;;:18;;;;:26;4476:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;5140:147::-;5213:4;5236:44;5244:3;:10;;5272:5;5264:14;;5256:23;;5236:7;:44::i;:::-;5229:51;;5140:147;;;;:::o;22068:93:23:-;;;;:::o;6731:135:32:-;6801:4;6824:35;6832:3;:10;;6852:5;6844:14;;6824:7;:35::i;:::-;6817:42;;6731:135;;;;:::o;6539:140:31:-;6616:4;6639:33;6647:3;:10;;6667:3;6659:12;;6639:7;:33::i;:::-;6632:40;;6539:140;;;;:::o;4901:274::-;4968:7;4977;5026:5;5004:3;:12;;:19;;;;:27;4996:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5081:22;5106:3;:12;;5119:5;5106:19;;;;;;;;;;;;;;;;;;5081:44;;5143:5;:10;;;5155:5;:12;;;5135:33;;;;;4901:274;;;;;:::o;1692:187:22:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1797:29:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;5582:315:31:-;5676:7;5695:16;5714:3;:12;;:17;5727:3;5714:17;;;;;;;;;;;;5695:36;;5761:1;5749:8;:13;;5764:12;5741:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5741:36:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5830:3;:12;;5854:1;5843:8;:12;5830:26;;;;;;;;;;;;;;;;;;:33;;;5823:40;;;5582:315;;;;;:::o;3951:107:32:-;4007:7;4033:3;:11;;:18;;;;4026:25;;3951:107;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;20301:1050:23:-;20421:4;20446:15;:2;:13;;;:15::i;:::-;20441:58;;20484:4;20477:11;;;;20441:58;20568:12;20582:23;20609:2;:7;;20653:45;;;20712:12;:10;:12::i;:::-;20738:4;20756:7;20777:5;20617:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20617:175:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;20617:175:23;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;20617:175:23;20609:184;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;20609:184:23;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;20567:226:23;;;;20808:7;20803:542;;20855:1;20835:10;:17;:21;20831:376;;;21000:10;20994:17;21060:15;21047:10;21043:2;21039:19;21032:44;20949:145;21132:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20803:542;21237:13;21264:10;21253:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;21253:32:23;;;;;;;;;;;;;;;;21237:48;;1035:10;21317:16;;21307:26;;;:6;:26;;;;21299:35;;;;;20301:1050;;;;;;;:::o;1065:112:30:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;16870:393:23:-;16963:1;16949:16;;:2;:16;;;;16941:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17021:16;17029:7;17021;:16::i;:::-;17020:17;17012:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17081:45;17110:1;17114:2;17118:7;17081:20;:45::i;:::-;17137:30;17159:7;17137:13;:17;17151:2;17137:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;17178:29;17195:7;17204:2;17178:12;:16;;:29;;;;;:::i;:::-;;17248:7;17244:2;17223:33;;17240:1;17223:33;;;;;;;;;;;;16870:393;;:::o;19215:212::-;19314:16;19322:7;19314;:16::i;:::-;19306:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19411:9;19389:10;:19;19400:7;19389:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;19215:212;;:::o;1183:178:30:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;4237:123:31:-;4308:4;4352:1;4331:3;:12;;:17;4344:3;4331:17;;;;;;;;;;;;:22;;4324:29;;4237:123;;;;:::o;6434:129:32:-;6501:4;6524:32;6529:3;:10;;6549:5;6541:14;;6524:4;:32::i;:::-;6517:39;;6434:129;;;;:::o;6206:174:31:-;6295:4;6318:55;6323:3;:10;;6343:3;6335:12;;6365:5;6357:14;;6349:23;;6318:4;:55::i;:::-;6311:62;;6206:174;;;;;:::o;2150:1512:32:-;2216:4;2332:18;2353:3;:12;;:19;2366:5;2353:19;;;;;;;;;;;;2332:40;;2401:1;2387:10;:15;2383:1273;;2744:21;2781:1;2768:10;:14;2744:38;;2796:17;2837:1;2816:3;:11;;:18;;;;:22;2796:42;;3078:17;3098:3;:11;;3110:9;3098:22;;;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;:38;;;;3358:1;3342:13;:17;3316:3;:12;;:23;3329:9;3316:23;;;;;;;;;;;:43;;;;3465:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;2150:1512;;;;;:::o;2641:1517:31:-;2705:4;2819:16;2838:3;:12;;:17;2851:3;2838:17;;;;;;;;;;;;2819:36;;2882:1;2870:8;:13;2866:1286;;3226:21;3261:1;3250:8;:12;3226:36;;3276:17;3318:1;3296:3;:12;;:19;;;;:23;3276:43;;3559:26;3588:3;:12;;3601:9;3588:23;;;;;;;;;;;;;;;;;;3559:52;;3733:9;3703:3;:12;;3716:13;3703:27;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;3855:1;3839:13;:17;3808:3;:12;;:28;3821:9;:14;;;3808:28;;;;;;;;;;;:48;;;;3962:3;:12;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4055:3;:12;;:17;4068:3;4055:17;;;;;;;;;;;4048:24;;;4094:4;4087:11;;;;;;;;2866:1286;4136:5;4129:12;;;2641:1517;;;;;:::o;685:610:29:-;745:4;1003:16;1029:19;1051:66;1029:88;;;;1218:7;1206:20;1194:32;;1257:11;1245:8;:23;;:42;;;;;1284:3;1272:15;;:8;:15;;1245:42;1237:51;;;;685:610;;;:::o;1795:678:31:-;1871:4;1985:16;2004:3;:12;;:17;2017:3;2004:17;;;;;;;;;;;;1985:36;;2048:1;2036:8;:13;2032:435;;;2102:3;:12;;2120:38;;;;;;;;2137:3;2120:38;;;;2150:5;2120:38;;;2102:57;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2102:57:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:3;:12;;:19;;;;2294:3;:12;;:17;2307:3;2294:17;;;;;;;;;;;:39;;;;2354:4;2347:11;;;;;2032:435;2425:5;2389:3;:12;;2413:1;2402:8;:12;2389:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2451:5;2444:12;;;1795:678;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.6.8;\n\n/// @title Non-transferable Badges for Maker Ecosystem Activity, issue #537\n/// @author Nazzareno Massari, Scott Herren\n/// @notice BadgeFactory to manage Templates and activate Non-transferable Badges for redeemers\n/// @dev see https://github.com/makerdao/community/issues/537\n/// @dev All function calls are currently implemented without side effecs through TDD approach\n/// @dev OpenZeppelin library is used for secure contract development\n\nimport \"./BadgeRoles.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/cryptography/MerkleProof.sol\";\n\n\ninterface InsigniaDAO {\n\n    function verify(address guy) external view returns (bool);\n    function roots(uint256 templateId) external view returns (bytes32);\n\n}\n\ncontract BadgeFactory is BadgeRoles, ERC721Burnable {\n\n  /// Libraries\n  using SafeMath for uint256;\n  using Counters for Counters.Counter;\n  using MerkleProof for bytes32[];\n\n  Counters.Counter private _tokenIdTracker;\n\n  InsigniaDAO internal insignia;\n\n  /// Events\n  event NewTemplate(uint256 templateId, string name, string description, string image);\n  event BadgeActivated(address redeemer, uint256 tokenId, uint256 templateId, string tokenURI);\n\n  struct BadgeTemplate {\n    string name;\n    string description;\n    string image;\n    address owner;\n  }\n\n  BadgeTemplate[] private templates;\n\n  /// Supplies of each badge template\n  mapping(uint256 => uint256) private _templateQuantities;\n  mapping(uint256 => uint256) private _tokenTemplates;\n\n  constructor(address insignia_)\n    ERC721(\"InsigniaBadges\", \"BADGES\")\n    public\n  {\n    _setBaseURI(\"https://badges.makerdao.com/token/\");\n    insignia = InsigniaDAO(insignia_);\n\n  }\n\n  /// @notice Fallback function\n  /// @dev Added not payable to revert transactions not matching any other function which send value\n  fallback() external {\n    revert();\n  }\n\n  /// @notice OpenGSN _msgSender()\n  /// @dev override _msgSender() in OZ Context.sol and BadgeRoles.sol\n  /// @return msg.sender after relay call\n  function _msgSender() internal override(Context, BadgeRoles) view returns (address payable) {\n            return BaseRelayRecipient._msgSender();\n  }\n\n  /// @notice Set the baseURI\n  /// @dev Update the baseURI specified in the constructor\n  /// @param baseURI New baseURI\n  /// @return True if the new baseURI is set\n  function setBaseURI(string memory baseURI) public onlyOwner returns (bool) {\n    _setBaseURI(baseURI);\n    return true;\n  }\n\n  /// @notice Mint new token with tokenURI\n  /// @dev Use an auto-generated tokenId\n  /// @dev automatically concatenate baseURI with tokenURI via abi.encodePacked\n  /// @param to owner of the new token\n  /// @param tokenURI an <ipfs-hash>.json filename\n  /// @return True if the new token is minted\n  function _mintWithTokenURI(address to, string memory tokenURI) internal returns (bool) {\n    _mint(to, _tokenIdTracker.current());\n    _setTokenURI(_tokenIdTracker.current(), tokenURI);\n    _tokenIdTracker.increment();\n    return true;\n  }\n\n  /// @notice Getter function for templates\n  /// @dev Check if templateId exists\n  /// @param templateId Template Id of the template to return\n  /// @return name description image Of the specified templateId\n  function getTemplate(uint256 templateId) public view whenNotPaused returns (string memory name, string memory description, string memory image) {\n    require(templates.length > templateId, \"No template with that id\");\n    BadgeTemplate memory template = templates[templateId];\n    return (template.name, template.description, template.image);\n  }\n\n\n  /// Templates\n\n  /// @notice Getter function for templates count\n  /// @dev Return lenght of template array\n  /// @return count The current number of templates\n  function getTemplatesCount() public view whenNotPaused returns (uint256 count) {\n    return templates.length;\n  }\n\n  /// @notice Create a new template\n  /// @dev Access restricted to only Templaters\n  /// @param name The name of the new template\n  /// @param description A description of the new template\n  /// @param image A filename of the new template\n  /// @return _templateId The template Id\n  function createTemplate(string memory name, string memory description, string memory image) public onlyTemplater whenNotPaused returns (uint256 _templateId) {\n\n    BadgeTemplate memory _newTemplate = BadgeTemplate({\n       name: name,\n       owner: _msgSender(),\n       description: description,\n       image: image\n    });\n    templates.push(_newTemplate);\n    _templateId = templates.length.sub(1);\n    emit NewTemplate(_templateId, name, description, image);\n    return _templateId;\n  }\n\n  // Badges\n\n  /// @notice Getter function for templateId associated with the tokenId\n  /// @dev Check if the tokenId exists\n  /// @param tokenId Token Id of the Badge\n  /// @return Template Id associated with the tokenId\n  function getBadgeTemplate(uint256 tokenId) public view whenNotPaused returns (uint256) {\n    require(_exists(tokenId), \"ERC721: No token with that id\");\n    return _tokenTemplates[tokenId];\n  }\n\n  /// @notice Getter function for number of badges associated with templateId\n  /// @dev Check if the template Id exists\n  /// @param templateId Template Id\n  /// @return Quantity of Badges associated with templateId\n  function getBadgeTemplateQuantity(uint256 templateId) public view whenNotPaused returns (uint256) {\n    require(templates.length > templateId, \"No template with that id\");\n    return _templateQuantities[templateId];\n  }\n\n  /// @notice Activate Badge by redeemers\n  /// @dev Verify if the caller is a redeemer\n  /// @param proof Merkle Proof\n  /// @param templateId Template Id\n  /// @param tokenURI Token URI\n  /// @return _tokenId Token Id of the new Badge\n  function activateBadge(bytes32[] memory proof, uint256 templateId, string memory tokenURI) public whenNotPaused returns (uint256 _tokenId) {\n    require(templates.length > templateId, \"No template with that id\");\n    require(insignia.verify(_msgSender()) || proof.verify(insignia.roots(templateId), keccak256(abi.encodePacked(_msgSender()))), \"Caller is not a redeemer\");\n\n    _mintWithTokenURI(_msgSender(), tokenURI);\n\n    // Increase the quantities\n    _tokenTemplates[_tokenId] = templateId;\n    _templateQuantities[templateId] = _templateQuantities[templateId].add(1);\n    emit BadgeActivated(_msgSender(),_tokenId, templateId, tokenURI);\n    return _tokenId;\n  }\n\n  /// @notice Burn Badge\n  /// @dev burn() Check if the caller is approved or owner of the Badge\n  /// @param tokenId Token Id of the Badge to burn\n  /// @return True if the Badge has been burned\n  function burnBadge(uint256 tokenId) public whenNotPaused returns (bool){\n    uint256 templateId = getBadgeTemplate(tokenId);\n    burn(tokenId);\n    _templateQuantities[templateId] = _templateQuantities[templateId].sub(1);\n    return true;\n  }\n\n  /// @notice ERC721 _transfer() Disabled\n  /// @dev _transfer() has been overriden\n  /// @dev reverts on transferFrom() and safeTransferFrom()\n  function _transfer(address from, address to, uint256 tokenId) internal override {\n    require(!true, \"ERC721: token transfer disabled\");\n    super._transfer(from, to, tokenId);\n  }\n\n}\n",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"insignia_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"BadgeActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"}],\"name\":\"NewTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEMPLATER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"activateBadge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"addTemplater\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burnBadge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"}],\"name\":\"createTemplate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getBadgeTemplate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"}],\"name\":\"getBadgeTemplateQuantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"templateId\",\"type\":\"uint256\"}],\"name\":\"getTemplate\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTemplatesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"isTemplater\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"activateBadge(bytes32[],uint256,string)\":{\"details\":\"Verify if the caller is a redeemer\",\"params\":{\"proof\":\"Merkle Proof\",\"templateId\":\"Template Id\",\"tokenURI\":\"Token URI\"},\"returns\":{\"_tokenId\":\"Token Id of the new Badge\"}},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"burnBadge(uint256)\":{\"details\":\"burn() Check if the caller is approved or owner of the Badge\",\"params\":{\"tokenId\":\"Token Id of the Badge to burn\"},\"returns\":{\"_0\":\"True if the Badge has been burned\"}},\"createTemplate(string,string,string)\":{\"details\":\"Access restricted to only Templaters\",\"params\":{\"description\":\"A description of the new template\",\"image\":\"A filename of the new template\",\"name\":\"The name of the new template\"},\"returns\":{\"_templateId\":\"The template Id\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"getBadgeTemplate(uint256)\":{\"details\":\"Check if the tokenId exists\",\"params\":{\"tokenId\":\"Token Id of the Badge\"},\"returns\":{\"_0\":\"Template Id associated with the tokenId\"}},\"getBadgeTemplateQuantity(uint256)\":{\"details\":\"Check if the template Id exists\",\"params\":{\"templateId\":\"Template Id\"},\"returns\":{\"_0\":\"Quantity of Badges associated with templateId\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getTemplate(uint256)\":{\"details\":\"Check if templateId exists\",\"params\":{\"templateId\":\"Template Id of the template to return\"},\"returns\":{\"name\":\"description image Of the specified templateId\"}},\"getTemplatesCount()\":{\"details\":\"Return lenght of template array\",\"returns\":{\"count\":\"The current number of templates\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"pause()\":{\"details\":\"the caller must have the 'PAUSER_ROLE'\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"setBaseURI(string)\":{\"details\":\"Update the baseURI specified in the constructor\",\"params\":{\"baseURI\":\"New baseURI\"},\"returns\":{\"_0\":\"True if the new baseURI is set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}).     * If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings.     * .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"token.uri/123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"\\\" | \\\"token.uri/<tokenId>\\\" |===     * Requirements:     * - `tokenId` must exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"the caller must have the 'PAUSER_ROLE'\"}}},\"userdoc\":{\"methods\":{\"activateBadge(bytes32[],uint256,string)\":{\"notice\":\"Activate Badge by redeemers\"},\"burnBadge(uint256)\":{\"notice\":\"Burn Badge\"},\"createTemplate(string,string,string)\":{\"notice\":\"Create a new template\"},\"getBadgeTemplate(uint256)\":{\"notice\":\"Getter function for templateId associated with the tokenId\"},\"getBadgeTemplateQuantity(uint256)\":{\"notice\":\"Getter function for number of badges associated with templateId\"},\"getTemplate(uint256)\":{\"notice\":\"Getter function for templates\"},\"getTemplatesCount()\":{\"notice\":\"TemplatesGetter function for templates count\"},\"isAdmin(address)\":{\"notice\":\"Functions\"},\"pause()\":{\"notice\":\"Pause all the functions\"},\"setBaseURI(string)\":{\"notice\":\"Set the baseURI\"},\"unpause()\":{\"notice\":\"Unpause all the functions\"}}}},\"settings\":{\"compilationTarget\":{\"/home/sencha/insigniadao/contracts/BadgeFactory.sol\":\"BadgeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/sencha/insigniadao/contracts/BadgeFactory.sol\":{\"keccak256\":\"0x6f2ba63310562a1d7920390612c1e924913abbc88a21c3a4a7e498d3d1b106b7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a5b9019f78ec5db26715c59ddac3ddf0ad56b3707113b5bd004891473db8e203\",\"dweb:/ipfs/QmdKWn794BaMTgMEETZWQmZctXBuitDxhfx9CiWKJkoEkx\"]},\"/home/sencha/insigniadao/contracts/BadgeRoles.sol\":{\"keccak256\":\"0x15f8a1e836078bb5f5a74a011084ee26ff6a7cda2652224015ef4bcea68e1650\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://17065168d03fa093b8e5abadfe82e7cb466604f38366e9337f43486352935d0d\",\"dweb:/ipfs/QmTta5SBLL6NgYREB6ogB7ry5ixWZ1gJy1vfcykv2SS4t5\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc35d706da2c3b3228e8c2bfd9c775201688ef307e4990cd59a6dadc2a61abddc\",\"urls\":[\"bzz-raw://45c9859e241844143aaad5054ca5ffebf998a069592cd9c780c88c723849400b\",\"dweb:/ipfs/QmPFPTuys4hWRUga4UJvdyXKP32a9kdhg8hDu7Zku1ENFT\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x169f43befe6b7b973f4fac92a53a74e480a04a490aa84901fdaaf4b423991920\",\"urls\":[\"bzz-raw://299172b91507b45d6409024bb4977bfd7999713e15b687c0357f46d371f78e2e\",\"dweb:/ipfs/QmSZDnjpgBKSWENKouFfPXbb88kKuK9uL4oG5FvKt4tCzN\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x98aa1380fd49a255d6cbea58558ea76bff35c59b218671fde8842907b44e7390\",\"urls\":[\"bzz-raw://613eaff66d4c270ddd87448c06267b6e043ef8c8223cb39d8767bc9daa9cb1ec\",\"dweb:/ipfs/Qmcg56orudv25ghmnZCxN37HwNKCXmTTDxj5cyoYYnvHTg\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x67a43d3926e72576c96ebf0e6360c979a8cc04f25e4b0ca40c221547d8903ba4\",\"urls\":[\"bzz-raw://77c6f48115c491411f0e27f6b70e2e524b1b57c66e74bd7f1974a31a448e2540\",\"dweb:/ipfs/QmPZCizouS9PVJ1dVf8zqTjHyEo5cSa1ZmPCQpk52TgrmV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0x70d75229a5b340148faab86a10d39e8d242b7202ce23a6925066abcfb7ff567a\",\"urls\":[\"bzz-raw://895e0ad84c44490543b58118f65a6332f3de58752b80d03dfd5d063244841b24\",\"dweb:/ipfs/QmeK33G3TKYdYFhZgvoDKuh2cHEGgLdVAdBq3m7Go9XA4B\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x708f339ccc3e9d164ec61bb0db7d4c224161a3bca52413c8bbeddb114154e52b\",\"urls\":[\"bzz-raw://1462c089d30cd75f9ce18c39a26f41adcb74e4a14d2cb9f5c8bcb0a8631fa660\",\"dweb:/ipfs/QmP9hGNkYTpRazqXnQoSyiUiL8DJr3Y8nX9Wcg7SukNMUf\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x09bbc2d7d73986e6e645d0dd65cd16f41248e5cc991f06d42db2946b5f2e3786\",\"urls\":[\"bzz-raw://4f5f3ca771fe28f1bd7de5521bb2ef23b7fadb681b0b0a7ed13d0e2772a1d945\",\"dweb:/ipfs/QmSbLtedzXRjruuhQjx7AXjpg5CGC98g1TBKaVUf1nU38a\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x435bd9ac283c6678ac71c809bae5fb738ea2228b7cf8663ad111894d19f567cb\",\"urls\":[\"bzz-raw://01d79169830e56ab0980901b66d4b404db89acfafd5836903eadf0df22f8dcdd\",\"dweb:/ipfs/QmTTBj8GUZoMZ8EH7YyaV88QmD4QDg32vs2KNymdUKAoMd\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x4f3a00edb976e97943fe0a620ea2948955a75eff2a9231c202d50d1e062d8da5\",\"urls\":[\"bzz-raw://4d83aa87b7c75f666d57a0e5b779a19c00b453b14ee4ed88cfda6d056fdcf14c\",\"dweb:/ipfs/QmXpWwQVFo66hsrAZmHxoxNzwEwBDgNWvaUYqY4TJV38vk\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xfd5cf8319cb84ca04ea407d6fba686d53ad7f5d2bf476f41678f5a751d12a7ea\",\"urls\":[\"bzz-raw://45b75b553c4a9053429609b1c3db481f1728ca00448f01acc4065249bbf87adc\",\"dweb:/ipfs/QmRZH6QM32mJn1GZCAPXUQtBz65H4kk6DsGQbGNo4ZNPy9\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x0336d64bd695c5d8bb962fd3dacb3d26f52879b19e75472d7dea9f91f7add79a\",\"urls\":[\"bzz-raw://d709c1de86475b74fa4f614458e868213f8e5b13eed8b29b465793cd97e5c0f5\",\"dweb:/ipfs/QmYVgazum1VVeDoJYYmKhAJ1mcuTy8vidb2iFEMWcVdSeY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xd1d78b1c8534fbcf8fdc8fbfec9133df142ef8cae9ae820929dfe6d80d2c790a\",\"urls\":[\"bzz-raw://193a827fbe83fa83c4cabb172dc438dd45c50253858a1f2bf56e8f9a2d548386\",\"dweb:/ipfs/QmbWBHwHv7CyHSZY6jxnaDiHWGEEyVb8LeGdRpWXUjaiBr\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102835760003560e01c80636c0360eb1161015c578063b5900eea116100ce578063d4c10e4611610087578063d4c10e4614611274578063d547741f146113e1578063e63ab1e91461142f578063e6c0d7141461144d578063e985e9c5146114a9578063f2fde38b1461152557610284565b8063b5900eea14610e0f578063b88d4fde14610e2d578063c87b56dd14610f32578063ca15c87314610fd9578063cc11dd4e1461101b578063ccb4bcb61461107757610284565b80638da5cb5b116101205780638da5cb5b14610bf65780639010d07c14610c4057806391d1485414610cb857806395d89b4114610d1e578063a217fddf14610da1578063a22cb46514610dbf57610284565b80636c0360eb14610ae95780636cdd0a1614610b6c57806370a0823114610b8a578063715018a614610be25780638456cb5914610bec57610284565b806331543cf4116101f55780634de46fd0116101b95780634de46fd0146108bc5780634f6ccce7146108fe57806355de28ae1461094057806355f804b3146109865780635c975abb14610a595780636352211e14610a7b57610284565b806331543cf41461064957806336568abe146107c85780633f4ba83a1461081657806342842e0e1461082057806342966c681461088e57610284565b806318160ddd1161024757806318160ddd1461046f57806323b872dd1461048d578063248a9ca3146104fb57806324d7806c1461053d5780632f2ff15d146105995780632f745c59146105e757610284565b806301ffc9a71461028957806304523af1146102ee57806306fdde0314610330578063081812fc146103b3578063095ea7b31461042157610284565b5b600080fd5b6102d46004803603602081101561029f57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611569565b604051808215151515815260200191505060405180910390f35b61031a6004803603602081101561030457600080fd5b81019080803590602001909291905050506115d1565b6040518082815260200191505060405180910390f35b6103386116eb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561037857808201518184015260208101905061035d565b50505050905090810190601f1680156103a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103df600480360360208110156103c957600080fd5b810190808035906020019092919050505061178d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61046d6004803603604081101561043757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611828565b005b61047761196c565b6040518082815260200191505060405180910390f35b6104f9600480360360608110156104a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061197d565b005b6105276004803603602081101561051157600080fd5b81019080803590602001909291905050506119f3565b6040518082815260200191505060405180910390f35b61057f6004803603602081101561055357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a13565b604051808215151515815260200191505060405180910390f35b6105e5600480360360408110156105af57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a29565b005b610633600480360360408110156105fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ab3565b6040518082815260200191505060405180910390f35b6106756004803603602081101561065f57600080fd5b8101908080359060200190929190505050611b0e565b60405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b838110156106bd5780820151818401526020810190506106a2565b50505050905090810190601f1680156106ea5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015610723578082015181840152602081019050610708565b50505050905090810190601f1680156107505780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b8381101561078957808201518184015260208101905061076e565b50505050905090810190601f1680156107b65780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b610814600480360360408110156107de57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e99565b005b61081e611f32565b005b61088c6004803603606081101561083657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611fd0565b005b6108ba600480360360208110156108a457600080fd5b8101908080359060200190929190505050611ff0565b005b6108e8600480360360208110156108d257600080fd5b8101908080359060200190929190505050612062565b6040518082815260200191505060405180910390f35b61092a6004803603602081101561091457600080fd5b810190808035906020019092919050505061217d565b6040518082815260200191505060405180910390f35b61096c6004803603602081101561095657600080fd5b81019080803590602001909291905050506121a0565b604051808215151515815260200191505060405180910390f35b610a3f6004803603602081101561099c57600080fd5b81019080803590602001906401000000008111156109b957600080fd5b8201836020820111156109cb57600080fd5b803590602001918460018302840111640100000000831117156109ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612283565b604051808215151515815260200191505060405180910390f35b610a61612360565b604051808215151515815260200191505060405180910390f35b610aa760048036036020811015610a9157600080fd5b8101908080359060200190929190505050612377565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610af16123ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b31578082015181840152602081019050610b16565b50505050905090810190601f168015610b5e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b74612450565b6040518082815260200191505060405180910390f35b610bcc60048036036020811015610ba057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612489565b6040518082815260200191505060405180910390f35b610bea61255e565b005b610bf46126e6565b005b610bfe612784565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c7660048036036040811015610c5657600080fd5b8101908080359060200190929190803590602001909291905050506127ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610d0460048036036040811015610cce57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127df565b604051808215151515815260200191505060405180910390f35b610d26612811565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d66578082015181840152602081019050610d4b565b50505050905090810190601f168015610d935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610da96128b3565b6040518082815260200191505060405180910390f35b610e0d60048036036040811015610dd557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506128ba565b005b610e17612a72565b6040518082815260200191505060405180910390f35b610f3060048036036080811015610e4357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610eaa57600080fd5b820183602082011115610ebc57600080fd5b80359060200191846001830284011164010000000083111715610ede57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612b02565b005b610f5e60048036036020811015610f4857600080fd5b8101908080359060200190929190505050612b7a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610f9e578082015181840152602081019050610f83565b50505050905090810190601f168015610fcb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61100560048036036020811015610fef57600080fd5b8101908080359060200190929190505050612e63565b6040518082815260200191505060405180910390f35b61105d6004803603602081101561103157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e8a565b604051808215151515815260200191505060405180910390f35b61125e6004803603606081101561108d57600080fd5b81019080803590602001906401000000008111156110aa57600080fd5b8201836020820111156110bc57600080fd5b803590602001918460018302840111640100000000831117156110de57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561114157600080fd5b82018360208201111561115357600080fd5b8035906020019184600183028401116401000000008311171561117557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156111d857600080fd5b8201836020820111156111ea57600080fd5b8035906020019184600183028401116401000000008311171561120c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612ed2565b6040518082815260200191505060405180910390f35b6113cb6004803603606081101561128a57600080fd5b81019080803590602001906401000000008111156112a757600080fd5b8201836020820111156112b957600080fd5b803590602001918460208302840111640100000000831117156112db57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019064010000000081111561134557600080fd5b82018360208201111561135757600080fd5b8035906020019184600183028401116401000000008311171561137957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613283565b6040518082815260200191505060405180910390f35b61142d600480360360408110156113f757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506137ae565b005b611437613838565b6040518082815260200191505060405180910390f35b61148f6004803603602081101561146357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613871565b604051808215151515815260200191505060405180910390f35b61150b600480360360408110156114bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613936565b604051808215151515815260200191505060405180910390f35b6115676004803603602081101561153b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506139ca565b005b600060036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000600260009054906101000a900460ff1615611656576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b81600f80549050116116d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f2074656d706c61746520776974682074686174206964000000000000000081525060200191505060405180910390fd5b60106000838152602001908152602001600020549050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117835780601f1061175857610100808354040283529160200191611783565b820191906000526020600020905b81548152906001019060200180831161176657829003601f168201915b5050505050905090565b600061179882613c07565b6117ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615a39602c913960400191505060405180910390fd5b6007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061183382612377565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180615b156021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166118d9613c24565b73ffffffffffffffffffffffffffffffffffffffff161480611908575061190781611902613c24565b613936565b5b61195d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061598c6038913960400191505060405180910390fd5b6119678383613c2c565b505050565b60006119786005613ce5565b905090565b61198e611988613c24565b82613cfa565b6119e3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180615b366031913960400191505060405180910390fd5b6119ee838383613dee565b505050565b600060016000838152602001908152602001600020600201549050919050565b6000611a226000801b836127df565b9050919050565b611a506001600084815260200190815260200160002060020154611a4b613c24565b6127df565b611aa5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615857602f913960400191505060405180910390fd5b611aaf8282613e73565b5050565b6000611b0682600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613f0790919063ffffffff16565b905092915050565b6060806060600260009054906101000a900460ff1615611b96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b83600f8054905011611c10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f2074656d706c61746520776974682074686174206964000000000000000081525060200191505060405180910390fd5b611c18615709565b600f8581548110611c2557fe5b9060005260206000209060040201604051806080016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cd75780601f10611cac57610100808354040283529160200191611cd7565b820191906000526020600020905b815481529060010190602001808311611cba57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d795780601f10611d4e57610100808354040283529160200191611d79565b820191906000526020600020905b815481529060010190602001808311611d5c57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e1b5780601f10611df057610100808354040283529160200191611e1b565b820191906000526020600020905b815481529060010190602001808311611dfe57829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806000015181602001518260400151935093509350509193909250565b611ea1613c24565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615b97602f913960400191505060405180910390fd5b611f2e8282613f21565b5050565b611f7160405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020336127df565b611fc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615886602e913960400191505060405180910390fd5b611fce613fb5565b565b611feb83838360405180602001604052806000815250612b02565b505050565b612001611ffb613c24565b82613cfa565b612056576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180615b676030913960400191505060405180910390fd5b61205f816140be565b50565b6000600260009054906101000a900460ff16156120e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6120f082613c07565b612162576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4552433732313a204e6f20746f6b656e2077697468207468617420696400000081525060200191505060405180910390fd5b60116000838152602001908152602001600020549050919050565b6000806121948360056141f890919063ffffffff16565b50905080915050919050565b6000600260009054906101000a900460ff1615612225576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b600061223083612062565b90506122596001601060008481526020019081526020016000205461422790919063ffffffff16565b601060008381526020019081526020016000208190555061227983611ff0565b6001915050919050565b600061228d613c24565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461234e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61235782614271565b60019050919050565b6000600260009054906101000a900460ff16905090565b60006123a7826040518060600160405280602981526020016159ee60299139600561428b9092919063ffffffff16565b9050919050565b6060600c8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124465780601f1061241b57610100808354040283529160200191612446565b820191906000526020600020905b81548152906001019060200180831161242957829003601f168201915b5050505050905090565b60405180807f54454d504c415445525f524f4c45000000000000000000000000000000000000815250600e019050604051809103902081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806159c4602a913960400191505060405180910390fd5b612557600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206142aa565b9050919050565b612566613c24565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612627576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61272560405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020336127df565b61277a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615a91602c913960400191505060405180910390fd5b6127826142bf565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006127d782600160008681526020019081526020016000206000016143c990919063ffffffff16565b905092915050565b600061280982600160008681526020019081526020016000206000016143e390919063ffffffff16565b905092915050565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128a95780601f1061287e576101008083540402835291602001916128a9565b820191906000526020600020905b81548152906001019060200180831161288c57829003601f168201915b5050505050905090565b6000801b81565b6128c2613c24565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612963576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060086000612970613c24565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16612a1d613c24565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600260009054906101000a900460ff1615612af7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b600f80549050905090565b612b13612b0d613c24565b83613cfa565b612b68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180615b366031913960400191505060405180910390fd5b612b7484848484614413565b50505050565b6060612b8582613c07565b612bda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615ae6602f913960400191505060405180910390fd5b6060600b60008481526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c835780601f10612c5857610100808354040283529160200191612c83565b820191906000526020600020905b815481529060010190602001808311612c6657829003601f168201915b505050505090506000600c8054600181600116156101000203166002900490501415612cb25780915050612e5e565b600081511115612d8b57600c816040516020018083805460018160011615610100020316600290048015612d1d5780601f10612cfb576101008083540402835291820191612d1d565b820191906000526020600020905b815481529060010190602001808311612d09575b505082805190602001908083835b60208310612d4e5780518252602082019150602081019050602083039250612d2b565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050612e5e565b600c612d9684614485565b6040516020018083805460018160011615610100020316600290048015612df45780601f10612dd2576101008083540402835291820191612df4565b820191906000526020600020905b815481529060010190602001808311612de0575b505082805190602001908083835b60208310612e255780518252602082019150602081019050602083039250612e02565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000612e83600160008481526020019081526020016000206000016145cc565b9050919050565b6000612ecb60405180807f54454d504c415445525f524f4c45000000000000000000000000000000000000815250600e0190506040518091039020836127df565b9050919050565b6000612edd33612e8a565b612f4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616c6c6572206973206e6f7420612074656d706c617465206f776e6572000081525060200191505060405180910390fd5b600260009054906101000a900460ff1615612fd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b612fda615709565b60405180608001604052808681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152509050600f819080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908051906020019061305b929190615747565b506020820151816001019080519060200190613078929190615747565b506040820151816002019080519060200190613095929190615747565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506130f86001600f8054905061422790919063ffffffff16565b91507f335347d3c0abbe88e13ee17ff9db9ff2aabea3e099f1ffd10807e9c7f9cf82ad8286868660405180858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561316d578082015181840152602081019050613152565b50505050905090810190601f16801561319a5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b838110156131d35780820151818401526020810190506131b8565b50505050905090810190601f1680156132005780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b8381101561323957808201518184015260208101905061321e565b50505050905090810190601f1680156132665780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a1819150509392505050565b6000600260009054906101000a900460ff1615613308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b82600f8054905011613382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f2074656d706c61746520776974682074686174206964000000000000000081525060200191505060405180910390fd5b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166363a9c3d7336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561342157600080fd5b505afa158015613435573d6000803e3d6000fd5b505050506040513d602081101561344b57600080fd5b81019080805190602001909291905050508061357a5750613579600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c2b40ae4856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156134d857600080fd5b505afa1580156134ec573d6000803e3d6000fd5b505050506040513d602081101561350257600080fd5b810190808051906020019092919050505033604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140191505060405160208183030381529060405280519060200120866145e19092919063ffffffff16565b5b6135ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f43616c6c6572206973206e6f7420612072656465656d6572000000000000000081525060200191505060405180910390fd5b82601160008381526020019081526020016000208190555061362b6001601060008681526020019081526020016000205461469990919063ffffffff16565b6010600085815260200190815260200160002081905550600061364e3384614721565b9050806136c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f546f6b656e206e6f74206d696e7465640000000000000000000000000000000081525060200191505060405180910390fd5b7f6d9b3316ed00d7a8176f774914703e1d3404a4911e6236f45e6c50017d7674f833838686604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561376657808201518184015260208101905061374b565b50505050905090810190601f1680156137935780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1819150509392505050565b6137d560016000848152602001908152602001600020600201546137d0613c24565b6127df565b61382a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061595c6030913960400191505060405180910390fd5b6138348282613f21565b5050565b60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b600061387c33611a13565b6138ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616c6c6572206973206e6f7420616e2061646d696e0000000000000000000081525060200191505060405180910390fd5b61392d60405180807f54454d504c415445525f524f4c45000000000000000000000000000000000000815250600e019050604051809103902083611a29565b60019050919050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6139d2613c24565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613a93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613b19576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806158e66026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000613bff836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61475d565b905092915050565b6000613c1d8260056147cd90919063ffffffff16565b9050919050565b600033905090565b816007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16613c9f83612377565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000613cf3826000016147e7565b9050919050565b6000613d0582613c07565b613d5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615930602c913960400191505060405180910390fd5b6000613d6583612377565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480613dd457508373ffffffffffffffffffffffffffffffffffffffff16613dbc8461178d565b73ffffffffffffffffffffffffffffffffffffffff16145b80613de55750613de48185613936565b5b91505092915050565b600115613e63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4552433732313a20746f6b656e207472616e736665722064697361626c65640081525060200191505060405180910390fd5b613e6e8383836147f8565b505050565b613e9b8160016000858152602001908152602001600020600001613bd790919063ffffffff16565b15613f0357613ea8613c24565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000613f168360000183614a3b565b60001c905092915050565b613f498160016000858152602001908152602001600020600001614abe90919063ffffffff16565b15613fb157613f56613c24565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600260009054906101000a900460ff16614037576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61407b613c24565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006140c982612377565b90506140d781600084614aee565b6140e2600083613c2c565b6000600b60008481526020019081526020016000208054600181600116156101000203166002900490501461413157600b6000838152602001908152602001600020600061413091906157c7565b5b61418282600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614af390919063ffffffff16565b50614197826005614b0d90919063ffffffff16565b5081600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60008060008061420b8660000186614b27565b915091508160001c8160001c8090509350935050509250929050565b600061426983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614bc0565b905092915050565b80600c9080519060200190614287929190615747565b5050565b600061429e846000018460001b84614c80565b60001c90509392505050565b60006142b882600001614d76565b9050919050565b600260009054906101000a900460ff1615614342576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258614386613c24565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006143d88360000183614a3b565b60001c905092915050565b600061440b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b614d87565b905092915050565b61441e848484613dee565b61442a84848484614daa565b61447f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806158b46032913960400191505060405180910390fd5b50505050565b606060008214156144cd576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506145c7565b600082905060005b600082146144f7578080600101915050600a82816144ef57fe5b0491506144d5565b60608167ffffffffffffffff8111801561451057600080fd5b506040519080825280601f01601f1916602001820160405280156145435781602001600182028036833780820191505090505b50905060006001830390508593505b600084146145bf57600a848161456457fe5b0660300160f81b8282806001900393508151811061457e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84816145b757fe5b049350614552565b819450505050505b919050565b60006145da82600001614d76565b9050919050565b60008082905060008090505b855181101561468b57600086828151811061460457fe5b6020026020010151905080831161464b578281604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120925061467d565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b5080806001019150506145ed565b508381149150509392505050565b600080828401905083811015614717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600061473683614731600d6150cd565b6150db565b614749614743600d6150cd565b836152cf565b614753600d615359565b6001905092915050565b60006147698383614d87565b6147c25782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506147c7565b600090505b92915050565b60006147df836000018360001b61536f565b905092915050565b600081600001805490509050919050565b8273ffffffffffffffffffffffffffffffffffffffff1661481882612377565b73ffffffffffffffffffffffffffffffffffffffff1614614884576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180615abd6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561490a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061590c6024913960400191505060405180910390fd5b614915838383614aee565b614920600082613c2c565b61497181600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614af390919063ffffffff16565b506149c381600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061539290919063ffffffff16565b506149da818360056153ac9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081836000018054905011614a9c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806158356022913960400191505060405180910390fd5b826000018281548110614aab57fe5b9060005260206000200154905092915050565b6000614ae6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6153e1565b905092915050565b505050565b6000614b05836000018360001b6153e1565b905092915050565b6000614b1f836000018360001b6154c9565b905092915050565b60008082846000018054905011614b89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615a176022913960400191505060405180910390fd5b6000846000018481548110614b9a57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b6000838311158290614c6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614c32578082015181840152602081019050614c17565b50505050905090810190601f168015614c5f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008084600101600085815260200190815260200160002054905060008114158390614d47576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614d0c578082015181840152602081019050614cf1565b50505050905090810190601f168015614d395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110614d5a57fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000614dcb8473ffffffffffffffffffffffffffffffffffffffff166155e2565b614dd857600190506150c5565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b614e03613c24565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015614eb3578082015181840152602081019050614e98565b50505050905090810190601f168015614ee05780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310614f785780518252602082019150602081019050602083039250614f55565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614fda576040519150601f19603f3d011682016040523d82523d6000602084013e614fdf565b606091505b50915091508161504d57600081511115614ffc5780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806158b46032913960400191505060405180910390fd5b600081806020019051602081101561506457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561517e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61518781613c07565b156151fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61520660008383614aee565b61525781600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061539290919063ffffffff16565b5061526e818360056153ac9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6152d882613c07565b61532d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615a65602c913960400191505060405180910390fd5b80600b60008481526020019081526020016000209080519060200190615354929190615747565b505050565b6001816000016000828254019250508190555050565b600080836001016000848152602001908152602001600020541415905092915050565b60006153a4836000018360001b61475d565b905092915050565b60006153d8846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b61562d565b90509392505050565b600080836001016000848152602001908152602001600020549050600081146154bd576000600182039050600060018660000180549050039050600086600001828154811061542c57fe5b906000526020600020015490508087600001848154811061544957fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061548157fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506154c3565b60009150505b92915050565b600080836001016000848152602001908152602001600020549050600081146155d6576000600182039050600060018660000180549050039050600086600001828154811061551457fe5b906000526020600020906002020190508087600001848154811061553457fe5b906000526020600020906002020160008201548160000155600182015481600101559050506001830187600101600083600001548152602001908152602001600020819055508660000180548061558757fe5b60019003818190600052602060002090600202016000808201600090556001820160009055505090558660010160008781526020019081526020016000206000905560019450505050506155dc565b60009150505b92915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561562457506000801b8214155b92505050919050565b60008084600101600085815260200190815260200160002054905060008114156156d457846000016040518060400160405280868152602001858152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508460000180549050856001016000868152602001908152602001600020819055506001915050615702565b828560000160018303815481106156e757fe5b90600052602060002090600202016001018190555060009150505b9392505050565b6040518060800160405280606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061578857805160ff19168380011785556157b6565b828001600101855582156157b6579182015b828111156157b557825182559160200191906001019061579a565b5b5090506157c3919061580f565b5090565b50805460018160011615610100020316600290046000825580601f106157ed575061580c565b601f01602090049060005260206000209081019061580b919061580f565b5b50565b61583191905b8082111561582d576000816000905550600101615815565b5090565b9056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744261646765466163746f72793a206d75737420686176652070617573657220726f6c6520746f20756e70617573654552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4261646765466163746f72793a206d75737420686176652070617573657220726f6c6520746f2070617573654552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220ac63472cd98991e8affa2466e61b64e9142f0eedb01bde9e4caa3e97b111bc9964736f6c63430006080033",
  "immutableReferences": {},
  "sourceMap": "880:6155:0:-:0;;;1634:183;5:9:-1;2:2;;;27:1;24;17:12;2:2;1634:183:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1634:183:0;;;;;;;;;;;;;;;;3419:365:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:17:6;852:12;:10;;;:12;;:::i;:::-;832:32;;883:9;874:6;;:18;;;;;;;;;;;;;;;;;;940:9;907:43;;936:1;907:43;;;;;;;;;;;;798:159;900:5:21;890:7;;:15;;;;;;;;;;;;;;;;;;910:39:1;1729:4:5;921:18:1;;941:7;:5;;;:7;;:::i;:::-;910:10;;;:39;;:::i;:::-;960:35;781:27;;;;;;;;;;;;;;;;;;;987:7;:5;;;:7;;:::i;:::-;960:10;;;:35;;:::i;:::-;1005:32;850:24;;;;;;;;;;;;;;;;;;;1029:7;:5;;;:7;;:::i;:::-;1005:10;;;:32;;:::i;:::-;718:40:8;385:10;737:20;;718:18;;;:40;;:::i;:::-;3499:4:11;3491:5;:12;;;;;;;;;;;;:::i;:::-;;3523:6;3513:7;:16;;;;;;;;;;;;:::i;:::-;;3617:40;2697:10;3636:20;;3617:18;;;:40;;:::i;:::-;3667:49;3029:10;3686:29;;3667:18;;;:49;;:::i;:::-;3726:51;3402:10;3745:31;;3726:18;;;:51;;:::i;:::-;3419:365;;1723:49:0::1;;;;;;;;;;;;;;;;;;:11;;;:49;;:::i;:::-;1801:9;1778:8;;:33;;;;;;;;;;;;;;;;;;1634:183:::0;880:6155;;735:104:4;788:15;822:10;815:17;;735:104;:::o;1033:77:6:-;1071:7;1097:6;;;;;;;;;;;1090:13;;1033:77;:::o;6132:110:5:-;6210:25;6221:4;6227:7;6210:10;;;:25;;:::i;:::-;6132:110;;:::o;1449:198:8:-;1547:10;1532:25;;:11;:25;;;;;1524:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:4;1600:20;:33;1621:11;1600:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1449:198;:::o;19650:98:11:-;19733:8;19722;:19;;;;;;;;;;;;:::i;:::-;;19650:98;:::o;6449:184:5:-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;;;:12;;:::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;4831:141:20:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;;;:41;;:::i;:::-;4917:48;;4831:141;;;;:::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;;;:21;;:::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:20;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;880:6155:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "880:6155:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;880:6155:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;915:140:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;915:140:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5082:219:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5082:219:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4690:90:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4690:90:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9350:209;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9350:209:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8684:381;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;8684:381:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7564:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11061:300;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;11061:300:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3826:112:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3826:112:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1310:107:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1310:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4188:223:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4188:223:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7259:152:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7259:152:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3043:346:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3043:346:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3043:346:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3043:346:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3043:346:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5362:205:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5362:205:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1981:154:1;;;:::i;:::-;;12010:149:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12010:149:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;371:241:12;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;371:241:12;;;;;;;;;;;;;;;;;:::i;:::-;;4668:193:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4668:193:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8102:161:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;8102:161:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6462:242:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6462:242:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2164:123;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2164:123:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;2164:123:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2164:123:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2164:123:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2164:123:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1007:76:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4418:167:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4418:167:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6798:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6798:87:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;740:68:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3988:211:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3988:211:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1656:145:6;;;:::i;:::-;;1749:138:1;;;:::i;:::-;;1033:77:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3509:136:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3509:136:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2494:137;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2494:137:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4889:94:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4889:94:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:49:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9858:290:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9858:290:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3556:113:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12882:282:11;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;12882:282:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;12882:282:11;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;12882:282:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12882:282:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12882:282:11;;;;;;;;;;;;;;;:::i;:::-;;5826:740;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5826:740:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5826:740:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2799:125:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2799:125:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1421:107:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1421:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3955:487:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3955:487:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;3955:487:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;3955:487:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3955:487:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3955:487:0;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;3955:487:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;3955:487:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3955:487:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3955:487:0;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;3955:487:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;3955:487:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3955:487:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3955:487:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5542:720;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5542:720:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;5542:720:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;5542:720:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5542:720:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5542:720:0;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;5542:720:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;5542:720:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5542:720:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5542:720:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4645:226:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4645:226:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;812:62:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1532:125;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1532:125:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10470:154:11;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;10470:154:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1950:240:6;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1950:240:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;915:140:8;992:4;1015:20;:33;1036:11;1015:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:40;;915:140;;;:::o;5082:219:0:-;5171:7;1236::21;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5213:10:0::1;5194:9;:16;;;;:29;5186:66;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;5265:19;:31;5285:10;5265:31;;;;;;;;;;;;5258:38;;5082:219:::0;;;:::o;4690:90:11:-;4736:13;4768:5;4761:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4690:90;:::o;9350:209::-;9418:7;9445:16;9453:7;9445;:16::i;:::-;9437:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9528:15;:24;9544:7;9528:24;;;;;;;;;;;;;;;;;;;;;9521:31;;9350:209;;;:::o;8684:381::-;8764:13;8780:16;8788:7;8780;:16::i;:::-;8764:32;;8820:5;8814:11;;:2;:11;;;;8806:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8898:5;8882:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;8907:37;8924:5;8931:12;:10;:12::i;:::-;8907:16;:37::i;:::-;8882:62;8874:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9037:21;9046:2;9050:7;9037:8;:21::i;:::-;8684:381;;;:::o;7564:200::-;7617:7;7736:21;:12;:19;:21::i;:::-;7729:28;;7564:200;:::o;11061:300::-;11220:41;11239:12;:10;:12::i;:::-;11253:7;11220:18;:41::i;:::-;11212:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11326:28;11336:4;11342:2;11346:7;11326:9;:28::i;:::-;11061:300;;;:::o;3826:112:5:-;3883:7;3909:6;:12;3916:4;3909:12;;;;;;;;;;;:22;;;3902:29;;3826:112;;;:::o;1310:107:1:-;1361:4;1380:32;1729:4:5;1388:18:1;;1408:3;1380:7;:32::i;:::-;1373:39;;1310:107;;;:::o;4188:223:5:-;4271:45;4279:6;:12;4286:4;4279:12;;;;;;;;;;;:22;;;4303:12;:10;:12::i;:::-;4271:7;:45::i;:::-;4263:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4379:25;4390:4;4396:7;4379:10;:25::i;:::-;4188:223;;:::o;7259:152:11:-;7348:7;7374:30;7398:5;7374:13;:20;7388:5;7374:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;7367:37;;7259:152;;;;:::o;3043:346:0:-;3119:18;3139:25;3166:19;1236:7:21;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3220:10:0::1;3201:9;:16;;;;:29;3193:66;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3265:29;;:::i;:::-;3297:9;3307:10;3297:21;;;;;;;;;;;;;;;;;;3265:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3332:8;:13;;;3347:8;:20;;;3369:8;:14;;;3324:60;;;;;;;3043:346:::0;;;;;:::o;5362:205:5:-;5459:12;:10;:12::i;:::-;5448:23;;:7;:23;;;5440:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5534:26;5546:4;5552:7;5534:11;:26::i;:::-;5362:205;;:::o;1981:154:1:-;2025:32;850:24;;;;;;;;;;;;;;;;;;;2046:10;2025:7;:32::i;:::-;2017:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:10;:8;:10::i;:::-;1981:154::o;12010:149:11:-;12113:39;12130:4;12136:2;12140:7;12113:39;;;;;;;;;;;;:16;:39::i;:::-;12010:149;;;:::o;371:241:12:-;487:41;506:12;:10;:12::i;:::-;520:7;487:18;:41::i;:::-;479:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:14;597:7;591:5;:14::i;:::-;371:241;:::o;4668:193:0:-;4746:7;1236::21;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4769:16:0::1;4777:7;4769;:16::i;:::-;4761:58;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4832:15;:24;4848:7;4832:24;;;;;;;;;;;;4825:31;;4668:193:::0;;;:::o;8102:161:11:-;8169:7;8189:15;8210:22;8226:5;8210:12;:15;;:22;;;;:::i;:::-;8188:44;;;8249:7;8242:14;;;8102:161;;;:::o;6462:242:0:-;6528:4;1236:7:21;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6539:18:0::1;6560:25;6577:7;6560:16;:25::i;:::-;6539:46;;6625:38;6661:1;6625:19;:31;6645:10;6625:31;;;;;;;;;;;;:35;;:38;;;;:::i;:::-;6591:19;:31;6611:10;6591:31;;;;;;;;;;;:72;;;;6669:13;6674:7;6669:4;:13::i;:::-;6695:4;6688:11;;;6462:242:::0;;;:::o;2164:123::-;2233:4;1247:12:6;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:20:0::1;2257:7;2245:11;:20::i;:::-;2278:4;2271:11;;2164:123:::0;;;:::o;1007:76:21:-;1046:4;1069:7;;;;;;;;;;;1062:14;;1007:76;:::o;4418:167:11:-;4482:7;4508:70;4525:7;4508:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4501:77;;4418:167;;;:::o;6798:87::-;6838:13;6870:8;6863:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6798:87;:::o;740:68:1:-;781:27;;;;;;;;;;;;;;;;;;;740:68;:::o;3988:211:11:-;4052:7;4096:1;4079:19;;:5;:19;;;;4071:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4163:29;:13;:20;4177:5;4163:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4156:36;;3988:211;;;:::o;1656:145:6:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:1:::1;1725:40;;1746:6;::::0;::::1;;;;;;;;;1725:40;;;;;;;;;;;;1792:1;1775:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1656:145::o:0;1749:138:1:-;1787:32;850:24;;;;;;;;;;;;;;;;;;;1808:10;1787:7;:32::i;:::-;1779:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1874:8;:6;:8::i;:::-;1749:138::o;1033:77:6:-;1071:7;1097:6;;;;;;;;;;;1090:13;;1033:77;:::o;3509:136:5:-;3582:7;3608:30;3632:5;3608:6;:12;3615:4;3608:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;3601:37;;3509:136;;;;:::o;2494:137::-;2563:4;2586:38;2616:7;2586:6;:12;2593:4;2586:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;2579:45;;2494:137;;;;:::o;4889:94:11:-;4937:13;4969:7;4962:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4889:94;:::o;1684:49:5:-;1729:4;1684:49;;;:::o;9858:290:11:-;9972:12;:10;:12::i;:::-;9960:24;;:8;:24;;;;9952:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10070:8;10025:18;:32;10044:12;:10;:12::i;:::-;10025:32;;;;;;;;;;;;;;;:42;10058:8;10025:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;10122:8;10093:48;;10108:12;:10;:12::i;:::-;10093:48;;;10132:8;10093:48;;;;;;;;;;;;;;;;;;;;;;9858:290;;:::o;3556:113:0:-;3620:13;1236:7:21;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3648:9:0::1;:16;;;;3641:23;;3556:113:::0;:::o;12882:282:11:-;13013:41;13032:12;:10;:12::i;:::-;13046:7;13013:18;:41::i;:::-;13005:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:39;13132:4;13138:2;13142:7;13151:5;13118:13;:39::i;:::-;12882:282;;;;:::o;5826:740::-;5891:13;5924:16;5932:7;5924;:16::i;:::-;5916:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6003:23;6029:10;:19;6040:7;6029:19;;;;;;;;;;;6003:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6147:1;6127:8;6121:22;;;;;;;;;;;;;;;;:27;6117:74;;;6171:9;6164:16;;;;;6117:74;6319:1;6299:9;6293:23;:27;6289:110;;;6367:8;6377:9;6350:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6350:37:11;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6350:37:11;;;6336:52;;;;;6289:110;6529:8;6539:18;:7;:16;:18::i;:::-;6512:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6512:46:11;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6512:46:11;;;6498:61;;;5826:740;;;;:::o;2799:125:5:-;2862:7;2888:29;:6;:12;2895:4;2888:12;;;;;;;;;;;:20;;:27;:29::i;:::-;2881:36;;2799:125;;;:::o;1421:107:1:-;1476:4;1495:28;781:27;;;;;;;;;;;;;;;;;;;1519:3;1495:7;:28::i;:::-;1488:35;;1421:107;;;:::o;3955:487:0:-;4091:19;1215:23:1;1227:10;1215:11;:23::i;:::-;1207:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:7:21::1;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4119:33:0::2;;:::i;:::-;4155:120;;;;;;;;4184:4;4155:120;;;;4236:11;4155:120;;;;4263:5;4155:120;;;;4204:10;4155:120;;;;::::0;4119:156:::2;;4281:9;4296:12;4281:28;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4281:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4329:23;4350:1;4329:9;:16;;;;:20;;:23;;;;:::i;:::-;4315:37;;4363:50;4375:11;4388:4;4394:11;4407:5;4363:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4363:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4363:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4363:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4426:11;4419:18;;;3955:487:::0;;;;;:::o;5542:720::-;5663:16;1236:7:21;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5714:10:0::1;5695:9;:16;;;;:29;5687:66;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;5767:8;;;;;;;;;;;:15;;;5783:10;5767:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;5767:27:0;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;5767:27:0;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;5767:27:0;;;;;;;;;;;;;;;;:112;;;;5798:81;5811:8;;;;;;;;;;;:14;;;5826:10;5811:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;5811:26:0;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;5811:26:0;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;5811:26:0;;;;;;;;;;;;;;;;5866:10;5849:28;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5849:28:0;;;5839:39;;;;;;5798:5;:12;;:81;;;;;:::i;:::-;5767:112;5759:149;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;5974:10;5946:15;:25;5962:8;5946:25;;;;;;;;;;;:38;;;;6024;6060:1;6024:19;:31;6044:10;6024:31;;;;;;;;;;;;:35;;:38;;;;:::i;:::-;5990:19;:31;6010:10;5990:31;;;;;;;;;;;:72;;;;6070:12;6086:39;6104:10;6116:8;6086:17;:39::i;:::-;6069:56;;6139:7;6131:36;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;6179:57;6194:10;6205:8;6215:10;6227:8;6179:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6179:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6249:8;6242:15;;;5542:720:::0;;;;;:::o;4645:226:5:-;4729:45;4737:6;:12;4744:4;4737:12;;;;;;;;;;;:22;;;4761:12;:10;:12::i;:::-;4729:7;:45::i;:::-;4721:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4838:26;4850:4;4856:7;4838:11;:26::i;:::-;4645:226;;:::o;812:62:1:-;850:24;;;;;;;;;;;;;;;;;;;812:62;:::o;1532:125::-;1593:4;1108:19;1116:10;1108:7;:19::i;:::-;1100:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:30:::1;781:27;;;;;;;::::0;::::1;;;;;;;;;;;1631:3;1605:9;:30::i;:::-;1648:4;1641:11;;1532:125:::0;;;:::o;10470:154:11:-;10559:4;10582:18;:25;10601:5;10582:25;;;;;;;;;;;;;;;:35;10608:8;10582:35;;;;;;;;;;;;;;;;;;;;;;;;;10575:42;;10470:154;;;;:::o;1950:240:6:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2058:1:::1;2038:22;;:8;:22;;;;2030:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2147:8;2118:38;;2139:6;::::0;::::1;;;;;;;;;2118:38;;;;;;;;;;;;2175:8;2166:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1950:240:::0;:::o;4831:141:20:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;:41::i;:::-;4917:48;;4831:141;;;;:::o;14333:117:11:-;14390:4;14413:30;14435:7;14413:12;:21;;:30;;;;:::i;:::-;14406:37;;14333:117;;;:::o;735:104:4:-;788:15;822:10;815:17;;735:104;:::o;21357:155:11:-;21449:2;21422:15;:24;21438:7;21422:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;21497:7;21493:2;21466:39;;21475:16;21483:7;21475;:16::i;:::-;21466:39;;;;;;;;;;;;21357:155;;:::o;6990:121:19:-;7059:7;7085:19;7093:3;:10;;7085:7;:19::i;:::-;7078:26;;6990:121;;;:::o;14811:329:11:-;14896:4;14920:16;14928:7;14920;:16::i;:::-;14912:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14995:13;15011:16;15019:7;15011;:16::i;:::-;14995:32;;15056:5;15045:16;;:7;:16;;;:51;;;;15089:7;15065:31;;:20;15077:7;15065:11;:20::i;:::-;:31;;;15045:51;:87;;;;15100:32;15117:5;15124:7;15100:16;:32::i;:::-;15045:87;15037:96;;;14811:329;;;;:::o;6852:180:0:-;6947:4;6946:5;6938:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6993:34;7009:4;7015:2;7019:7;6993:15;:34::i;:::-;6852:180;;;:::o;6449:184:5:-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;:12::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;7616:135:20:-;7687:7;7721:22;7725:3;:10;;7737:5;7721:3;:22::i;:::-;7713:31;;7706:38;;7616:135;;;;:::o;6639:188:5:-;6713:36;6741:7;6713:6;:12;6720:4;6713:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;6709:112;;;6797:12;:10;:12::i;:::-;6770:40;;6788:7;6770:40;;6782:4;6770:40;;;;;;;;;;6709:112;6639:188;;:::o;1709:117:21:-;1427:7;;;;;;;;;;;1419:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:5:::1;1767:7;;:15;;;;;;;;;;;;;;;;;;1797:22;1806:12;:10;:12::i;:::-;1797:22;;;;;;;;;;;;;;;;;;;;;;1709:117::o:0;17444:502:11:-;17503:13;17519:16;17527:7;17519;:16::i;:::-;17503:32;;17546:48;17567:5;17582:1;17586:7;17546:20;:48::i;:::-;17632:29;17649:1;17653:7;17632:8;:29::i;:::-;17748:1;17717:10;:19;17728:7;17717:19;;;;;;;;;;;17711:33;;;;;;;;;;;;;;;;:38;17707:95;;17772:10;:19;17783:7;17772:19;;;;;;;;;;;;17765:26;;;;:::i;:::-;17707:95;17812:36;17840:7;17812:13;:20;17826:5;17812:20;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;;17859:28;17879:7;17859:12;:19;;:28;;;;:::i;:::-;;17931:7;17927:1;17903:36;;17912:5;17903:36;;;;;;;;;;;;17444:502;;:::o;7439:224:19:-;7519:7;7528;7548:11;7561:13;7578:22;7582:3;:10;;7594:5;7578:3;:22::i;:::-;7547:53;;;;7626:3;7618:12;;7648:5;7640:14;;7610:46;;;;;;;;;7439:224;;;;;:::o;1274:134:10:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;19650:98:11:-;19733:8;19722;:19;;;;;;;;;;;;:::i;:::-;;19650:98;:::o;8082:202:19:-;8189:7;8231:44;8236:3;:10;;8256:3;8248:12;;8262;8231:4;:44::i;:::-;8223:53;;8208:69;;8082:202;;;;;:::o;7172:112:20:-;7232:7;7258:19;7266:3;:10;;7258:7;:19::i;:::-;7251:26;;7172:112;;;:::o;1535:115:21:-;1236:7;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:4:::1;1594:7;;:14;;;;;;;;;;;;;;;;;;1623:20;1630:12;:10;:12::i;:::-;1623:20;;;;;;;;;;;;;;;;;;;;;;1535:115::o:0;6052:147:20:-;6126:7;6168:22;6172:3;:10;;6184:5;6168:3;:22::i;:::-;6160:31;;6145:47;;6052:147;;;;:::o;5368:156::-;5448:4;5471:46;5481:3;:10;;5509:5;5501:14;;5493:23;;5471:9;:46::i;:::-;5464:53;;5368:156;;;;:::o;13869:269:11:-;13982:28;13992:4;13998:2;14002:7;13982:9;:28::i;:::-;14028:48;14051:4;14057:2;14061:7;14070:5;14028:22;:48::i;:::-;14020:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13869:269;;;;:::o;169:723:22:-;225:13;451:1;442:5;:10;438:51;;;468:10;;;;;;;;;;;;;;;;;;;;;438:51;498:12;513:5;498:20;;528:14;552:75;567:1;559:4;:9;552:75;;584:8;;;;;;;614:2;606:10;;;;;;;;;552:75;;;636:19;668:6;658:17;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;658:17:22;;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;658:17:22;;;;636:39;;685:13;710:1;701:6;:10;685:26;;728:5;721:12;;743:112;758:1;750:4;:9;743:112;;816:2;809:4;:9;;;;;;804:2;:14;793:27;;775:6;782:7;;;;;;;775:15;;;;;;;;;;;:45;;;;;;;;;;;842:2;834:10;;;;;;;;;743:112;;;878:6;864:21;;;;;;169:723;;;;:::o;5605:115:20:-;5668:7;5694:19;5702:3;:10;;5694:7;:19::i;:::-;5687:26;;5605:115;;;:::o;464:779:7:-;555:4;571:20;594:4;571:27;;614:9;626:1;614:13;;609:515;633:5;:12;629:1;:16;609:515;;;666:20;689:5;695:1;689:8;;;;;;;;;;;;;;666:31;;732:12;716;:28;712:402;;884:12;898;867:44;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;867:44:7;;;857:55;;;;;;842:70;;712:402;;;1071:12;1085;1054:44;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1054:44:7;;;1044:55;;;;;;1029:70;;712:402;609:515;647:3;;;;;;;609:515;;;;1232:4;1216:12;:20;1209:27;;;464:779;;;;;:::o;834:176:10:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;2591:239:0:-;2672:4;2684:36;2690:2;2694:25;:15;:23;:25::i;:::-;2684:5;:36::i;:::-;2726:49;2739:25;:15;:23;:25::i;:::-;2766:8;2726:12;:49::i;:::-;2781:27;:15;:25;:27::i;:::-;2821:4;2814:11;;2591:239;;;;:::o;1578:404:20:-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:20;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;6758:149:19:-;6842:4;6865:35;6875:3;:10;;6895:3;6887:12;;6865:9;:35::i;:::-;6858:42;;6758:149;;;;:::o;4450:108::-;4506:7;4532:3;:12;;:19;;;;4525:26;;4450:108;;;:::o;18323:559:11:-;18440:4;18420:24;;:16;18428:7;18420;:16::i;:::-;:24;;;18412:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18522:1;18508:16;;:2;:16;;;;18500:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18576:39;18597:4;18603:2;18607:7;18576:20;:39::i;:::-;18677:29;18694:1;18698:7;18677:8;:29::i;:::-;18717:35;18744:7;18717:13;:19;18731:4;18717:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;18762:30;18784:7;18762:13;:17;18776:2;18762:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;18803:29;18820:7;18829:2;18803:12;:16;;:29;;;;;:::i;:::-;;18867:7;18863:2;18848:27;;18857:4;18848:27;;;;;;;;;;;;18323:559;;;:::o;4390:201:20:-;4457:7;4505:5;4484:3;:11;;:18;;;;:26;4476:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;5140:147::-;5213:4;5236:44;5244:3;:10;;5272:5;5264:14;;5256:23;;5236:7;:44::i;:::-;5229:51;;5140:147;;;;:::o;22068:93:11:-;;;;:::o;6731:135:20:-;6801:4;6824:35;6832:3;:10;;6852:5;6844:14;;6824:7;:35::i;:::-;6817:42;;6731:135;;;;:::o;6539:140:19:-;6616:4;6639:33;6647:3;:10;;6667:3;6659:12;;6639:7;:33::i;:::-;6632:40;;6539:140;;;;:::o;4901:274::-;4968:7;4977;5026:5;5004:3;:12;;:19;;;;:27;4996:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5081:22;5106:3;:12;;5119:5;5106:19;;;;;;;;;;;;;;;;;;5081:44;;5143:5;:10;;;5155:5;:12;;;5135:33;;;;;4901:274;;;;;:::o;1692:187:10:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1797:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;5582:315:19:-;5676:7;5695:16;5714:3;:12;;:17;5727:3;5714:17;;;;;;;;;;;;5695:36;;5761:1;5749:8;:13;;5764:12;5741:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5741:36:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5830:3;:12;;5854:1;5843:8;:12;5830:26;;;;;;;;;;;;;;;;;;:33;;;5823:40;;;5582:315;;;;;:::o;3951:107:20:-;4007:7;4033:3;:11;;:18;;;;4026:25;;3951:107;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;20301:1050:11:-;20421:4;20446:15;:2;:13;;;:15::i;:::-;20441:58;;20484:4;20477:11;;;;20441:58;20568:12;20582:23;20609:2;:7;;20653:45;;;20712:12;:10;:12::i;:::-;20738:4;20756:7;20777:5;20617:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20617:175:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;20617:175:11;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;20617:175:11;20609:184;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;20609:184:11;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;20567:226:11;;;;20808:7;20803:542;;20855:1;20835:10;:17;:21;20831:376;;;21000:10;20994:17;21060:15;21047:10;21043:2;21039:19;21032:44;20949:145;21132:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20803:542;21237:13;21264:10;21253:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;21253:32:11;;;;;;;;;;;;;;;;21237:48;;1035:10;21317:16;;21307:26;;;:6;:26;;;;21299:35;;;;;20301:1050;;;;;;;:::o;1065:112:18:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;16870:393:11:-;16963:1;16949:16;;:2;:16;;;;16941:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17021:16;17029:7;17021;:16::i;:::-;17020:17;17012:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17081:45;17110:1;17114:2;17118:7;17081:20;:45::i;:::-;17137:30;17159:7;17137:13;:17;17151:2;17137:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;17178:29;17195:7;17204:2;17178:12;:16;;:29;;;;;:::i;:::-;;17248:7;17244:2;17223:33;;17240:1;17223:33;;;;;;;;;;;;16870:393;;:::o;19215:212::-;19314:16;19322:7;19314;:16::i;:::-;19306:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19411:9;19389:10;:19;19400:7;19389:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;19215:212;;:::o;1183:178:18:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;4237:123:19:-;4308:4;4352:1;4331:3;:12;;:17;4344:3;4331:17;;;;;;;;;;;;:22;;4324:29;;4237:123;;;;:::o;6434:129:20:-;6501:4;6524:32;6529:3;:10;;6549:5;6541:14;;6524:4;:32::i;:::-;6517:39;;6434:129;;;;:::o;6206:174:19:-;6295:4;6318:55;6323:3;:10;;6343:3;6335:12;;6365:5;6357:14;;6349:23;;6318:4;:55::i;:::-;6311:62;;6206:174;;;;;:::o;2150:1512:20:-;2216:4;2332:18;2353:3;:12;;:19;2366:5;2353:19;;;;;;;;;;;;2332:40;;2401:1;2387:10;:15;2383:1273;;2744:21;2781:1;2768:10;:14;2744:38;;2796:17;2837:1;2816:3;:11;;:18;;;;:22;2796:42;;3078:17;3098:3;:11;;3110:9;3098:22;;;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;:38;;;;3358:1;3342:13;:17;3316:3;:12;;:23;3329:9;3316:23;;;;;;;;;;;:43;;;;3465:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;2150:1512;;;;;:::o;2641:1517:19:-;2705:4;2819:16;2838:3;:12;;:17;2851:3;2838:17;;;;;;;;;;;;2819:36;;2882:1;2870:8;:13;2866:1286;;3226:21;3261:1;3250:8;:12;3226:36;;3276:17;3318:1;3296:3;:12;;:19;;;;:23;3276:43;;3559:26;3588:3;:12;;3601:9;3588:23;;;;;;;;;;;;;;;;;;3559:52;;3733:9;3703:3;:12;;3716:13;3703:27;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;3855:1;3839:13;:17;3808:3;:12;;:28;3821:9;:14;;;3808:28;;;;;;;;;;;:48;;;;3962:3;:12;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4055:3;:12;;:17;4068:3;4055:17;;;;;;;;;;;4048:24;;;4094:4;4087:11;;;;;;;;2866:1286;4136:5;4129:12;;;2641:1517;;;;;:::o;685:610:17:-;745:4;1003:16;1029:19;1051:66;1029:88;;;;1218:7;1206:20;1194:32;;1257:11;1245:8;:23;;:42;;;;;1284:3;1272:15;;:8;:15;;1245:42;1237:51;;;;685:610;;;:::o;1795:678:19:-;1871:4;1985:16;2004:3;:12;;:17;2017:3;2004:17;;;;;;;;;;;;1985:36;;2048:1;2036:8;:13;2032:435;;;2102:3;:12;;2120:38;;;;;;;;2137:3;2120:38;;;;2150:5;2120:38;;;2102:57;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2102:57:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:3;:12;;:19;;;;2294:3;:12;;:17;2307:3;2294:17;;;;;;;;;;;:39;;;;2354:4;2347:11;;;;;2032:435;2425:5;2389:3;:12;;2413:1;2402:8;:12;2389:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2451:5;2444:12;;;1795:678;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.6.8;\n\n/// @title Non-transferable Badges for Maker Ecosystem Activity, issue #537\n/// @author Nazzareno Massari, Scott Herren\n/// @notice BadgeFactory to manage Templates and activate Non-transferable Badges for redeemers\n/// @dev see https://github.com/makerdao/community/issues/537\n/// @dev All function calls are currently implemented without side effecs through TDD approach\n/// @dev OpenZeppelin library is used for secure contract development\n\nimport \"./BadgeRoles.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/cryptography/MerkleProof.sol\";\n\n\ninterface InsigniaDAO {\n\n    function verify(address guy) external view returns (bool);\n    function roots(uint256 templateId) external view returns (bytes32);\n\n}\n\ncontract BadgeFactory is BadgeRoles, ERC721Burnable {\n\n  /// Libraries\n  using SafeMath for uint256;\n  using Counters for Counters.Counter;\n  using MerkleProof for bytes32[];\n\n  Counters.Counter private _tokenIdTracker;\n\n  InsigniaDAO internal insignia;\n\n  /// Events\n  event NewTemplate(uint256 templateId, string name, string description, string image);\n  event BadgeActivated(address redeemer, uint256 tokenId, uint256 templateId, string tokenURI);\n\n  struct BadgeTemplate {\n    string name;\n    string description;\n    string image;\n    address owner;\n  }\n\n  BadgeTemplate[] private templates;\n\n  /// Supplies of each badge template\n  mapping(uint256 => uint256) private _templateQuantities;\n  mapping(uint256 => uint256) private _tokenTemplates;\n\n  constructor(address insignia_)\n    ERC721(\"InsigniaBadges\", \"BADGES\")\n    public\n  {\n    _setBaseURI(\"https://badges.makerdao.com/token/\");\n    insignia = InsigniaDAO(insignia_);\n\n  }\n\n  /// @notice Fallback function\n  /// @dev Added not payable to revert transactions not matching any other function which send value\n  fallback() external {\n    revert();\n  }\n\n  /// @notice Set the baseURI\n  /// @dev Update the baseURI specified in the constructor\n  /// @param baseURI New baseURI\n  /// @return True if the new baseURI is set\n  function setBaseURI(string memory baseURI) public onlyOwner returns (bool) {\n    _setBaseURI(baseURI);\n    return true;\n  }\n\n  /// @notice Mint new token with tokenURI\n  /// @dev Use an auto-generated tokenId\n  /// @dev automatically concatenate baseURI with tokenURI via abi.encodePacked\n  /// @param to owner of the new token\n  /// @param tokenURI an <ipfs-hash>.json filename\n  /// @return True if the new token is minted\n  function _mintWithTokenURI(address to, string memory tokenURI) internal returns (bool) {\n    _mint(to, _tokenIdTracker.current());\n    _setTokenURI(_tokenIdTracker.current(), tokenURI);\n    _tokenIdTracker.increment();\n    return true;\n  }\n\n  /// @notice Getter function for templates\n  /// @dev Check if templateId exists\n  /// @param templateId Template Id of the template to return\n  /// @return name description image Of the specified templateId\n  function getTemplate(uint256 templateId) public view whenNotPaused returns (string memory name, string memory description, string memory image) {\n    require(templates.length > templateId, \"No template with that id\");\n    BadgeTemplate memory template = templates[templateId];\n    return (template.name, template.description, template.image);\n  }\n\n\n  /// Templates\n\n  /// @notice Getter function for templates count\n  /// @dev Return lenght of template array\n  /// @return count The current number of templates\n  function getTemplatesCount() public view whenNotPaused returns (uint256 count) {\n    return templates.length;\n  }\n\n  /// @notice Create a new template\n  /// @dev Access restricted to only Templaters\n  /// @param name The name of the new template\n  /// @param description A description of the new template\n  /// @param image A filename of the new template\n  /// @return _templateId The template Id\n  function createTemplate(string memory name, string memory description, string memory image) public onlyTemplater whenNotPaused returns (uint256 _templateId) {\n\n    BadgeTemplate memory _newTemplate = BadgeTemplate({\n       name: name,\n       owner: msg.sender,\n       description: description,\n       image: image\n    });\n    templates.push(_newTemplate);\n    _templateId = templates.length.sub(1);\n    emit NewTemplate(_templateId, name, description, image);\n    return _templateId;\n  }\n\n  // Badges\n\n  /// @notice Getter function for templateId associated with the tokenId\n  /// @dev Check if the tokenId exists\n  /// @param tokenId Token Id of the Badge\n  /// @return Template Id associated with the tokenId\n  function getBadgeTemplate(uint256 tokenId) public view whenNotPaused returns (uint256) {\n    require(_exists(tokenId), \"ERC721: No token with that id\");\n    return _tokenTemplates[tokenId];\n  }\n\n  /// @notice Getter function for number of badges associated with templateId\n  /// @dev Check if the template Id exists\n  /// @param templateId Template Id\n  /// @return Quantity of Badges associated with templateId\n  function getBadgeTemplateQuantity(uint256 templateId) public view whenNotPaused returns (uint256) {\n    require(templates.length > templateId, \"No template with that id\");\n    return _templateQuantities[templateId];\n  }\n\n  /// @notice Activate Badge by redeemers\n  /// @dev Verify if the caller is a redeemer\n  /// @param proof Merkle Proof\n  /// @param templateId Template Id\n  /// @param tokenURI Token URI\n  /// @return _tokenId Token Id of the new Badge\n  function activateBadge(bytes32[] memory proof, uint256 templateId, string memory tokenURI) public whenNotPaused returns (uint256 _tokenId) {\n    require(templates.length > templateId, \"No template with that id\");\n    require(insignia.verify(msg.sender) || proof.verify(insignia.roots(templateId), keccak256(abi.encodePacked(msg.sender))), \"Caller is not a redeemer\");\n\n    // Increase the quantities\n    _tokenTemplates[_tokenId] = templateId;\n    _templateQuantities[templateId] = _templateQuantities[templateId].add(1);\n\n    (bool success) = _mintWithTokenURI(msg.sender, tokenURI);\n    require(success, \"Token not minted\");\n\n    emit BadgeActivated(msg.sender,_tokenId, templateId, tokenURI);\n    return _tokenId;\n  }\n\n  /// @notice Burn Badge\n  /// @dev burn() Check if the caller is approved or owner of the Badge\n  /// @param tokenId Token Id of the Badge to burn\n  /// @return True if the Badge has been burned\n  function burnBadge(uint256 tokenId) public whenNotPaused returns (bool){\n    uint256 templateId = getBadgeTemplate(tokenId);\n    _templateQuantities[templateId] = _templateQuantities[templateId].sub(1);\n    burn(tokenId);\n    return true;\n  }\n\n  /// @notice ERC721 _transfer() Disabled\n  /// @dev _transfer() has been overriden\n  /// @dev reverts on transferFrom() and safeTransferFrom()\n  function _transfer(address from, address to, uint256 tokenId) internal override {\n    require(!true, \"ERC721: token transfer disabled\");\n    super._transfer(from, to, tokenId);\n  }\n\n}\n",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
  "sourcePath": "/home/sencha/insigniadao/contracts/BadgeFactory.sol",
  "ast": {
    "absolutePath": "/home/sencha/insigniadao/contracts/BadgeFactory.sol",
    "exportedSymbols": {
      "BadgeFactory": [
<<<<<<< HEAD
        456
=======
        449
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
      ],
      "InsigniaDAO": [
        20
      ]
    },
<<<<<<< HEAD
    "id": 457,
=======
    "id": 450,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:0"
      },
      {
        "absolutePath": "/home/sencha/insigniadao/contracts/BadgeRoles.sol",
        "file": "./BadgeRoles.sol",
        "id": 2,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 457,
        "sourceUnit": 703,
=======
        "scope": 450,
        "sourceUnit": 597,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "src": "505:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 3,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 457,
        "sourceUnit": 4453,
=======
        "scope": 450,
        "sourceUnit": 3145,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "src": "532:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 457,
        "sourceUnit": 4147,
=======
        "scope": 450,
        "sourceUnit": 2839,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "src": "585:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/cryptography/MerkleProof.sol",
        "id": 5,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 457,
        "sourceUnit": 2905,
=======
        "scope": 450,
        "sourceUnit": 1597,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "src": "651:62:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 20,
        "linearizedBaseContracts": [
          20
        ],
        "name": "InsigniaDAO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "63a9c3d7",
            "id": 12,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "761:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "760:13:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "797:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "796:6:0"
            },
            "scope": 20,
            "src": "745:58:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "c2b40ae4",
            "id": 19,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "roots",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19,
                  "src": "823:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "822:20:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19,
                  "src": "866:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "865:9:0"
            },
            "scope": 20,
            "src": "808:67:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
<<<<<<< HEAD
        "scope": 457,
=======
        "scope": 450,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "src": "716:162:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21,
              "name": "BadgeRoles",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 702,
              "src": "905:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BadgeRoles_$702",
=======
              "referencedDeclaration": 596,
              "src": "905:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BadgeRoles_$596",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "contract BadgeRoles"
              }
            },
            "id": 22,
            "nodeType": "InheritanceSpecifier",
            "src": "905:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 4146,
              "src": "917:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$4146",
=======
              "referencedDeclaration": 2838,
              "src": "917:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$2838",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 24,
            "nodeType": "InheritanceSpecifier",
            "src": "917:14:0"
          }
        ],
        "contractDependencies": [
<<<<<<< HEAD
          702,
          1840,
          2097,
          2361,
          2626,
          2735,
          2960,
          2972,
          4116,
          4146,
          4262,
          4293,
          4320,
          5392
=======
          596,
          1151,
          1416,
          1525,
          1652,
          1664,
          2808,
          2838,
          2954,
          2985,
          3012,
          4084
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 456,
        "linearizedBaseContracts": [
          456,
          4146,
          4116,
          4293,
          4320,
          4262,
          2960,
          2972,
          702,
          1840,
          2097,
          5392,
          2626,
          2735,
          2361
=======
        "id": 449,
        "linearizedBaseContracts": [
          449,
          2838,
          2808,
          2985,
          3012,
          2954,
          1652,
          1664,
          596,
          4084,
          1416,
          1525,
          1151
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        ],
        "name": "BadgeFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 27,
            "libraryName": {
              "contractScope": null,
              "id": 25,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 3168,
              "src": "959:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3168",
=======
              "referencedDeclaration": 1860,
              "src": "959:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1860",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "953:27:0",
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "972:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 30,
            "libraryName": {
              "contractScope": null,
              "id": 28,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 4452,
              "src": "989:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$4452",
=======
              "referencedDeclaration": 3144,
              "src": "989:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$3144",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "983:36:0",
            "typeName": {
              "contractScope": null,
              "id": 29,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 4412,
              "src": "1002:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$4412_storage_ptr",
=======
              "referencedDeclaration": 3104,
              "src": "1002:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3104_storage_ptr",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 34,
            "libraryName": {
              "contractScope": null,
              "id": 31,
              "name": "MerkleProof",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 2904,
              "src": "1028:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleProof_$2904",
=======
              "referencedDeclaration": 1596,
              "src": "1028:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleProof_$1596",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "library MerkleProof"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1022:32:0",
            "typeName": {
              "baseType": {
                "id": 32,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1044:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 33,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1044:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1058:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
<<<<<<< HEAD
              "typeIdentifier": "t_struct$_Counter_$4412_storage",
=======
              "typeIdentifier": "t_struct$_Counter_$3104_storage",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 35,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 4412,
              "src": "1058:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$4412_storage_ptr",
=======
              "referencedDeclaration": 3104,
              "src": "1058:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3104_storage_ptr",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "insignia",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1103:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InsigniaDAO_$20",
              "typeString": "contract InsigniaDAO"
            },
            "typeName": {
              "contractScope": null,
              "id": 37,
              "name": "InsigniaDAO",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20,
              "src": "1103:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                "typeString": "contract InsigniaDAO"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 39,
              "nodeType": "StructuredDocumentation",
              "src": "1137:10:0",
              "text": "Events"
            },
            "id": 49,
            "name": "NewTemplate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "1168:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "1188:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "1201:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "image",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "1221:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1167:67:0"
            },
            "src": "1150:85:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 59,
            "name": "BadgeActivated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "redeemer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "1259:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "1277:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "1294:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "1314:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1258:72:0"
            },
            "src": "1238:93:0"
          },
          {
            "canonicalName": "BadgeFactory.BadgeTemplate",
            "id": 68,
            "members": [
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 68,
                "src": "1362:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 60,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1362:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "description",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 68,
                "src": "1379:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 62,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1379:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "image",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 68,
                "src": "1403:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 64,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1403:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 68,
                "src": "1421:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 66,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "BadgeTemplate",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1335:104:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 71,
            "mutability": "mutable",
            "name": "templates",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1443:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
              "typeString": "struct BadgeFactory.BadgeTemplate[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 69,
                "name": "BadgeTemplate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 68,
                "src": "1443:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BadgeTemplate_$68_storage_ptr",
                  "typeString": "struct BadgeFactory.BadgeTemplate"
                }
              },
              "id": 70,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1443:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage_ptr",
                "typeString": "struct BadgeFactory.BadgeTemplate[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 75,
            "mutability": "mutable",
            "name": "_templateQuantities",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1519:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 74,
              "keyType": {
                "id": 72,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1527:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1519:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 73,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1538:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 79,
            "mutability": "mutable",
            "name": "_tokenTemplates",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1578:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 78,
              "keyType": {
                "id": 76,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1586:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1578:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 77,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1597:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1717:100:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "68747470733a2f2f6261646765732e6d616b657264616f2e636f6d2f746f6b656e2f",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1735:36:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5403b456c65c8757943b3b82bfd82a9b96015d20c312fb1fe7ee407ccdea828b",
                          "typeString": "literal_string \"https://badges.makerdao.com/token/\""
                        },
                        "value": "https://badges.makerdao.com/token/"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5403b456c65c8757943b3b82bfd82a9b96015d20c312fb1fe7ee407ccdea828b",
                          "typeString": "literal_string \"https://badges.makerdao.com/token/\""
                        }
                      ],
                      "id": 88,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 4006,
=======
                      "referencedDeclaration": 2698,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "src": "1723:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1723:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1723:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "insignia",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1778:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                        "typeString": "contract InsigniaDAO"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 94,
                          "name": "insignia_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "1801:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 93,
                        "name": "InsigniaDAO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1789:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InsigniaDAO_$20_$",
                          "typeString": "type(contract InsigniaDAO)"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1789:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                        "typeString": "contract InsigniaDAO"
                      }
                    },
                    "src": "1778:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                      "typeString": "contract InsigniaDAO"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 99,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "496e7369676e6961426164676573",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1676:16:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7d5122e430252b8061b21da84436a43b100c05e53620ac7dfc2323c8573e5b35",
                      "typeString": "literal_string \"InsigniaBadges\""
                    },
                    "value": "InsigniaBadges"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "424144474553",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1694:8:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5fd9433ef4e19a0d5d1b854e53ae6c091e724c22341c7d37f4a2fa7539bc9017",
                      "typeString": "literal_string \"BADGES\""
                    },
                    "value": "BADGES"
                  }
                ],
                "id": 86,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 83,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 4116,
                  "src": "1669:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$4116_$",
=======
                  "referencedDeclaration": 2808,
                  "src": "1669:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2808_$",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1669:34:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "insignia_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "1646:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1645:19:0"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1717:0:0"
            },
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1634:183:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1974:19:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 103,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1980:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1980:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:8:0"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1821:130:0",
              "text": "@notice Fallback function\n @dev Added not payable to revert transactions not matching any other function which send value"
            },
            "id": 107,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1962:2:0"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1974:0:0"
            },
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1954:39:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              624,
              2349
            ],
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "2236:57:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "BaseRelayRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1840,
                        "src": "2257:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseRelayRecipient_$1840_$",
                          "typeString": "type(contract BaseRelayRecipient)"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1839,
                      "src": "2257:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2257:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 115,
                  "id": 119,
                  "nodeType": "Return",
                  "src": "2250:38:0"
                }
              ]
            },
            "documentation": {
              "id": 108,
              "nodeType": "StructuredDocumentation",
              "src": "1997:144:0",
              "text": "@notice OpenGSN _msgSender()\n @dev override _msgSender() in OZ Context.sol and BadgeRoles.sol\n @return msg.sender after relay call"
            },
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 112,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 110,
                  "name": "Context",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2361,
                  "src": "2184:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Context_$2361",
                    "typeString": "contract Context"
                  }
                },
                {
                  "contractScope": null,
                  "id": 111,
                  "name": "BadgeRoles",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 702,
                  "src": "2193:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BadgeRoles_$702",
                    "typeString": "contract BadgeRoles"
                  }
                }
              ],
              "src": "2175:29:0"
            },
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2163:2:0"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 121,
                  "src": "2219:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2219:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2218:17:0"
            },
            "scope": 456,
            "src": "2144:149:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2539:48:0",
=======
              "src": "2239:48:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 124,
                        "src": "2557:7:0",
=======
                        "referencedDeclaration": 110,
                        "src": "2257:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 131,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 4006,
                      "src": "2545:11:0",
=======
                      "referencedDeclaration": 2698,
                      "src": "2245:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2545:20:0",
=======
                    "src": "2245:20:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2545:20:0"
=======
                  "src": "2245:20:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "2578:4:0",
=======
                    "src": "2278:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 130,
                  "id": 136,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "2571:11:0"
=======
                  "src": "2271:11:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "2297:164:0",
=======
              "src": "1997:164:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Set the baseURI\n @dev Update the baseURI specified in the constructor\n @param baseURI New baseURI\n @return True if the new baseURI is set"
            },
            "functionSelector": "55f804b3",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 127,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 126,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2684,
                  "src": "2514:9:0",
=======
                  "referencedDeclaration": 1474,
                  "src": "2214:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "2514:9:0"
=======
                "src": "2214:9:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "setBaseURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 138,
                  "src": "2484:21:0",
=======
                  "scope": 124,
                  "src": "2184:21:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2484:6:0",
=======
                    "src": "2184:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2483:23:0"
=======
              "src": "2183:23:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 138,
                  "src": "2533:4:0",
=======
                  "scope": 124,
                  "src": "2233:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2533:4:0",
=======
                    "src": "2233:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2532:6:0"
            },
            "scope": 456,
            "src": "2464:123:0",
=======
              "src": "2232:6:0"
            },
            "scope": 449,
            "src": "2164:123:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2978:152:0",
=======
              "src": "2678:152:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 141,
                        "src": "2990:2:0",
=======
                        "referencedDeclaration": 127,
                        "src": "2690:2:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 150,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
<<<<<<< HEAD
                            "src": "2994:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$4412_storage",
=======
                            "src": "2694:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3104_storage",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 4423,
                          "src": "2994:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$4412_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$4412_storage_ptr_$",
=======
                          "referencedDeclaration": 3115,
                          "src": "2694:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3104_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3104_storage_ptr_$",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2994:25:0",
=======
                        "src": "2694:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 148,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 3834,
                      "src": "2984:5:0",
=======
                      "referencedDeclaration": 2526,
                      "src": "2684:5:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2984:36:0",
=======
                    "src": "2684:36:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2984:36:0"
=======
                  "src": "2684:36:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
<<<<<<< HEAD
                            "src": "3039:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$4412_storage",
=======
                            "src": "2739:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3104_storage",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 4423,
                          "src": "3039:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$4412_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$4412_storage_ptr_$",
=======
                          "referencedDeclaration": 3115,
                          "src": "2739:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3104_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3104_storage_ptr_$",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3039:25:0",
=======
                        "src": "2739:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 143,
                        "src": "3066:8:0",
=======
                        "referencedDeclaration": 129,
                        "src": "2766:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 3995,
                      "src": "3026:12:0",
=======
                      "referencedDeclaration": 2687,
                      "src": "2726:12:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3026:49:0",
=======
                    "src": "2726:49:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3026:49:0"
=======
                  "src": "2726:49:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
<<<<<<< HEAD
                        "src": "3081:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$4412_storage",
=======
                        "src": "2781:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3104_storage",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 4435,
                      "src": "3081:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$4412_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$4412_storage_ptr_$",
=======
                      "referencedDeclaration": 3127,
                      "src": "2781:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$3104_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3104_storage_ptr_$",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3081:27:0",
=======
                    "src": "2781:27:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3081:27:0"
=======
                  "src": "2781:27:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "3121:4:0",
=======
                    "src": "2821:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 147,
                  "id": 168,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "3114:11:0"
=======
                  "src": "2814:11:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 139,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "2591:297:0",
=======
              "src": "2291:297:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Mint new token with tokenURI\n @dev Use an auto-generated tokenId\n @dev automatically concatenate baseURI with tokenURI via abi.encodePacked\n @param to owner of the new token\n @param tokenURI an <ipfs-hash>.json filename\n @return True if the new token is minted"
            },
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintWithTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 170,
                  "src": "2918:10:0",
=======
                  "scope": 156,
                  "src": "2618:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2918:7:0",
=======
                    "src": "2618:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 170,
                  "src": "2930:22:0",
=======
                  "scope": 156,
                  "src": "2630:22:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2930:6:0",
=======
                    "src": "2630:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2917:36:0"
=======
              "src": "2617:36:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 170,
                  "src": "2972:4:0",
=======
                  "scope": 156,
                  "src": "2672:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2972:4:0",
=======
                    "src": "2672:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2971:6:0"
            },
            "scope": 456,
            "src": "2891:239:0",
=======
              "src": "2671:6:0"
            },
            "scope": 449,
            "src": "2591:239:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "3487:202:0",
=======
              "src": "3187:202:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "templates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
<<<<<<< HEAD
                            "src": "3501:9:0",
=======
                            "src": "3201:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                              "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3501:16:0",
=======
                          "src": "3201:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "templateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 173,
                          "src": "3520:10:0",
=======
                          "referencedDeclaration": 159,
                          "src": "3220:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "3501:29:0",
=======
                        "src": "3201:29:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2074656d706c61746520776974682074686174206964",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3532:26:0",
=======
                        "src": "3232:26:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        },
                        "value": "No template with that id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "3493:7:0",
=======
                      "src": "3193:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3493:66:0",
=======
                    "src": "3193:66:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3493:66:0"
=======
                  "src": "3193:66:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "assignments": [
                    193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 193,
                      "mutability": "mutable",
                      "name": "template",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
<<<<<<< HEAD
                      "scope": 206,
                      "src": "3565:29:0",
=======
                      "scope": 192,
                      "src": "3265:29:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                        "typeString": "struct BadgeFactory.BadgeTemplate"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 192,
                        "name": "BadgeTemplate",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 68,
<<<<<<< HEAD
                        "src": "3565:13:0",
=======
                        "src": "3265:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BadgeTemplate_$68_storage_ptr",
                          "typeString": "struct BadgeFactory.BadgeTemplate"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 197,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "templates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
<<<<<<< HEAD
                      "src": "3597:9:0",
=======
                      "src": "3297:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                        "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                      }
                    },
                    "id": 196,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "templateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 173,
                      "src": "3607:10:0",
=======
                      "referencedDeclaration": 159,
                      "src": "3307:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "3597:21:0",
=======
                    "src": "3297:21:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BadgeTemplate_$68_storage",
                      "typeString": "struct BadgeFactory.BadgeTemplate storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3565:53:0"
=======
                  "src": "3265:53:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 198,
                          "name": "template",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 193,
                          "src": "3632:8:0",
=======
                          "referencedDeclaration": 179,
                          "src": "3332:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                            "typeString": "struct BadgeFactory.BadgeTemplate memory"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61,
<<<<<<< HEAD
                        "src": "3632:13:0",
=======
                        "src": "3332:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 200,
                          "name": "template",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 193,
                          "src": "3647:8:0",
=======
                          "referencedDeclaration": 179,
                          "src": "3347:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                            "typeString": "struct BadgeFactory.BadgeTemplate memory"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "description",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63,
<<<<<<< HEAD
                        "src": "3647:20:0",
=======
                        "src": "3347:20:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "template",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 193,
                          "src": "3669:8:0",
=======
                          "referencedDeclaration": 179,
                          "src": "3369:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                            "typeString": "struct BadgeFactory.BadgeTemplate memory"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "image",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65,
<<<<<<< HEAD
                        "src": "3669:14:0",
=======
                        "src": "3369:14:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 204,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "3631:53:0",
=======
                    "src": "3331:53:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory,string memory)"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 205,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "3624:60:0"
=======
                  "src": "3324:60:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "3134:206:0",
=======
              "src": "2834:206:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Getter function for templates\n @dev Check if templateId exists\n @param templateId Template Id of the template to return\n @return name description image Of the specified templateId"
            },
            "functionSelector": "31543cf4",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 176,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 175,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "3396:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "3096:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3396:13:0"
=======
                "src": "3096:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "getTemplate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 207,
                  "src": "3364:18:0",
=======
                  "scope": 193,
                  "src": "3064:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3364:7:0",
=======
                    "src": "3064:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3363:20:0"
=======
              "src": "3063:20:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 207,
                  "src": "3419:18:0",
=======
                  "scope": 193,
                  "src": "3119:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3419:6:0",
=======
                    "src": "3119:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 207,
                  "src": "3439:25:0",
=======
                  "scope": 193,
                  "src": "3139:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3439:6:0",
=======
                    "src": "3139:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "image",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 207,
                  "src": "3466:19:0",
=======
                  "scope": 193,
                  "src": "3166:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3466:6:0",
=======
                    "src": "3166:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3418:68:0"
            },
            "scope": 456,
            "src": "3343:346:0",
=======
              "src": "3118:68:0"
            },
            "scope": 449,
            "src": "3043:346:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "3935:34:0",
=======
              "src": "3635:34:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 215,
                      "name": "templates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
<<<<<<< HEAD
                      "src": "3948:9:0",
=======
                      "src": "3648:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                        "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
<<<<<<< HEAD
                    "src": "3948:16:0",
=======
                    "src": "3648:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 214,
                  "id": 217,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "3941:23:0"
=======
                  "src": "3641:23:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 208,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "3694:159:0",
=======
              "src": "3394:159:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "Templates\n @notice Getter function for templates count\n @dev Return lenght of template array\n @return count The current number of templates"
            },
            "functionSelector": "b5900eea",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 211,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 210,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "3897:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "3597:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3897:13:0"
=======
                "src": "3597:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "getTemplatesCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "3882:2:0"
=======
              "src": "3582:2:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "count",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 219,
                  "src": "3920:13:0",
=======
                  "scope": 205,
                  "src": "3620:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3920:7:0",
=======
                    "src": "3620:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3919:15:0"
            },
            "scope": 456,
            "src": "3856:113:0",
=======
              "src": "3619:15:0"
            },
            "scope": 449,
            "src": "3556:113:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 268,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "4412:332:0",
=======
              "src": "4112:330:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "_newTemplate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
<<<<<<< HEAD
                      "scope": 268,
                      "src": "4419:33:0",
=======
                      "scope": 254,
                      "src": "4119:33:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                        "typeString": "struct BadgeFactory.BadgeTemplate"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 235,
                        "name": "BadgeTemplate",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 68,
<<<<<<< HEAD
                        "src": "4419:13:0",
=======
                        "src": "4119:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BadgeTemplate_$68_storage_ptr",
                          "typeString": "struct BadgeFactory.BadgeTemplate"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 238,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 222,
                        "src": "4484:4:0",
=======
                        "referencedDeclaration": 208,
                        "src": "4184:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 239,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
<<<<<<< HEAD
                          "overloadedDeclarations": [
                            121
                          ],
                          "referencedDeclaration": 121,
                          "src": "4504:10:0",
=======
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4204:3:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
<<<<<<< HEAD
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4504:12:0",
                        "tryCall": false,
=======
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4204:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 241,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 224,
                        "src": "4538:11:0",
=======
                        "referencedDeclaration": 210,
                        "src": "4236:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "image",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 226,
                        "src": "4565:5:0",
=======
                        "referencedDeclaration": 212,
                        "src": "4263:5:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 237,
                      "name": "BadgeTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
<<<<<<< HEAD
                      "src": "4455:13:0",
=======
                      "src": "4155:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_BadgeTemplate_$68_storage_ptr_$",
                        "typeString": "type(struct BadgeFactory.BadgeTemplate storage pointer)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "name",
                      "owner",
                      "description",
                      "image"
                    ],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4455:122:0",
=======
                    "src": "4155:120:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                      "typeString": "struct BadgeFactory.BadgeTemplate memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4419:158:0"
=======
                  "src": "4119:156:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 248,
                        "name": "_newTemplate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 236,
                        "src": "4598:12:0",
=======
                        "referencedDeclaration": 222,
                        "src": "4296:12:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                          "typeString": "struct BadgeFactory.BadgeTemplate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                          "typeString": "struct BadgeFactory.BadgeTemplate memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "templates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
<<<<<<< HEAD
                        "src": "4583:9:0",
=======
                        "src": "4281:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                          "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "4583:14:0",
=======
                      "src": "4281:14:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_BadgeTemplate_$68_storage_$returns$__$",
                        "typeString": "function (struct BadgeFactory.BadgeTemplate storage ref)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4583:28:0",
=======
                    "src": "4281:28:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4583:28:0"
=======
                  "src": "4281:28:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 251,
                      "name": "_templateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 233,
                      "src": "4617:11:0",
=======
                      "referencedDeclaration": 219,
                      "src": "4315:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4652:1:0",
=======
                          "src": "4350:1:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 252,
                            "name": "templates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
<<<<<<< HEAD
                            "src": "4631:9:0",
=======
                            "src": "4329:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                              "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4631:16:0",
=======
                          "src": "4329:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3018,
                        "src": "4631:20:0",
=======
                        "referencedDeclaration": 1710,
                        "src": "4329:20:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "4631:23:0",
=======
                      "src": "4329:23:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "4617:37:0",
=======
                    "src": "4315:37:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4617:37:0"
=======
                  "src": "4315:37:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 260,
                        "name": "_templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 233,
                        "src": "4677:11:0",
=======
                        "referencedDeclaration": 219,
                        "src": "4375:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 261,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 222,
                        "src": "4690:4:0",
=======
                        "referencedDeclaration": 208,
                        "src": "4388:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 224,
                        "src": "4696:11:0",
=======
                        "referencedDeclaration": 210,
                        "src": "4394:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "image",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 226,
                        "src": "4709:5:0",
=======
                        "referencedDeclaration": 212,
                        "src": "4407:5:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 259,
                      "name": "NewTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
<<<<<<< HEAD
                      "src": "4665:11:0",
=======
                      "src": "4363:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory,string memory)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4665:50:0",
=======
                    "src": "4363:50:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "4660:55:0"
=======
                  "src": "4358:55:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 266,
                    "name": "_templateId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 233,
                    "src": "4728:11:0",
=======
                    "referencedDeclaration": 219,
                    "src": "4426:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 234,
                  "id": 267,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "4721:18:0"
=======
                  "src": "4419:18:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 220,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "3973:279:0",
=======
              "src": "3673:279:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Create a new template\n @dev Access restricted to only Templaters\n @param name The name of the new template\n @param description A description of the new template\n @param image A filename of the new template\n @return _templateId The template Id"
            },
            "functionSelector": "ccb4bcb6",
            "id": 269,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 228,
                  "name": "onlyTemplater",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 610,
                  "src": "4354:13:0",
=======
                  "referencedDeclaration": 517,
                  "src": "4054:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "4354:13:0"
=======
                "src": "4054:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              },
              {
                "arguments": null,
                "id": 231,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 230,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "4368:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "4068:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "4368:13:0"
=======
                "src": "4068:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "createTemplate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 269,
                  "src": "4279:18:0",
=======
                  "scope": 255,
                  "src": "3979:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4279:6:0",
=======
                    "src": "3979:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 269,
                  "src": "4299:25:0",
=======
                  "scope": 255,
                  "src": "3999:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4299:6:0",
=======
                    "src": "3999:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "image",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 269,
                  "src": "4326:19:0",
=======
                  "scope": 255,
                  "src": "4026:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4326:6:0",
=======
                    "src": "4026:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4278:68:0"
=======
              "src": "3978:68:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 269,
                  "src": "4391:19:0",
=======
                  "scope": 255,
                  "src": "4091:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4391:7:0",
=======
                    "src": "4091:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4390:21:0"
            },
            "scope": 456,
            "src": "4255:489:0",
=======
              "src": "4090:21:0"
            },
            "scope": 449,
            "src": "3955:487:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "5057:106:0",
=======
              "src": "4755:106:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 272,
                            "src": "5079:7:0",
=======
                            "referencedDeclaration": 258,
                            "src": "4777:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 280,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3691,
                          "src": "5071:7:0",
=======
                          "referencedDeclaration": 2383,
                          "src": "4769:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "5071:16:0",
=======
                        "src": "4769:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a204e6f20746f6b656e20776974682074686174206964",
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5089:31:0",
=======
                        "src": "4787:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eee2b6618e8df95b0bf38e60b6b75845e9dc548b9448795c7b246ad7b049d106",
                          "typeString": "literal_string \"ERC721: No token with that id\""
                        },
                        "value": "ERC721: No token with that id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eee2b6618e8df95b0bf38e60b6b75845e9dc548b9448795c7b246ad7b049d106",
                          "typeString": "literal_string \"ERC721: No token with that id\""
                        }
                      ],
                      "id": 279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "5063:7:0",
=======
                      "src": "4761:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5063:58:0",
=======
                    "src": "4761:58:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5063:58:0"
=======
                  "src": "4761:58:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 286,
                      "name": "_tokenTemplates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
<<<<<<< HEAD
                      "src": "5134:15:0",
=======
                      "src": "4832:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 288,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 287,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 272,
                      "src": "5150:7:0",
=======
                      "referencedDeclaration": 258,
                      "src": "4848:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "5134:24:0",
=======
                    "src": "4832:24:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 278,
                  "id": 289,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "5127:31:0"
=======
                  "src": "4825:31:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 270,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "4761:206:0",
=======
              "src": "4459:206:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Getter function for templateId associated with the tokenId\n @dev Check if the tokenId exists\n @param tokenId Token Id of the Badge\n @return Template Id associated with the tokenId"
            },
            "functionSelector": "4de46fd0",
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 275,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 274,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "5025:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "4723:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "5025:13:0"
=======
                "src": "4723:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "getBadgeTemplate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 291,
                  "src": "4996:15:0",
=======
                  "scope": 277,
                  "src": "4694:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4996:7:0",
=======
                    "src": "4694:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4995:17:0"
=======
              "src": "4693:17:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 291,
                  "src": "5048:7:0",
=======
                  "scope": 277,
                  "src": "4746:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5048:7:0",
=======
                    "src": "4746:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5047:9:0"
            },
            "scope": 456,
            "src": "4970:193:0",
=======
              "src": "4745:9:0"
            },
            "scope": 449,
            "src": "4668:193:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 313,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "5482:121:0",
=======
              "src": "5180:121:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 302,
                            "name": "templates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
<<<<<<< HEAD
                            "src": "5496:9:0",
=======
                            "src": "5194:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                              "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "5496:16:0",
=======
                          "src": "5194:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "templateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 294,
                          "src": "5515:10:0",
=======
                          "referencedDeclaration": 280,
                          "src": "5213:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "5496:29:0",
=======
                        "src": "5194:29:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2074656d706c61746520776974682074686174206964",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5527:26:0",
=======
                        "src": "5225:26:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        },
                        "value": "No template with that id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        }
                      ],
                      "id": 301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "5488:7:0",
=======
                      "src": "5186:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5488:66:0",
=======
                    "src": "5186:66:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5488:66:0"
=======
                  "src": "5186:66:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "_templateQuantities",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
<<<<<<< HEAD
                      "src": "5567:19:0",
=======
                      "src": "5265:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 311,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 310,
                      "name": "templateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 294,
                      "src": "5587:10:0",
=======
                      "referencedDeclaration": 280,
                      "src": "5285:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "5567:31:0",
=======
                    "src": "5265:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 300,
                  "id": 312,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "5560:38:0"
=======
                  "src": "5258:38:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 292,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "5167:214:0",
=======
              "src": "4865:214:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Getter function for number of badges associated with templateId\n @dev Check if the template Id exists\n @param templateId Template Id\n @return Quantity of Badges associated with templateId"
            },
            "functionSelector": "04523af1",
            "id": 314,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 297,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 296,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "5450:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "5148:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "5450:13:0"
=======
                "src": "5148:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "getBadgeTemplateQuantity",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 314,
                  "src": "5418:18:0",
=======
                  "scope": 300,
                  "src": "5116:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5418:7:0",
=======
                    "src": "5116:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5417:20:0"
=======
              "src": "5115:20:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 314,
                  "src": "5473:7:0",
=======
                  "scope": 300,
                  "src": "5171:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5473:7:0",
=======
                    "src": "5171:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5472:9:0"
            },
            "scope": 456,
            "src": "5384:219:0",
=======
              "src": "5170:9:0"
            },
            "scope": 449,
            "src": "5082:219:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 394,
              "nodeType": "Block",
              "src": "5983:529:0",
=======
              "id": 387,
              "nodeType": "Block",
              "src": "5681:581:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 330,
                            "name": "templates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
<<<<<<< HEAD
                            "src": "5997:9:0",
=======
                            "src": "5695:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                              "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "5997:16:0",
=======
                          "src": "5695:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 332,
                          "name": "templateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 320,
                          "src": "6016:10:0",
=======
                          "referencedDeclaration": 306,
                          "src": "5714:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "5997:29:0",
=======
                        "src": "5695:29:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2074656d706c61746520776974682074686174206964",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6028:26:0",
=======
                        "src": "5726:26:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        },
                        "value": "No template with that id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "5989:7:0",
=======
                      "src": "5687:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5989:66:0",
=======
                    "src": "5687:66:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5989:66:0"
=======
                  "src": "5687:66:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 340,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
<<<<<<< HEAD
                                "overloadedDeclarations": [
                                  121
                                ],
                                "referencedDeclaration": 121,
                                "src": "6085:10:0",
=======
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5783:3:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
<<<<<<< HEAD
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6085:12:0",
                              "tryCall": false,
=======
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5783:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 338,
                              "name": "insignia",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
<<<<<<< HEAD
                              "src": "6069:8:0",
=======
                              "src": "5767:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                                "typeString": "contract InsigniaDAO"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
<<<<<<< HEAD
                            "src": "6069:15:0",
=======
                            "src": "5767:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6069:29:0",
=======
                          "src": "5767:27:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 347,
                                  "name": "templateId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
<<<<<<< HEAD
                                  "referencedDeclaration": 320,
                                  "src": "6130:10:0",
=======
                                  "referencedDeclaration": 306,
                                  "src": "5826:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 345,
                                  "name": "insignia",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
<<<<<<< HEAD
                                  "src": "6115:8:0",
=======
                                  "src": "5811:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                                    "typeString": "contract InsigniaDAO"
                                  }
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "roots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19,
<<<<<<< HEAD
                                "src": "6115:14:0",
=======
                                "src": "5811:14:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bytes32_$",
                                  "typeString": "function (uint256) view external returns (bytes32)"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "6115:26:0",
=======
                              "src": "5811:26:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 352,
                                        "name": "_msgSender",
                                        "nodeType": "Identifier",
<<<<<<< HEAD
                                        "overloadedDeclarations": [
                                          121
                                        ],
                                        "referencedDeclaration": 121,
                                        "src": "6170:10:0",
=======
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "5866:3:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                          "typeString": "function () view returns (address payable)"
                                        }
                                      },
                                      "id": 353,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
<<<<<<< HEAD
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6170:12:0",
                                      "tryCall": false,
=======
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "5866:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 350,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
<<<<<<< HEAD
                                      "src": "6153:3:0",
=======
                                      "src": "5849:3:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 351,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
<<<<<<< HEAD
                                    "src": "6153:16:0",
=======
                                    "src": "5849:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "6153:30:0",
=======
                                  "src": "5849:28:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 349,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
<<<<<<< HEAD
                                "src": "6143:9:0",
=======
                                "src": "5839:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "6143:41:0",
=======
                              "src": "5839:39:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 343,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 318,
                              "src": "6102:5:0",
=======
                              "referencedDeclaration": 304,
                              "src": "5798:5:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 2903,
                            "src": "6102:12:0",
=======
                            "referencedDeclaration": 1595,
                            "src": "5798:12:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6102:83:0",
=======
                          "src": "5798:81:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "6069:116:0",
=======
                        "src": "5767:112:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206973206e6f7420612072656465656d6572",
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6187:26:0",
=======
                        "src": "5881:26:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c643423efa367d95c3ddd289673f3b3e8ede8023fe51c4f9ac33a28adc55ba9",
                          "typeString": "literal_string \"Caller is not a redeemer\""
                        },
                        "value": "Caller is not a redeemer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c643423efa367d95c3ddd289673f3b3e8ede8023fe51c4f9ac33a28adc55ba9",
                          "typeString": "literal_string \"Caller is not a redeemer\""
                        }
                      ],
                      "id": 337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "6061:7:0",
=======
                      "src": "5759:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6061:153:0",
=======
                    "src": "5759:149:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6061:153:0"
=======
                  "src": "5759:149:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 362,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            121
                          ],
                          "referencedDeclaration": 121,
                          "src": "6239:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6239:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "6253:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 361,
                      "name": "_mintWithTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "6221:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string memory) returns (bool)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6221:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "6221:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
=======
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 367,
=======
                        "id": 347,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "name": "_tokenTemplates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
<<<<<<< HEAD
                        "src": "6300:15:0",
=======
                        "src": "5946:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 369,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 368,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "6316:8:0",
=======
                      "id": 349,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "5962:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6300:25:0",
=======
                      "src": "5946:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 370,
                      "name": "templateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "6328:10:0",
=======
                      "id": 350,
                      "name": "templateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "5974:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6300:38:0",
=======
                    "src": "5946:38:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "6300:38:0"
=======
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "5946:38:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 382,
=======
                    "id": 362,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 373,
=======
                        "id": 353,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "name": "_templateQuantities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
<<<<<<< HEAD
                        "src": "6344:19:0",
=======
                        "src": "5990:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 375,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 374,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "6364:10:0",
=======
                      "id": 355,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "6010:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6344:31:0",
=======
                      "src": "5990:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 380,
=======
                          "id": 360,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6414:1:0",
=======
                          "src": "6060:1:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 376,
=======
                            "id": 356,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "name": "_templateQuantities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
<<<<<<< HEAD
                            "src": "6378:19:0",
=======
                            "src": "6024:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 378,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 377,
                            "name": "templateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "6398:10:0",
=======
                          "id": 358,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "templateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "6044:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "6378:31:0",
=======
                          "src": "6024:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 379,
=======
                        "id": 359,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3001,
                        "src": "6378:35:0",
=======
                        "referencedDeclaration": 1693,
                        "src": "6024:35:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 381,
=======
                      "id": 361,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "6378:38:0",
=======
                      "src": "6024:38:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6344:72:0",
=======
                    "src": "5990:72:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "6344:72:0"
=======
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "5990:72:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 387,
                      "src": "6070:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6070:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 371,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
<<<<<<< HEAD
                          "argumentTypes": [],
                          "id": 385,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            121
                          ],
                          "referencedDeclaration": 121,
                          "src": "6442:10:0",
=======
                          "argumentTypes": null,
                          "id": 367,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6104:3:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
<<<<<<< HEAD
                        "id": 386,
=======
                        "id": 368,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
<<<<<<< HEAD
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6442:12:0",
                        "tryCall": false,
=======
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6104:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 387,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "6455:8:0",
=======
                        "id": 369,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "6116:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 366,
                      "name": "_mintWithTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "6086:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string memory) returns (bool)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6086:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6069:56:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 373,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "6139:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e206e6f74206d696e746564",
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6148:18:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df04c9a35c143c96cd1def60cca4e1c1a0ada28d45389a70f82fa1b531e05c1",
                          "typeString": "literal_string \"Token not minted\""
                        },
                        "value": "Token not minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df04c9a35c143c96cd1def60cca4e1c1a0ada28d45389a70f82fa1b531e05c1",
                          "typeString": "literal_string \"Token not minted\""
                        }
                      ],
                      "id": 372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6131:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6131:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "6131:36:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 378,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6194:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6194:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "6205:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 388,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "6465:10:0",
=======
                        "id": 381,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "6215:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 389,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "6477:8:0",
=======
                        "id": 382,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "6227:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
<<<<<<< HEAD
                      "id": 384,
=======
                      "id": 377,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "name": "BadgeActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
<<<<<<< HEAD
                      "src": "6427:14:0",
=======
                      "src": "6179:14:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,string memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 390,
=======
                    "id": 383,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6427:59:0",
=======
                    "src": "6179:57:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 391,
                  "nodeType": "EmitStatement",
                  "src": "6422:64:0"
=======
                  "id": 384,
                  "nodeType": "EmitStatement",
                  "src": "6174:62:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 392,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 327,
                    "src": "6499:8:0",
=======
                    "id": 385,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 313,
                    "src": "6249:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 328,
                  "id": 393,
                  "nodeType": "Return",
                  "src": "6492:15:0"
=======
                  "functionReturnParameters": 314,
                  "id": 386,
                  "nodeType": "Return",
                  "src": "6242:15:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 315,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "5607:234:0",
              "text": "@notice Activate Badge by redeemers\n @dev Verify if the caller is a redeemer\n @param proof Merkle Proof\n @param templateId Template Id\n @param tokenURI Token URI\n @return _tokenId Token Id of the new Badge"
            },
            "functionSelector": "d4c10e46",
            "id": 395,
=======
              "src": "5305:234:0",
              "text": "@notice Activate Badge by redeemers\n @dev Verify if the caller is a redeemer\n @param proof Merkle Proof\n @param templateId Template Id\n @param tokenURI Token URI\n @return _tokenId Token Id of the new Badge"
            },
            "functionSelector": "d4c10e46",
            "id": 388,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 325,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 324,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "5942:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "5640:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "5942:13:0"
=======
                "src": "5640:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "activateBadge",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 395,
                  "src": "5867:22:0",
=======
                  "scope": 388,
                  "src": "5565:22:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 316,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                      "src": "5867:7:0",
=======
                      "src": "5565:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 317,
                    "length": null,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                    "src": "5867:9:0",
=======
                    "src": "5565:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 395,
                  "src": "5891:18:0",
=======
                  "scope": 388,
                  "src": "5589:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5891:7:0",
=======
                    "src": "5589:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 395,
                  "src": "5911:22:0",
=======
                  "scope": 388,
                  "src": "5609:22:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5911:6:0",
=======
                    "src": "5609:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5866:68:0"
=======
              "src": "5564:68:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 395,
                  "src": "5965:16:0",
=======
                  "scope": 388,
                  "src": "5663:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5965:7:0",
=======
                    "src": "5663:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5964:18:0"
            },
            "scope": 456,
            "src": "5844:668:0",
=======
              "src": "5662:18:0"
            },
            "scope": 449,
            "src": "5542:720:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 428,
              "nodeType": "Block",
              "src": "6783:171:0",
              "statements": [
                {
                  "assignments": [
                    406
=======
              "id": 421,
              "nodeType": "Block",
              "src": "6533:171:0",
              "statements": [
                {
                  "assignments": [
                    399
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 406,
=======
                      "id": 399,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "mutability": "mutable",
                      "name": "templateId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
<<<<<<< HEAD
                      "scope": 428,
                      "src": "6789:18:0",
=======
                      "scope": 421,
                      "src": "6539:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 405,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6789:7:0",
=======
                        "id": 398,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6539:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 410,
=======
                  "id": 403,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 408,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "6827:7:0",
=======
                        "id": 401,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "6577:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 407,
                      "name": "getBadgeTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "6810:16:0",
=======
                      "id": 400,
                      "name": "getBadgeTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "6560:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 409,
=======
                    "id": 402,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6810:25:0",
=======
                    "src": "6560:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6789:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "6846:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 411,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4145,
                      "src": "6841:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6841:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "6841:13:0"
=======
                  "src": "6539:46:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 424,
=======
                    "id": 413,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 415,
=======
                        "id": 404,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "name": "_templateQuantities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
<<<<<<< HEAD
                        "src": "6860:19:0",
=======
                        "src": "6591:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 417,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "6880:10:0",
=======
                      "id": 406,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 405,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "6611:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6860:31:0",
=======
                      "src": "6591:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 422,
=======
                          "id": 411,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6930:1:0",
=======
                          "src": "6661:1:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 418,
=======
                            "id": 407,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "name": "_templateQuantities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
<<<<<<< HEAD
                            "src": "6894:19:0",
=======
                            "src": "6625:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 420,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 419,
                            "name": "templateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "6914:10:0",
=======
                          "id": 409,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 408,
                            "name": "templateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "6645:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "6894:31:0",
=======
                          "src": "6625:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 421,
=======
                        "id": 410,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3018,
                        "src": "6894:35:0",
=======
                        "referencedDeclaration": 1710,
                        "src": "6625:35:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 423,
=======
                      "id": 412,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "6894:38:0",
=======
                      "src": "6625:38:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6860:72:0",
=======
                    "src": "6591:72:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "6860:72:0"
=======
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "6591:72:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "6674:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 415,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2837,
                      "src": "6669:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6669:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "6669:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
<<<<<<< HEAD
                    "id": 426,
=======
                    "id": 419,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "6945:4:0",
=======
                    "src": "6695:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 404,
                  "id": 427,
                  "nodeType": "Return",
                  "src": "6938:11:0"
=======
                  "functionReturnParameters": 397,
                  "id": 420,
                  "nodeType": "Return",
                  "src": "6688:11:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "6516:193:0",
              "text": "@notice Burn Badge\n @dev burn() Check if the caller is approved or owner of the Badge\n @param tokenId Token Id of the Badge to burn\n @return True if the Badge has been burned"
            },
            "functionSelector": "55de28ae",
            "id": 429,
=======
              "id": 389,
              "nodeType": "StructuredDocumentation",
              "src": "6266:193:0",
              "text": "@notice Burn Badge\n @dev burn() Check if the caller is approved or owner of the Badge\n @param tokenId Token Id of the Badge to burn\n @return True if the Badge has been burned"
            },
            "functionSelector": "55de28ae",
            "id": 422,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 401,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 400,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "6755:13:0",
=======
                "id": 394,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 393,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "6505:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "6755:13:0"
=======
                "src": "6505:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "burnBadge",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 399,
=======
              "id": 392,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 398,
=======
                  "id": 391,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 429,
                  "src": "6731:15:0",
=======
                  "scope": 422,
                  "src": "6481:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6731:7:0",
=======
                    "id": 390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6481:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6730:17:0"
            },
            "returnParameters": {
              "id": 404,
=======
              "src": "6480:17:0"
            },
            "returnParameters": {
              "id": 397,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 403,
=======
                  "id": 396,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 429,
                  "src": "6778:4:0",
=======
                  "scope": 422,
                  "src": "6528:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 402,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6778:4:0",
=======
                    "id": 395,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6777:6:0"
            },
            "scope": 456,
            "src": "6712:242:0",
=======
              "src": "6527:6:0"
            },
            "scope": 449,
            "src": "6462:242:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
<<<<<<< HEAD
              3973
            ],
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "7182:100:0",
=======
              2665
            ],
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "6932:100:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 442,
=======
                        "id": 435,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
<<<<<<< HEAD
                        "src": "7196:5:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 441,
=======
                        "src": "6946:5:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 434,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "7197:4:0",
=======
                          "src": "6947:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20746f6b656e207472616e736665722064697361626c6564",
<<<<<<< HEAD
                        "id": 443,
=======
                        "id": 436,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "7203:33:0",
=======
                        "src": "6953:33:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3dbf35fc31fa4c83cfddfa6e803cda2afd68dff0f3fe25ae76fa66d14f04eb1",
                          "typeString": "literal_string \"ERC721: token transfer disabled\""
                        },
                        "value": "ERC721: token transfer disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3dbf35fc31fa4c83cfddfa6e803cda2afd68dff0f3fe25ae76fa66d14f04eb1",
                          "typeString": "literal_string \"ERC721: token transfer disabled\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 440,
=======
                      "id": 433,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "7188:7:0",
=======
                      "src": "6938:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 444,
=======
                    "id": 437,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7188:49:0",
=======
                    "src": "6938:49:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "7188:49:0"
=======
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "6938:49:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 449,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "7259:4:0",
=======
                        "id": 442,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "7009:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 450,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "7265:2:0",
=======
                        "id": 443,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "7015:2:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 451,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "7269:7:0",
=======
                        "id": 444,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "7019:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 446,
=======
                        "id": 439,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
<<<<<<< HEAD
                        "src": "7243:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_BadgeFactory_$456",
                          "typeString": "contract super BadgeFactory"
                        }
                      },
                      "id": 448,
=======
                        "src": "6993:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_BadgeFactory_$449",
                          "typeString": "contract super BadgeFactory"
                        }
                      },
                      "id": 441,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3973,
                      "src": "7243:15:0",
=======
                      "referencedDeclaration": 2665,
                      "src": "6993:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 452,
=======
                    "id": 445,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7243:34:0",
=======
                    "src": "6993:34:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "7243:34:0"
=======
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "6993:34:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 430,
              "nodeType": "StructuredDocumentation",
              "src": "6958:141:0",
              "text": "@notice ERC721 _transfer() Disabled\n @dev _transfer() has been overriden\n @dev reverts on transferFrom() and safeTransferFrom()"
            },
            "id": 455,
=======
              "id": 423,
              "nodeType": "StructuredDocumentation",
              "src": "6708:141:0",
              "text": "@notice ERC721 _transfer() Disabled\n @dev _transfer() has been overriden\n @dev reverts on transferFrom() and safeTransferFrom()"
            },
            "id": 448,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< HEAD
              "id": 438,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7173:8:0"
            },
            "parameters": {
              "id": 437,
=======
              "id": 431,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6923:8:0"
            },
            "parameters": {
              "id": 430,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 432,
=======
                  "id": 425,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 455,
                  "src": "7121:12:0",
=======
                  "scope": 448,
                  "src": "6871:12:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7121:7:0",
=======
                    "id": 424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6871:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 434,
=======
                  "id": 427,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 455,
                  "src": "7135:10:0",
=======
                  "scope": 448,
                  "src": "6885:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7135:7:0",
=======
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6885:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 436,
=======
                  "id": 429,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 455,
                  "src": "7147:15:0",
=======
                  "scope": 448,
                  "src": "6897:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7147:7:0",
=======
                    "id": 428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6897:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7120:43:0"
            },
            "returnParameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7182:0:0"
            },
            "scope": 456,
            "src": "7102:180:0",
=======
              "src": "6870:43:0"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6932:0:0"
            },
            "scope": 449,
            "src": "6852:180:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 457,
        "src": "880:6405:0"
      }
    ],
    "src": "37:7249:0"
=======
        "scope": 450,
        "src": "880:6155:0"
      }
    ],
    "src": "37:6999:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
  },
  "legacyAST": {
    "absolutePath": "/home/sencha/insigniadao/contracts/BadgeFactory.sol",
    "exportedSymbols": {
      "BadgeFactory": [
<<<<<<< HEAD
        456
=======
        449
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
      ],
      "InsigniaDAO": [
        20
      ]
    },
<<<<<<< HEAD
    "id": 457,
=======
    "id": 450,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:0"
      },
      {
        "absolutePath": "/home/sencha/insigniadao/contracts/BadgeRoles.sol",
        "file": "./BadgeRoles.sol",
        "id": 2,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 457,
        "sourceUnit": 703,
=======
        "scope": 450,
        "sourceUnit": 597,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "src": "505:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 3,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 457,
        "sourceUnit": 4453,
=======
        "scope": 450,
        "sourceUnit": 3145,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "src": "532:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 457,
        "sourceUnit": 4147,
=======
        "scope": 450,
        "sourceUnit": 2839,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "src": "585:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/cryptography/MerkleProof.sol",
        "id": 5,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 457,
        "sourceUnit": 2905,
=======
        "scope": 450,
        "sourceUnit": 1597,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "src": "651:62:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 20,
        "linearizedBaseContracts": [
          20
        ],
        "name": "InsigniaDAO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "63a9c3d7",
            "id": 12,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "761:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "760:13:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12,
                  "src": "797:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "796:6:0"
            },
            "scope": 20,
            "src": "745:58:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "c2b40ae4",
            "id": 19,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "roots",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19,
                  "src": "823:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "822:20:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19,
                  "src": "866:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "865:9:0"
            },
            "scope": 20,
            "src": "808:67:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
<<<<<<< HEAD
        "scope": 457,
=======
        "scope": 450,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "src": "716:162:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21,
              "name": "BadgeRoles",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 702,
              "src": "905:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BadgeRoles_$702",
=======
              "referencedDeclaration": 596,
              "src": "905:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BadgeRoles_$596",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "contract BadgeRoles"
              }
            },
            "id": 22,
            "nodeType": "InheritanceSpecifier",
            "src": "905:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 4146,
              "src": "917:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$4146",
=======
              "referencedDeclaration": 2838,
              "src": "917:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$2838",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 24,
            "nodeType": "InheritanceSpecifier",
            "src": "917:14:0"
          }
        ],
        "contractDependencies": [
<<<<<<< HEAD
          702,
          1840,
          2097,
          2361,
          2626,
          2735,
          2960,
          2972,
          4116,
          4146,
          4262,
          4293,
          4320,
          5392
=======
          596,
          1151,
          1416,
          1525,
          1652,
          1664,
          2808,
          2838,
          2954,
          2985,
          3012,
          4084
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 456,
        "linearizedBaseContracts": [
          456,
          4146,
          4116,
          4293,
          4320,
          4262,
          2960,
          2972,
          702,
          1840,
          2097,
          5392,
          2626,
          2735,
          2361
=======
        "id": 449,
        "linearizedBaseContracts": [
          449,
          2838,
          2808,
          2985,
          3012,
          2954,
          1652,
          1664,
          596,
          4084,
          1416,
          1525,
          1151
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        ],
        "name": "BadgeFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 27,
            "libraryName": {
              "contractScope": null,
              "id": 25,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 3168,
              "src": "959:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3168",
=======
              "referencedDeclaration": 1860,
              "src": "959:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1860",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "953:27:0",
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "972:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 30,
            "libraryName": {
              "contractScope": null,
              "id": 28,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 4452,
              "src": "989:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$4452",
=======
              "referencedDeclaration": 3144,
              "src": "989:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$3144",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "983:36:0",
            "typeName": {
              "contractScope": null,
              "id": 29,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 4412,
              "src": "1002:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$4412_storage_ptr",
=======
              "referencedDeclaration": 3104,
              "src": "1002:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3104_storage_ptr",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 34,
            "libraryName": {
              "contractScope": null,
              "id": 31,
              "name": "MerkleProof",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 2904,
              "src": "1028:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleProof_$2904",
=======
              "referencedDeclaration": 1596,
              "src": "1028:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleProof_$1596",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "library MerkleProof"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1022:32:0",
            "typeName": {
              "baseType": {
                "id": 32,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1044:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 33,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1044:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1058:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
<<<<<<< HEAD
              "typeIdentifier": "t_struct$_Counter_$4412_storage",
=======
              "typeIdentifier": "t_struct$_Counter_$3104_storage",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 35,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 4412,
              "src": "1058:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$4412_storage_ptr",
=======
              "referencedDeclaration": 3104,
              "src": "1058:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3104_storage_ptr",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "insignia",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1103:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InsigniaDAO_$20",
              "typeString": "contract InsigniaDAO"
            },
            "typeName": {
              "contractScope": null,
              "id": 37,
              "name": "InsigniaDAO",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20,
              "src": "1103:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                "typeString": "contract InsigniaDAO"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 39,
              "nodeType": "StructuredDocumentation",
              "src": "1137:10:0",
              "text": "Events"
            },
            "id": 49,
            "name": "NewTemplate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "1168:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "1188:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "1201:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "image",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 49,
                  "src": "1221:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1167:67:0"
            },
            "src": "1150:85:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 59,
            "name": "BadgeActivated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "redeemer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "1259:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "1277:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "1294:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 59,
                  "src": "1314:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1258:72:0"
            },
            "src": "1238:93:0"
          },
          {
            "canonicalName": "BadgeFactory.BadgeTemplate",
            "id": 68,
            "members": [
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 68,
                "src": "1362:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 60,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1362:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "description",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 68,
                "src": "1379:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 62,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1379:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "image",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 68,
                "src": "1403:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 64,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1403:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 68,
                "src": "1421:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 66,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "BadgeTemplate",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1335:104:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 71,
            "mutability": "mutable",
            "name": "templates",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1443:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
              "typeString": "struct BadgeFactory.BadgeTemplate[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 69,
                "name": "BadgeTemplate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 68,
                "src": "1443:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BadgeTemplate_$68_storage_ptr",
                  "typeString": "struct BadgeFactory.BadgeTemplate"
                }
              },
              "id": 70,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1443:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage_ptr",
                "typeString": "struct BadgeFactory.BadgeTemplate[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 75,
            "mutability": "mutable",
            "name": "_templateQuantities",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1519:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 74,
              "keyType": {
                "id": 72,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1527:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1519:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 73,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1538:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 79,
            "mutability": "mutable",
            "name": "_tokenTemplates",
            "nodeType": "VariableDeclaration",
            "overrides": null,
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1578:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 78,
              "keyType": {
                "id": 76,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1586:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1578:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 77,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1597:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1717:100:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "68747470733a2f2f6261646765732e6d616b657264616f2e636f6d2f746f6b656e2f",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1735:36:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5403b456c65c8757943b3b82bfd82a9b96015d20c312fb1fe7ee407ccdea828b",
                          "typeString": "literal_string \"https://badges.makerdao.com/token/\""
                        },
                        "value": "https://badges.makerdao.com/token/"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5403b456c65c8757943b3b82bfd82a9b96015d20c312fb1fe7ee407ccdea828b",
                          "typeString": "literal_string \"https://badges.makerdao.com/token/\""
                        }
                      ],
                      "id": 88,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 4006,
=======
                      "referencedDeclaration": 2698,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "src": "1723:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1723:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1723:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "insignia",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1778:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                        "typeString": "contract InsigniaDAO"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 94,
                          "name": "insignia_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "1801:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 93,
                        "name": "InsigniaDAO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1789:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InsigniaDAO_$20_$",
                          "typeString": "type(contract InsigniaDAO)"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1789:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                        "typeString": "contract InsigniaDAO"
                      }
                    },
                    "src": "1778:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                      "typeString": "contract InsigniaDAO"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 99,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "496e7369676e6961426164676573",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1676:16:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7d5122e430252b8061b21da84436a43b100c05e53620ac7dfc2323c8573e5b35",
                      "typeString": "literal_string \"InsigniaBadges\""
                    },
                    "value": "InsigniaBadges"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "424144474553",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1694:8:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5fd9433ef4e19a0d5d1b854e53ae6c091e724c22341c7d37f4a2fa7539bc9017",
                      "typeString": "literal_string \"BADGES\""
                    },
                    "value": "BADGES"
                  }
                ],
                "id": 86,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 83,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 4116,
                  "src": "1669:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$4116_$",
=======
                  "referencedDeclaration": 2808,
                  "src": "1669:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2808_$",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1669:34:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "insignia_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 99,
                  "src": "1646:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1645:19:0"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1717:0:0"
            },
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1634:183:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1974:19:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 103,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1980:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1980:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:8:0"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1821:130:0",
              "text": "@notice Fallback function\n @dev Added not payable to revert transactions not matching any other function which send value"
            },
            "id": 107,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1962:2:0"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1974:0:0"
            },
<<<<<<< HEAD
            "scope": 456,
=======
            "scope": 449,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "src": "1954:39:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              624,
              2349
            ],
            "body": {
              "id": 120,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2236:57:0",
=======
              "src": "2239:48:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "BaseRelayRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1840,
                        "src": "2257:18:0",
=======
                        "referencedDeclaration": 110,
                        "src": "2257:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseRelayRecipient_$1840_$",
                          "typeString": "type(contract BaseRelayRecipient)"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1839,
                      "src": "2257:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2257:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 115,
                  "id": 119,
                  "nodeType": "Return",
                  "src": "2250:38:0"
                }
              ]
            },
            "documentation": {
              "id": 108,
              "nodeType": "StructuredDocumentation",
              "src": "1997:144:0",
              "text": "@notice OpenGSN _msgSender()\n @dev override _msgSender() in OZ Context.sol and BadgeRoles.sol\n @return msg.sender after relay call"
            },
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 112,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 110,
                  "name": "Context",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2361,
                  "src": "2184:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Context_$2361",
                    "typeString": "contract Context"
                  }
                },
                {
                  "contractScope": null,
                  "id": 111,
                  "name": "BadgeRoles",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 702,
                  "src": "2193:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BadgeRoles_$702",
                    "typeString": "contract BadgeRoles"
                  }
                }
              ],
              "src": "2175:29:0"
            },
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2163:2:0"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 121,
                  "src": "2219:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2219:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2218:17:0"
            },
            "scope": 456,
            "src": "2144:149:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2539:48:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2557:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 131,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 4006,
                      "src": "2545:11:0",
=======
                      "referencedDeclaration": 2698,
                      "src": "2245:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2545:20:0",
=======
                    "src": "2245:20:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2545:20:0"
=======
                  "src": "2245:20:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "2578:4:0",
=======
                    "src": "2278:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 130,
                  "id": 136,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "2571:11:0"
=======
                  "src": "2271:11:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "2297:164:0",
=======
              "src": "1997:164:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Set the baseURI\n @dev Update the baseURI specified in the constructor\n @param baseURI New baseURI\n @return True if the new baseURI is set"
            },
            "functionSelector": "55f804b3",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 127,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 126,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2684,
                  "src": "2514:9:0",
=======
                  "referencedDeclaration": 1474,
                  "src": "2214:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "2514:9:0"
=======
                "src": "2214:9:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "setBaseURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 138,
                  "src": "2484:21:0",
=======
                  "scope": 124,
                  "src": "2184:21:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2484:6:0",
=======
                    "src": "2184:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2483:23:0"
=======
              "src": "2183:23:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 138,
                  "src": "2533:4:0",
=======
                  "scope": 124,
                  "src": "2233:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2533:4:0",
=======
                    "src": "2233:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2532:6:0"
            },
            "scope": 456,
            "src": "2464:123:0",
=======
              "src": "2232:6:0"
            },
            "scope": 449,
            "src": "2164:123:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2978:152:0",
=======
              "src": "2678:152:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 141,
                        "src": "2990:2:0",
=======
                        "referencedDeclaration": 127,
                        "src": "2690:2:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 150,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
<<<<<<< HEAD
                            "src": "2994:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$4412_storage",
=======
                            "src": "2694:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3104_storage",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 4423,
                          "src": "2994:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$4412_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$4412_storage_ptr_$",
=======
                          "referencedDeclaration": 3115,
                          "src": "2694:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3104_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3104_storage_ptr_$",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2994:25:0",
=======
                        "src": "2694:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 148,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 3834,
                      "src": "2984:5:0",
=======
                      "referencedDeclaration": 2526,
                      "src": "2684:5:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2984:36:0",
=======
                    "src": "2684:36:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2984:36:0"
=======
                  "src": "2684:36:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
<<<<<<< HEAD
                            "src": "3039:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$4412_storage",
=======
                            "src": "2739:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3104_storage",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 4423,
                          "src": "3039:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$4412_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$4412_storage_ptr_$",
=======
                          "referencedDeclaration": 3115,
                          "src": "2739:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3104_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3104_storage_ptr_$",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3039:25:0",
=======
                        "src": "2739:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 143,
                        "src": "3066:8:0",
=======
                        "referencedDeclaration": 129,
                        "src": "2766:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 3995,
                      "src": "3026:12:0",
=======
                      "referencedDeclaration": 2687,
                      "src": "2726:12:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3026:49:0",
=======
                    "src": "2726:49:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3026:49:0"
=======
                  "src": "2726:49:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
<<<<<<< HEAD
                        "src": "3081:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$4412_storage",
=======
                        "src": "2781:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3104_storage",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 4435,
                      "src": "3081:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$4412_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$4412_storage_ptr_$",
=======
                      "referencedDeclaration": 3127,
                      "src": "2781:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$3104_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3104_storage_ptr_$",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3081:27:0",
=======
                    "src": "2781:27:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3081:27:0"
=======
                  "src": "2781:27:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "3121:4:0",
=======
                    "src": "2821:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 147,
                  "id": 168,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "3114:11:0"
=======
                  "src": "2814:11:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 139,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "2591:297:0",
=======
              "src": "2291:297:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Mint new token with tokenURI\n @dev Use an auto-generated tokenId\n @dev automatically concatenate baseURI with tokenURI via abi.encodePacked\n @param to owner of the new token\n @param tokenURI an <ipfs-hash>.json filename\n @return True if the new token is minted"
            },
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintWithTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 170,
                  "src": "2918:10:0",
=======
                  "scope": 156,
                  "src": "2618:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2918:7:0",
=======
                    "src": "2618:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 170,
                  "src": "2930:22:0",
=======
                  "scope": 156,
                  "src": "2630:22:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2930:6:0",
=======
                    "src": "2630:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2917:36:0"
=======
              "src": "2617:36:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 170,
                  "src": "2972:4:0",
=======
                  "scope": 156,
                  "src": "2672:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2972:4:0",
=======
                    "src": "2672:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2971:6:0"
            },
            "scope": 456,
            "src": "2891:239:0",
=======
              "src": "2671:6:0"
            },
            "scope": 449,
            "src": "2591:239:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "3487:202:0",
=======
              "src": "3187:202:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "templates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
<<<<<<< HEAD
                            "src": "3501:9:0",
=======
                            "src": "3201:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                              "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3501:16:0",
=======
                          "src": "3201:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "templateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 173,
                          "src": "3520:10:0",
=======
                          "referencedDeclaration": 159,
                          "src": "3220:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "3501:29:0",
=======
                        "src": "3201:29:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2074656d706c61746520776974682074686174206964",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3532:26:0",
=======
                        "src": "3232:26:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        },
                        "value": "No template with that id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "3493:7:0",
=======
                      "src": "3193:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3493:66:0",
=======
                    "src": "3193:66:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3493:66:0"
=======
                  "src": "3193:66:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "assignments": [
                    193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 193,
                      "mutability": "mutable",
                      "name": "template",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
<<<<<<< HEAD
                      "scope": 206,
                      "src": "3565:29:0",
=======
                      "scope": 192,
                      "src": "3265:29:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                        "typeString": "struct BadgeFactory.BadgeTemplate"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 192,
                        "name": "BadgeTemplate",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 68,
<<<<<<< HEAD
                        "src": "3565:13:0",
=======
                        "src": "3265:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BadgeTemplate_$68_storage_ptr",
                          "typeString": "struct BadgeFactory.BadgeTemplate"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 197,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "templates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
<<<<<<< HEAD
                      "src": "3597:9:0",
=======
                      "src": "3297:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                        "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                      }
                    },
                    "id": 196,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 195,
                      "name": "templateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 173,
                      "src": "3607:10:0",
=======
                      "referencedDeclaration": 159,
                      "src": "3307:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "3597:21:0",
=======
                    "src": "3297:21:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BadgeTemplate_$68_storage",
                      "typeString": "struct BadgeFactory.BadgeTemplate storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3565:53:0"
=======
                  "src": "3265:53:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 198,
                          "name": "template",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 193,
                          "src": "3632:8:0",
=======
                          "referencedDeclaration": 179,
                          "src": "3332:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                            "typeString": "struct BadgeFactory.BadgeTemplate memory"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61,
<<<<<<< HEAD
                        "src": "3632:13:0",
=======
                        "src": "3332:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 200,
                          "name": "template",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 193,
                          "src": "3647:8:0",
=======
                          "referencedDeclaration": 179,
                          "src": "3347:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                            "typeString": "struct BadgeFactory.BadgeTemplate memory"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "description",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63,
<<<<<<< HEAD
                        "src": "3647:20:0",
=======
                        "src": "3347:20:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "template",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 193,
                          "src": "3669:8:0",
=======
                          "referencedDeclaration": 179,
                          "src": "3369:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                            "typeString": "struct BadgeFactory.BadgeTemplate memory"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "image",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65,
<<<<<<< HEAD
                        "src": "3669:14:0",
=======
                        "src": "3369:14:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 204,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "3631:53:0",
=======
                    "src": "3331:53:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                      "typeString": "tuple(string memory,string memory,string memory)"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 205,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "3624:60:0"
=======
                  "src": "3324:60:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "3134:206:0",
=======
              "src": "2834:206:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Getter function for templates\n @dev Check if templateId exists\n @param templateId Template Id of the template to return\n @return name description image Of the specified templateId"
            },
            "functionSelector": "31543cf4",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 176,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 175,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "3396:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "3096:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3396:13:0"
=======
                "src": "3096:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "getTemplate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 207,
                  "src": "3364:18:0",
=======
                  "scope": 193,
                  "src": "3064:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3364:7:0",
=======
                    "src": "3064:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3363:20:0"
=======
              "src": "3063:20:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 207,
                  "src": "3419:18:0",
=======
                  "scope": 193,
                  "src": "3119:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3419:6:0",
=======
                    "src": "3119:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 207,
                  "src": "3439:25:0",
=======
                  "scope": 193,
                  "src": "3139:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3439:6:0",
=======
                    "src": "3139:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "image",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 207,
                  "src": "3466:19:0",
=======
                  "scope": 193,
                  "src": "3166:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3466:6:0",
=======
                    "src": "3166:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3418:68:0"
            },
            "scope": 456,
            "src": "3343:346:0",
=======
              "src": "3118:68:0"
            },
            "scope": 449,
            "src": "3043:346:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "3935:34:0",
=======
              "src": "3635:34:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 215,
                      "name": "templates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
<<<<<<< HEAD
                      "src": "3948:9:0",
=======
                      "src": "3648:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                        "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
<<<<<<< HEAD
                    "src": "3948:16:0",
=======
                    "src": "3648:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 214,
                  "id": 217,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "3941:23:0"
=======
                  "src": "3641:23:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 208,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "3694:159:0",
=======
              "src": "3394:159:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "Templates\n @notice Getter function for templates count\n @dev Return lenght of template array\n @return count The current number of templates"
            },
            "functionSelector": "b5900eea",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 211,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 210,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "3897:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "3597:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3897:13:0"
=======
                "src": "3597:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "getTemplatesCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "3882:2:0"
=======
              "src": "3582:2:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "count",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 219,
                  "src": "3920:13:0",
=======
                  "scope": 205,
                  "src": "3620:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3920:7:0",
=======
                    "src": "3620:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3919:15:0"
            },
            "scope": 456,
            "src": "3856:113:0",
=======
              "src": "3619:15:0"
            },
            "scope": 449,
            "src": "3556:113:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 268,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "4412:332:0",
=======
              "src": "4112:330:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "_newTemplate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
<<<<<<< HEAD
                      "scope": 268,
                      "src": "4419:33:0",
=======
                      "scope": 254,
                      "src": "4119:33:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                        "typeString": "struct BadgeFactory.BadgeTemplate"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 235,
                        "name": "BadgeTemplate",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 68,
<<<<<<< HEAD
                        "src": "4419:13:0",
=======
                        "src": "4119:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BadgeTemplate_$68_storage_ptr",
                          "typeString": "struct BadgeFactory.BadgeTemplate"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 238,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 222,
                        "src": "4484:4:0",
=======
                        "referencedDeclaration": 208,
                        "src": "4184:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 239,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
<<<<<<< HEAD
                          "overloadedDeclarations": [
                            121
                          ],
                          "referencedDeclaration": 121,
                          "src": "4504:10:0",
=======
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4204:3:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
<<<<<<< HEAD
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4504:12:0",
                        "tryCall": false,
=======
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4204:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 241,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 224,
                        "src": "4538:11:0",
=======
                        "referencedDeclaration": 210,
                        "src": "4236:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "image",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 226,
                        "src": "4565:5:0",
=======
                        "referencedDeclaration": 212,
                        "src": "4263:5:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 237,
                      "name": "BadgeTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
<<<<<<< HEAD
                      "src": "4455:13:0",
=======
                      "src": "4155:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_BadgeTemplate_$68_storage_ptr_$",
                        "typeString": "type(struct BadgeFactory.BadgeTemplate storage pointer)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "name",
                      "owner",
                      "description",
                      "image"
                    ],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4455:122:0",
=======
                    "src": "4155:120:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                      "typeString": "struct BadgeFactory.BadgeTemplate memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4419:158:0"
=======
                  "src": "4119:156:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 248,
                        "name": "_newTemplate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 236,
                        "src": "4598:12:0",
=======
                        "referencedDeclaration": 222,
                        "src": "4296:12:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                          "typeString": "struct BadgeFactory.BadgeTemplate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BadgeTemplate_$68_memory_ptr",
                          "typeString": "struct BadgeFactory.BadgeTemplate memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "templates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
<<<<<<< HEAD
                        "src": "4583:9:0",
=======
                        "src": "4281:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                          "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "4583:14:0",
=======
                      "src": "4281:14:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_BadgeTemplate_$68_storage_$returns$__$",
                        "typeString": "function (struct BadgeFactory.BadgeTemplate storage ref)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4583:28:0",
=======
                    "src": "4281:28:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4583:28:0"
=======
                  "src": "4281:28:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 251,
                      "name": "_templateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 233,
                      "src": "4617:11:0",
=======
                      "referencedDeclaration": 219,
                      "src": "4315:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4652:1:0",
=======
                          "src": "4350:1:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 252,
                            "name": "templates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
<<<<<<< HEAD
                            "src": "4631:9:0",
=======
                            "src": "4329:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                              "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4631:16:0",
=======
                          "src": "4329:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3018,
                        "src": "4631:20:0",
=======
                        "referencedDeclaration": 1710,
                        "src": "4329:20:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "4631:23:0",
=======
                      "src": "4329:23:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "4617:37:0",
=======
                    "src": "4315:37:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4617:37:0"
=======
                  "src": "4315:37:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 260,
                        "name": "_templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 233,
                        "src": "4677:11:0",
=======
                        "referencedDeclaration": 219,
                        "src": "4375:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 261,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 222,
                        "src": "4690:4:0",
=======
                        "referencedDeclaration": 208,
                        "src": "4388:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 224,
                        "src": "4696:11:0",
=======
                        "referencedDeclaration": 210,
                        "src": "4394:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "image",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 226,
                        "src": "4709:5:0",
=======
                        "referencedDeclaration": 212,
                        "src": "4407:5:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 259,
                      "name": "NewTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
<<<<<<< HEAD
                      "src": "4665:11:0",
=======
                      "src": "4363:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory,string memory,string memory)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4665:50:0",
=======
                    "src": "4363:50:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "4660:55:0"
=======
                  "src": "4358:55:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 266,
                    "name": "_templateId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 233,
                    "src": "4728:11:0",
=======
                    "referencedDeclaration": 219,
                    "src": "4426:11:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 234,
                  "id": 267,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "4721:18:0"
=======
                  "src": "4419:18:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 220,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "3973:279:0",
=======
              "src": "3673:279:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Create a new template\n @dev Access restricted to only Templaters\n @param name The name of the new template\n @param description A description of the new template\n @param image A filename of the new template\n @return _templateId The template Id"
            },
            "functionSelector": "ccb4bcb6",
            "id": 269,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 228,
                  "name": "onlyTemplater",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 610,
                  "src": "4354:13:0",
=======
                  "referencedDeclaration": 517,
                  "src": "4054:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "4354:13:0"
=======
                "src": "4054:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              },
              {
                "arguments": null,
                "id": 231,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 230,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "4368:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "4068:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "4368:13:0"
=======
                "src": "4068:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "createTemplate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 269,
                  "src": "4279:18:0",
=======
                  "scope": 255,
                  "src": "3979:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4279:6:0",
=======
                    "src": "3979:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 269,
                  "src": "4299:25:0",
=======
                  "scope": 255,
                  "src": "3999:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4299:6:0",
=======
                    "src": "3999:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "image",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 269,
                  "src": "4326:19:0",
=======
                  "scope": 255,
                  "src": "4026:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4326:6:0",
=======
                    "src": "4026:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4278:68:0"
=======
              "src": "3978:68:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 269,
                  "src": "4391:19:0",
=======
                  "scope": 255,
                  "src": "4091:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4391:7:0",
=======
                    "src": "4091:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4390:21:0"
            },
            "scope": 456,
            "src": "4255:489:0",
=======
              "src": "4090:21:0"
            },
            "scope": 449,
            "src": "3955:487:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "5057:106:0",
=======
              "src": "4755:106:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 272,
                            "src": "5079:7:0",
=======
                            "referencedDeclaration": 258,
                            "src": "4777:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 280,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3691,
                          "src": "5071:7:0",
=======
                          "referencedDeclaration": 2383,
                          "src": "4769:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "5071:16:0",
=======
                        "src": "4769:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a204e6f20746f6b656e20776974682074686174206964",
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5089:31:0",
=======
                        "src": "4787:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eee2b6618e8df95b0bf38e60b6b75845e9dc548b9448795c7b246ad7b049d106",
                          "typeString": "literal_string \"ERC721: No token with that id\""
                        },
                        "value": "ERC721: No token with that id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eee2b6618e8df95b0bf38e60b6b75845e9dc548b9448795c7b246ad7b049d106",
                          "typeString": "literal_string \"ERC721: No token with that id\""
                        }
                      ],
                      "id": 279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "5063:7:0",
=======
                      "src": "4761:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5063:58:0",
=======
                    "src": "4761:58:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5063:58:0"
=======
                  "src": "4761:58:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 286,
                      "name": "_tokenTemplates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
<<<<<<< HEAD
                      "src": "5134:15:0",
=======
                      "src": "4832:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 288,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 287,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 272,
                      "src": "5150:7:0",
=======
                      "referencedDeclaration": 258,
                      "src": "4848:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "5134:24:0",
=======
                    "src": "4832:24:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 278,
                  "id": 289,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "5127:31:0"
=======
                  "src": "4825:31:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 270,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "4761:206:0",
=======
              "src": "4459:206:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Getter function for templateId associated with the tokenId\n @dev Check if the tokenId exists\n @param tokenId Token Id of the Badge\n @return Template Id associated with the tokenId"
            },
            "functionSelector": "4de46fd0",
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 275,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 274,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "5025:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "4723:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "5025:13:0"
=======
                "src": "4723:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "getBadgeTemplate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 291,
                  "src": "4996:15:0",
=======
                  "scope": 277,
                  "src": "4694:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4996:7:0",
=======
                    "src": "4694:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4995:17:0"
=======
              "src": "4693:17:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 291,
                  "src": "5048:7:0",
=======
                  "scope": 277,
                  "src": "4746:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5048:7:0",
=======
                    "src": "4746:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5047:9:0"
            },
            "scope": 456,
            "src": "4970:193:0",
=======
              "src": "4745:9:0"
            },
            "scope": 449,
            "src": "4668:193:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 313,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "5482:121:0",
=======
              "src": "5180:121:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 302,
                            "name": "templates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
<<<<<<< HEAD
                            "src": "5496:9:0",
=======
                            "src": "5194:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                              "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "5496:16:0",
=======
                          "src": "5194:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "templateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 294,
                          "src": "5515:10:0",
=======
                          "referencedDeclaration": 280,
                          "src": "5213:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "5496:29:0",
=======
                        "src": "5194:29:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2074656d706c61746520776974682074686174206964",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5527:26:0",
=======
                        "src": "5225:26:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        },
                        "value": "No template with that id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        }
                      ],
                      "id": 301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "5488:7:0",
=======
                      "src": "5186:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5488:66:0",
=======
                    "src": "5186:66:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5488:66:0"
=======
                  "src": "5186:66:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "_templateQuantities",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
<<<<<<< HEAD
                      "src": "5567:19:0",
=======
                      "src": "5265:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 311,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 310,
                      "name": "templateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 294,
                      "src": "5587:10:0",
=======
                      "referencedDeclaration": 280,
                      "src": "5285:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "5567:31:0",
=======
                    "src": "5265:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 300,
                  "id": 312,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "5560:38:0"
=======
                  "src": "5258:38:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 292,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "5167:214:0",
=======
              "src": "4865:214:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "text": "@notice Getter function for number of badges associated with templateId\n @dev Check if the template Id exists\n @param templateId Template Id\n @return Quantity of Badges associated with templateId"
            },
            "functionSelector": "04523af1",
            "id": 314,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 297,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 296,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "5450:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "5148:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "5450:13:0"
=======
                "src": "5148:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "getBadgeTemplateQuantity",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 314,
                  "src": "5418:18:0",
=======
                  "scope": 300,
                  "src": "5116:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5418:7:0",
=======
                    "src": "5116:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5417:20:0"
=======
              "src": "5115:20:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 314,
                  "src": "5473:7:0",
=======
                  "scope": 300,
                  "src": "5171:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5473:7:0",
=======
                    "src": "5171:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5472:9:0"
            },
            "scope": 456,
            "src": "5384:219:0",
=======
              "src": "5170:9:0"
            },
            "scope": 449,
            "src": "5082:219:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 394,
              "nodeType": "Block",
              "src": "5983:529:0",
=======
              "id": 387,
              "nodeType": "Block",
              "src": "5681:581:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 330,
                            "name": "templates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
<<<<<<< HEAD
                            "src": "5997:9:0",
=======
                            "src": "5695:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BadgeTemplate_$68_storage_$dyn_storage",
                              "typeString": "struct BadgeFactory.BadgeTemplate storage ref[] storage ref"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "5997:16:0",
=======
                          "src": "5695:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 332,
                          "name": "templateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 320,
                          "src": "6016:10:0",
=======
                          "referencedDeclaration": 306,
                          "src": "5714:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "5997:29:0",
=======
                        "src": "5695:29:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2074656d706c61746520776974682074686174206964",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6028:26:0",
=======
                        "src": "5726:26:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        },
                        "value": "No template with that id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9faec80795fda44b8e2941d8d9e2d23f87cc3e7648ec81242e8c98525a5954ed",
                          "typeString": "literal_string \"No template with that id\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "5989:7:0",
=======
                      "src": "5687:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5989:66:0",
=======
                    "src": "5687:66:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5989:66:0"
=======
                  "src": "5687:66:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 340,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
<<<<<<< HEAD
                                "overloadedDeclarations": [
                                  121
                                ],
                                "referencedDeclaration": 121,
                                "src": "6085:10:0",
=======
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5783:3:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
<<<<<<< HEAD
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6085:12:0",
                              "tryCall": false,
=======
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5783:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 338,
                              "name": "insignia",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
<<<<<<< HEAD
                              "src": "6069:8:0",
=======
                              "src": "5767:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                                "typeString": "contract InsigniaDAO"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
<<<<<<< HEAD
                            "src": "6069:15:0",
=======
                            "src": "5767:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6069:29:0",
=======
                          "src": "5767:27:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 347,
                                  "name": "templateId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
<<<<<<< HEAD
                                  "referencedDeclaration": 320,
                                  "src": "6130:10:0",
=======
                                  "referencedDeclaration": 306,
                                  "src": "5826:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 345,
                                  "name": "insignia",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
<<<<<<< HEAD
                                  "src": "6115:8:0",
=======
                                  "src": "5811:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_InsigniaDAO_$20",
                                    "typeString": "contract InsigniaDAO"
                                  }
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "roots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19,
<<<<<<< HEAD
                                "src": "6115:14:0",
=======
                                "src": "5811:14:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bytes32_$",
                                  "typeString": "function (uint256) view external returns (bytes32)"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "6115:26:0",
=======
                              "src": "5811:26:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 352,
                                        "name": "_msgSender",
                                        "nodeType": "Identifier",
<<<<<<< HEAD
                                        "overloadedDeclarations": [
                                          121
                                        ],
                                        "referencedDeclaration": 121,
                                        "src": "6170:10:0",
=======
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "5866:3:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                          "typeString": "function () view returns (address payable)"
                                        }
                                      },
                                      "id": 353,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
<<<<<<< HEAD
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6170:12:0",
                                      "tryCall": false,
=======
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "5866:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 350,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
<<<<<<< HEAD
                                      "src": "6153:3:0",
=======
                                      "src": "5849:3:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 351,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
<<<<<<< HEAD
                                    "src": "6153:16:0",
=======
                                    "src": "5849:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "6153:30:0",
=======
                                  "src": "5849:28:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 349,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
<<<<<<< HEAD
                                "src": "6143:9:0",
=======
                                "src": "5839:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "6143:41:0",
=======
                              "src": "5839:39:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 343,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 318,
                              "src": "6102:5:0",
=======
                              "referencedDeclaration": 304,
                              "src": "5798:5:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 2903,
                            "src": "6102:12:0",
=======
                            "referencedDeclaration": 1595,
                            "src": "5798:12:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6102:83:0",
=======
                          "src": "5798:81:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "6069:116:0",
=======
                        "src": "5767:112:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206973206e6f7420612072656465656d6572",
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6187:26:0",
=======
                        "src": "5881:26:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c643423efa367d95c3ddd289673f3b3e8ede8023fe51c4f9ac33a28adc55ba9",
                          "typeString": "literal_string \"Caller is not a redeemer\""
                        },
                        "value": "Caller is not a redeemer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c643423efa367d95c3ddd289673f3b3e8ede8023fe51c4f9ac33a28adc55ba9",
                          "typeString": "literal_string \"Caller is not a redeemer\""
                        }
                      ],
                      "id": 337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "6061:7:0",
=======
                      "src": "5759:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6061:153:0",
=======
                    "src": "5759:149:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6061:153:0"
=======
                  "src": "5759:149:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 362,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            121
                          ],
                          "referencedDeclaration": 121,
                          "src": "6239:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6239:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "6253:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 361,
                      "name": "_mintWithTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "6221:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string memory) returns (bool)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6221:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "6221:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
=======
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 367,
=======
                        "id": 347,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "name": "_tokenTemplates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
<<<<<<< HEAD
                        "src": "6300:15:0",
=======
                        "src": "5946:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 369,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 368,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "6316:8:0",
=======
                      "id": 349,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "5962:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6300:25:0",
=======
                      "src": "5946:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 370,
                      "name": "templateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "6328:10:0",
=======
                      "id": 350,
                      "name": "templateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "5974:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6300:38:0",
=======
                    "src": "5946:38:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "6300:38:0"
=======
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "5946:38:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 382,
=======
                    "id": 362,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 373,
=======
                        "id": 353,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "name": "_templateQuantities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
<<<<<<< HEAD
                        "src": "6344:19:0",
=======
                        "src": "5990:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 375,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 374,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "6364:10:0",
=======
                      "id": 355,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "6010:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6344:31:0",
=======
                      "src": "5990:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 380,
=======
                          "id": 360,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6414:1:0",
=======
                          "src": "6060:1:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 376,
=======
                            "id": 356,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "name": "_templateQuantities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
<<<<<<< HEAD
                            "src": "6378:19:0",
=======
                            "src": "6024:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 378,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 377,
                            "name": "templateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "6398:10:0",
=======
                          "id": 358,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "templateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "6044:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "6378:31:0",
=======
                          "src": "6024:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 379,
=======
                        "id": 359,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3001,
                        "src": "6378:35:0",
=======
                        "referencedDeclaration": 1693,
                        "src": "6024:35:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 381,
=======
                      "id": 361,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "6378:38:0",
=======
                      "src": "6024:38:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6344:72:0",
=======
                    "src": "5990:72:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "6344:72:0"
=======
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "5990:72:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 387,
                      "src": "6070:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6070:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 371,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
<<<<<<< HEAD
                          "argumentTypes": [],
                          "id": 385,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            121
                          ],
                          "referencedDeclaration": 121,
                          "src": "6442:10:0",
=======
                          "argumentTypes": null,
                          "id": 367,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6104:3:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
<<<<<<< HEAD
                        "id": 386,
=======
                        "id": 368,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
<<<<<<< HEAD
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6442:12:0",
                        "tryCall": false,
=======
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6104:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 387,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "6455:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "6465:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 389,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "6477:8:0",
=======
                        "id": 369,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "6116:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 366,
                      "name": "_mintWithTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "6086:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string memory) returns (bool)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6086:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6069:56:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 373,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "6139:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e206e6f74206d696e746564",
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6148:18:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df04c9a35c143c96cd1def60cca4e1c1a0ada28d45389a70f82fa1b531e05c1",
                          "typeString": "literal_string \"Token not minted\""
                        },
                        "value": "Token not minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df04c9a35c143c96cd1def60cca4e1c1a0ada28d45389a70f82fa1b531e05c1",
                          "typeString": "literal_string \"Token not minted\""
                        }
                      ],
                      "id": 372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6131:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6131:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "6131:36:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 378,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6194:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6194:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "6205:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 381,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "6215:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 382,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "6227:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
<<<<<<< HEAD
                      "id": 384,
=======
                      "id": 377,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "name": "BadgeActivated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
<<<<<<< HEAD
                      "src": "6427:14:0",
=======
                      "src": "6179:14:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,string memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 390,
=======
                    "id": 383,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6427:59:0",
=======
                    "src": "6179:57:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 391,
                  "nodeType": "EmitStatement",
                  "src": "6422:64:0"
=======
                  "id": 384,
                  "nodeType": "EmitStatement",
                  "src": "6174:62:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 392,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 327,
                    "src": "6499:8:0",
=======
                    "id": 385,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 313,
                    "src": "6249:8:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 328,
                  "id": 393,
                  "nodeType": "Return",
                  "src": "6492:15:0"
=======
                  "functionReturnParameters": 314,
                  "id": 386,
                  "nodeType": "Return",
                  "src": "6242:15:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
              "id": 315,
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "5607:234:0",
              "text": "@notice Activate Badge by redeemers\n @dev Verify if the caller is a redeemer\n @param proof Merkle Proof\n @param templateId Template Id\n @param tokenURI Token URI\n @return _tokenId Token Id of the new Badge"
            },
            "functionSelector": "d4c10e46",
            "id": 395,
=======
              "src": "5305:234:0",
              "text": "@notice Activate Badge by redeemers\n @dev Verify if the caller is a redeemer\n @param proof Merkle Proof\n @param templateId Template Id\n @param tokenURI Token URI\n @return _tokenId Token Id of the new Badge"
            },
            "functionSelector": "d4c10e46",
            "id": 388,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 325,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 324,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "5942:13:0",
=======
                  "referencedDeclaration": 4041,
                  "src": "5640:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "5942:13:0"
=======
                "src": "5640:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "activateBadge",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 395,
                  "src": "5867:22:0",
=======
                  "scope": 388,
                  "src": "5565:22:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 316,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                      "src": "5867:7:0",
=======
                      "src": "5565:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 317,
                    "length": null,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                    "src": "5867:9:0",
=======
                    "src": "5565:9:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "templateId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 395,
                  "src": "5891:18:0",
=======
                  "scope": 388,
                  "src": "5589:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5891:7:0",
=======
                    "src": "5589:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 395,
                  "src": "5911:22:0",
=======
                  "scope": 388,
                  "src": "5609:22:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5911:6:0",
=======
                    "src": "5609:6:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5866:68:0"
=======
              "src": "5564:68:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 395,
                  "src": "5965:16:0",
=======
                  "scope": 388,
                  "src": "5663:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5965:7:0",
=======
                    "src": "5663:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5964:18:0"
            },
            "scope": 456,
            "src": "5844:668:0",
=======
              "src": "5662:18:0"
            },
            "scope": 449,
            "src": "5542:720:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 428,
              "nodeType": "Block",
              "src": "6783:171:0",
              "statements": [
                {
                  "assignments": [
                    406
=======
              "id": 421,
              "nodeType": "Block",
              "src": "6533:171:0",
              "statements": [
                {
                  "assignments": [
                    399
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 406,
=======
                      "id": 399,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "mutability": "mutable",
                      "name": "templateId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
<<<<<<< HEAD
                      "scope": 428,
                      "src": "6789:18:0",
=======
                      "scope": 421,
                      "src": "6539:18:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 405,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6789:7:0",
=======
                        "id": 398,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6539:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 410,
=======
                  "id": 403,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 408,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "6827:7:0",
=======
                        "id": 401,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "6577:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 407,
                      "name": "getBadgeTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "6810:16:0",
=======
                      "id": 400,
                      "name": "getBadgeTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "6560:16:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 409,
=======
                    "id": 402,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6810:25:0",
=======
                    "src": "6560:25:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6789:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "6846:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 411,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4145,
                      "src": "6841:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6841:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "6841:13:0"
=======
                  "src": "6539:46:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 424,
=======
                    "id": 413,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 415,
=======
                        "id": 404,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "name": "_templateQuantities",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
<<<<<<< HEAD
                        "src": "6860:19:0",
=======
                        "src": "6591:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 417,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "6880:10:0",
=======
                      "id": 406,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 405,
                        "name": "templateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "6611:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6860:31:0",
=======
                      "src": "6591:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 422,
=======
                          "id": 411,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6930:1:0",
=======
                          "src": "6661:1:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 418,
=======
                            "id": 407,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "name": "_templateQuantities",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
<<<<<<< HEAD
                            "src": "6894:19:0",
=======
                            "src": "6625:19:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 420,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 419,
                            "name": "templateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "6914:10:0",
=======
                          "id": 409,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 408,
                            "name": "templateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "6645:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "6894:31:0",
=======
                          "src": "6625:31:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 421,
=======
                        "id": 410,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3018,
                        "src": "6894:35:0",
=======
                        "referencedDeclaration": 1710,
                        "src": "6625:35:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 423,
=======
                      "id": 412,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "6894:38:0",
=======
                      "src": "6625:38:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6860:72:0",
=======
                    "src": "6591:72:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "6860:72:0"
=======
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "6591:72:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "hexValue": "74727565",
                    "id": 426,
=======
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "6674:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 415,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2837,
                      "src": "6669:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 417,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
<<<<<<< HEAD
                    "nodeType": "Literal",
                    "src": "6945:4:0",
=======
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6669:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "6669:13:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6695:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 404,
                  "id": 427,
                  "nodeType": "Return",
                  "src": "6938:11:0"
=======
                  "functionReturnParameters": 397,
                  "id": 420,
                  "nodeType": "Return",
                  "src": "6688:11:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "6516:193:0",
              "text": "@notice Burn Badge\n @dev burn() Check if the caller is approved or owner of the Badge\n @param tokenId Token Id of the Badge to burn\n @return True if the Badge has been burned"
            },
            "functionSelector": "55de28ae",
            "id": 429,
=======
              "id": 389,
              "nodeType": "StructuredDocumentation",
              "src": "6266:193:0",
              "text": "@notice Burn Badge\n @dev burn() Check if the caller is approved or owner of the Badge\n @param tokenId Token Id of the Badge to burn\n @return True if the Badge has been burned"
            },
            "functionSelector": "55de28ae",
            "id": 422,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 401,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 400,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "6755:13:0",
=======
                "id": 394,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 393,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "6505:13:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "6755:13:0"
=======
                "src": "6505:13:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "burnBadge",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 399,
=======
              "id": 392,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 398,
=======
                  "id": 391,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 429,
                  "src": "6731:15:0",
=======
                  "scope": 422,
                  "src": "6481:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6731:7:0",
=======
                    "id": 390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6481:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6730:17:0"
            },
            "returnParameters": {
              "id": 404,
=======
              "src": "6480:17:0"
            },
            "returnParameters": {
              "id": 397,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 403,
=======
                  "id": 396,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 429,
                  "src": "6778:4:0",
=======
                  "scope": 422,
                  "src": "6528:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 402,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6778:4:0",
=======
                    "id": 395,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6777:6:0"
            },
            "scope": 456,
            "src": "6712:242:0",
=======
              "src": "6527:6:0"
            },
            "scope": 449,
            "src": "6462:242:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
<<<<<<< HEAD
              3973
            ],
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "7182:100:0",
=======
              2665
            ],
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "6932:100:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 442,
=======
                        "id": 435,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
<<<<<<< HEAD
                        "src": "7196:5:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 441,
=======
                        "src": "6946:5:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 434,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "7197:4:0",
=======
                          "src": "6947:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20746f6b656e207472616e736665722064697361626c6564",
<<<<<<< HEAD
                        "id": 443,
=======
                        "id": 436,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "7203:33:0",
=======
                        "src": "6953:33:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3dbf35fc31fa4c83cfddfa6e803cda2afd68dff0f3fe25ae76fa66d14f04eb1",
                          "typeString": "literal_string \"ERC721: token transfer disabled\""
                        },
                        "value": "ERC721: token transfer disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3dbf35fc31fa4c83cfddfa6e803cda2afd68dff0f3fe25ae76fa66d14f04eb1",
                          "typeString": "literal_string \"ERC721: token transfer disabled\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 440,
=======
                      "id": 433,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "7188:7:0",
=======
                      "src": "6938:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 444,
=======
                    "id": 437,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7188:49:0",
=======
                    "src": "6938:49:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "7188:49:0"
=======
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "6938:49:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 449,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "7259:4:0",
=======
                        "id": 442,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "7009:4:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 450,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "7265:2:0",
=======
                        "id": 443,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "7015:2:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 451,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "7269:7:0",
=======
                        "id": 444,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "7019:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 446,
=======
                        "id": 439,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
<<<<<<< HEAD
                        "src": "7243:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_BadgeFactory_$456",
                          "typeString": "contract super BadgeFactory"
                        }
                      },
                      "id": 448,
=======
                        "src": "6993:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_BadgeFactory_$449",
                          "typeString": "contract super BadgeFactory"
                        }
                      },
                      "id": 441,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3973,
                      "src": "7243:15:0",
=======
                      "referencedDeclaration": 2665,
                      "src": "6993:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 452,
=======
                    "id": 445,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7243:34:0",
=======
                    "src": "6993:34:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "7243:34:0"
=======
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "6993:34:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 430,
              "nodeType": "StructuredDocumentation",
              "src": "6958:141:0",
              "text": "@notice ERC721 _transfer() Disabled\n @dev _transfer() has been overriden\n @dev reverts on transferFrom() and safeTransferFrom()"
            },
            "id": 455,
=======
              "id": 423,
              "nodeType": "StructuredDocumentation",
              "src": "6708:141:0",
              "text": "@notice ERC721 _transfer() Disabled\n @dev _transfer() has been overriden\n @dev reverts on transferFrom() and safeTransferFrom()"
            },
            "id": 448,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
<<<<<<< HEAD
              "id": 438,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7173:8:0"
            },
            "parameters": {
              "id": 437,
=======
              "id": 431,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6923:8:0"
            },
            "parameters": {
              "id": 430,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 432,
=======
                  "id": 425,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 455,
                  "src": "7121:12:0",
=======
                  "scope": 448,
                  "src": "6871:12:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7121:7:0",
=======
                    "id": 424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6871:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 434,
=======
                  "id": 427,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 455,
                  "src": "7135:10:0",
=======
                  "scope": 448,
                  "src": "6885:10:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7135:7:0",
=======
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6885:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 436,
=======
                  "id": 429,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 455,
                  "src": "7147:15:0",
=======
                  "scope": 448,
                  "src": "6897:15:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7147:7:0",
=======
                    "id": 428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6897:7:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7120:43:0"
            },
            "returnParameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7182:0:0"
            },
            "scope": 456,
            "src": "7102:180:0",
=======
              "src": "6870:43:0"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6932:0:0"
            },
            "scope": 449,
            "src": "6852:180:0",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 457,
        "src": "880:6405:0"
      }
    ],
    "src": "37:7249:0"
=======
        "scope": 450,
        "src": "880:6155:0"
      }
    ],
    "src": "37:6999:0"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.8+commit.0bbfe453.Emscripten.clang"
  },
  "networks": {
<<<<<<< HEAD
    "42": {
=======
    "1590000783054": {
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x6d9b3316ed00d7a8176f774914703e1d3404a4911e6236f45e6c50017d7674f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "redeemer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "templateId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            }
          ],
          "name": "BadgeActivated",
          "type": "event"
        },
        "0x335347d3c0abbe88e13ee17ff9db9ff2aabea3e099f1ffd10807e9c7f9cf82ad": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "templateId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "image",
              "type": "string"
            }
          ],
          "name": "NewTemplate",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
<<<<<<< HEAD
      "address": "0x3Aa897f4fE6306a9C047F30b7B62555b20F63092",
      "transactionHash": "0x229a3eb33c775e582ea767bb1b3dcbbbd0dae2b660333ab9aaa297a686ff8bae"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-19T14:53:28.389Z",
=======
      "address": "0xEEe1A20785020015014e599596bE7CDF2DA14F7F",
      "transactionHash": "0xfe40b442a550975a1869b0e22728ad9ec9aef3101caafe4bbfb9c5b4ab53ffc6"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-20T18:53:21.587Z",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "activateBadge(bytes32[],uint256,string)": {
        "details": "Verify if the caller is a redeemer",
        "params": {
          "proof": "Merkle Proof",
          "templateId": "Template Id",
          "tokenURI": "Token URI"
        },
        "returns": {
          "_tokenId": "Token Id of the new Badge"
        }
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "burnBadge(uint256)": {
        "details": "burn() Check if the caller is approved or owner of the Badge",
        "params": {
          "tokenId": "Token Id of the Badge to burn"
        },
        "returns": {
          "_0": "True if the Badge has been burned"
        }
      },
      "createTemplate(string,string,string)": {
        "details": "Access restricted to only Templaters",
        "params": {
          "description": "A description of the new template",
          "image": "A filename of the new template",
          "name": "The name of the new template"
        },
        "returns": {
          "_templateId": "The template Id"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "getBadgeTemplate(uint256)": {
        "details": "Check if the tokenId exists",
        "params": {
          "tokenId": "Token Id of the Badge"
        },
        "returns": {
          "_0": "Template Id associated with the tokenId"
        }
      },
      "getBadgeTemplateQuantity(uint256)": {
        "details": "Check if the template Id exists",
        "params": {
          "templateId": "Template Id"
        },
        "returns": {
          "_0": "Quantity of Badges associated with templateId"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getTemplate(uint256)": {
        "details": "Check if templateId exists",
        "params": {
          "templateId": "Template Id of the template to return"
        },
        "returns": {
          "name": "description image Of the specified templateId"
        }
      },
      "getTemplatesCount()": {
        "details": "Return lenght of template array",
        "returns": {
          "count": "The current number of templates"
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "pause()": {
        "details": "the caller must have the 'PAUSER_ROLE'"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "setBaseURI(string)": {
        "details": "Update the baseURI specified in the constructor",
        "params": {
          "baseURI": "New baseURI"
        },
        "returns": {
          "_0": "True if the new baseURI is set"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}).     * If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings.     * .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \"\" | \"\" | \"\" | \"\" | \"token.uri/123\" | \"token.uri/123\" | \"token.uri/\" | \"123\" | \"token.uri/123\" | \"token.uri/\" | \"\" | \"token.uri/<tokenId>\" |===     * Requirements:     * - `tokenId` must exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "the caller must have the 'PAUSER_ROLE'"
      }
    }
  },
  "userdoc": {
    "methods": {
      "activateBadge(bytes32[],uint256,string)": {
        "notice": "Activate Badge by redeemers"
      },
      "burnBadge(uint256)": {
        "notice": "Burn Badge"
      },
      "createTemplate(string,string,string)": {
        "notice": "Create a new template"
      },
      "getBadgeTemplate(uint256)": {
        "notice": "Getter function for templateId associated with the tokenId"
      },
      "getBadgeTemplateQuantity(uint256)": {
        "notice": "Getter function for number of badges associated with templateId"
      },
      "getTemplate(uint256)": {
        "notice": "Getter function for templates"
      },
      "getTemplatesCount()": {
        "notice": "TemplatesGetter function for templates count"
      },
      "pause()": {
        "notice": "Pause all the functions"
      },
      "setBaseURI(string)": {
        "notice": "Set the baseURI"
      },
      "unpause()": {
        "notice": "Unpause all the functions"
      }
    }
  }
}