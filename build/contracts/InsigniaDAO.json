{
  "contractName": "InsigniaDAO",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "DSChiefChecked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "FlipperChecked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "PotChecked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTrustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "rootHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "setRootHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "checkRedeemer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"DSRChallengeChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dsrChallenge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"rootHashes\",\"type\":\"bytes32[]\"}],\"name\":\"setRootHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"dsrChallenge()\":{\"details\":\"Keep track of the hash of the caller if successful\",\"returns\":{\"_0\":\"True if the caller successfully checked for challange\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"the caller must have the 'PAUSER_ROLE'\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"setRootHashes(bytes32[])\":{\"details\":\"Called by owner to update roots for different address batches by templateId\",\"params\":{\"rootHashes\":\"Root hashes of the Merkle Trees by templateId\"},\"returns\":{\"_0\":\"True if successfully updated\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"the caller must have the 'PAUSER_ROLE'\"},\"verify(address)\":{\"details\":\"Verify if the hash of guy address exists\",\"params\":{\"guy\":\"Address to verify\"},\"returns\":{\"_0\":\"True if guy is a redeemer\"}}}},\"userdoc\":{\"methods\":{\"dsrChallenge()\":{\"notice\":\"First Challange: Earn 1$ interest on DSR\"},\"pause()\":{\"notice\":\"Pause all the functions\"},\"setRootHashes(bytes32[])\":{\"notice\":\"Set Merkle Tree Root Hashes array\"},\"unpause()\":{\"notice\":\"Unpause all the functions\"},\"verify(address)\":{\"notice\":\"Check if guy is a redeemer\"}}}},\"settings\":{\"compilationTarget\":{\"/home/sencha/insigniadao/contracts/InsigniaDAO.sol\":\"InsigniaDAO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/sencha/insigniadao/contracts/InsigniaDAO.sol\":{\"keccak256\":\"0xdcc671b350829cb27f3d2558240520731eebd903e05f996cf5411b7d8fe812d3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4d207207e3f86165629212ee2ee0515c11e287ffdcc0806e411c6dc218163328\",\"dweb:/ipfs/QmbeAw1Y2Fcr3iZNLTG7WbDvZELsyUUb9NTcmdTtoeeEub\"]},\"@opengsn/gsn/contracts/0x/LibBytesV06.sol\":{\"keccak256\":\"0xa6217e51e9bb624ad88f364c0860ec3c5f28db2dfe688ad16c85a6afb43b71f4\",\"urls\":[\"bzz-raw://9e42917ab4a1e7f3e3c2b1aa569807ee653bd65478078ef786e078c90228d50c\",\"dweb:/ipfs/QmVhdoLV3cAszujPoFrrEf6FjFFiP7cRuAjr49sRiz9sP5\"]},\"@opengsn/gsn/contracts/0x/errors/LibBytesRichErrorsV06.sol\":{\"keccak256\":\"0x8358515b57f1d45a61a099caafe10ad8889f0ad877153f9965f1ba143172beb0\",\"urls\":[\"bzz-raw://14093162accbd47b21708eaa433a4cf74a1aea356203203ed98880269d74b617\",\"dweb:/ipfs/QmTX8QsX611eVm4XWeebGpepaNTgT9ZTiahqGTfgYgVGwP\"]},\"@opengsn/gsn/contracts/0x/errors/LibRichErrorsV06.sol\":{\"keccak256\":\"0xe3bb5df566a92b15bc1b681965f7b7279bb81b044ab3beac47a8f193b2510c84\",\"urls\":[\"bzz-raw://e680ff51e6a01984fcfa6b89269409736fe2a40688b73dd295e4a2b11543e359\",\"dweb:/ipfs/Qmew3pXCnUpUGbZH8Bx9PBSeyHzF8N7W2Dmj2qNg2qVv5W\"]},\"@opengsn/gsn/contracts/BaseRelayRecipient.sol\":{\"keccak256\":\"0xb66be09ced6c1e50fe47bbf97c62079c539ddd2b1c89b9f18317f77228dfabeb\",\"urls\":[\"bzz-raw://5dce40e7121dac48a7f8016f365c5173e08595d25b95a89443e9781318fd906a\",\"dweb:/ipfs/QmbeKYCsxd2ZNNj6PLjB5XjgrahPCScDAz4HzonzQFGSHw\"]},\"@opengsn/gsn/contracts/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x6ccb49ede883eb865ce03ceb8f9e9d41f5b0fd25d910d3fedaf5fd2ffc0eeb4d\",\"urls\":[\"bzz-raw://1e1cb382ef511f9a0f5d9971ed09423bcbe437e81a98ddc0f2141f7d392ad2d7\",\"dweb:/ipfs/QmNPTcD68AFgXnyeF3NncPTzymBQY7ptEfdjQNUpSFWhQJ\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc35d706da2c3b3228e8c2bfd9c775201688ef307e4990cd59a6dadc2a61abddc\",\"urls\":[\"bzz-raw://45c9859e241844143aaad5054ca5ffebf998a069592cd9c780c88c723849400b\",\"dweb:/ipfs/QmPFPTuys4hWRUga4UJvdyXKP32a9kdhg8hDu7Zku1ENFT\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x0336d64bd695c5d8bb962fd3dacb3d26f52879b19e75472d7dea9f91f7add79a\",\"urls\":[\"bzz-raw://d709c1de86475b74fa4f614458e868213f8e5b13eed8b29b465793cd97e5c0f5\",\"dweb:/ipfs/QmYVgazum1VVeDoJYYmKhAJ1mcuTy8vidb2iFEMWcVdSeY\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506000620000246200020760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506000600260006101000a81548160ff021916908315150217905550620001016000801b620000f56200022360201b60201c565b6200024c60201b60201c565b6200015760405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206200014b6200022360201b60201c565b6200024c60201b60201c565b73ea190dbdc7adf265260ec4da6e9675fd4f5a78bb600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550736453d37248ab2c16ebd1a8f782a2cbc65860e60b600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620005e4565b60006200021e6200026260201b6200131b1760201c565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6200025e82826200032c60201b60201c565b5050565b60006018600036905010158015620002b4575062000285620003d060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1562000325576200031d6000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506014600036905003620003fa60201b620013cd1760201c565b905062000329565b3390505b90565b6200035b81600160008581526020019081526020016000206000016200046760201b6200141f1790919060201c565b15620003cc57620003716200020760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060148201835110156200043c576200043b6200042a60048551601486016200049f60201b6200144f1760201c565b6200053f60201b620014ee1760201c565b5b60148201915073ffffffffffffffffffffffffffffffffffffffff8284015116905080905092915050565b600062000497836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200054760201b60201c565b905092915050565b6060632800659560e01b84848460405160240180846007811115620004c057fe5b60ff1681526020018381526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b805160208201fd5b60006200055b8383620005c160201b60201c565b620005b6578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050620005bb565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6121a880620005f46000396000f3fe608060405234801561001057600080fd5b50600436106101305760003560e01c80639010d07c116100ad578063ca15c87311610071578063ca15c8731461052a578063ce1b815f1461056c578063d547741f146105b6578063e63ab1e914610604578063f2fde38b1461062257610131565b80639010d07c1461031c57806391d1485414610394578063a217fddf146103fa578063aca5770314610418578063c2b40ae4146104e857610131565b806363a9c3d7116100f457806363a9c3d71461024057806368e4a1331461029c578063715018a6146102be5780638456cb59146102c85780638da5cb5b146102d257610131565b8063248a9ca3146101365780632f2ff15d1461017857806336568abe146101c65780633f4ba83a146102145780635c975abb1461021e57610131565b5b600080fd5b6101626004803603602081101561014c57600080fd5b8101908080359060200190929190505050610666565b6040518082815260200191505060405180910390f35b6101c46004803603604081101561018e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610686565b005b610212600480360360408110156101dc57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610710565b005b61021c6107a9565b005b61022661084e565b604051808215151515815260200191505060405180910390f35b6102826004803603602081101561025657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610865565b604051808215151515815260200191505060405180910390f35b6102a46109d1565b604051808215151515815260200191505060405180910390f35b6102c6610baa565b005b6102d0610d32565b005b6102da610dd7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103526004803603604081101561033257600080fd5b810190808035906020019092919080359060200190929190505050610e00565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103e0600480360360408110156103aa57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e32565b604051808215151515815260200191505060405180910390f35b610402610e64565b6040518082815260200191505060405180910390f35b6104ce6004803603602081101561042e57600080fd5b810190808035906020019064010000000081111561044b57600080fd5b82018360208201111561045d57600080fd5b8035906020019184602083028401116401000000008311171561047f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610e6b565b604051808215151515815260200191505060405180910390f35b610514600480360360208110156104fe57600080fd5b8101908080359060200190929190505050610fd9565b6040518082815260200191505060405180910390f35b6105566004803603602081101561054057600080fd5b8101908080359060200190929190505050610ffa565b6040518082815260200191505060405180910390f35b610574611021565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610602600480360360408110156105cc57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104b565b005b61060c6110d5565b6040518082815260200191505060405180910390f35b6106646004803603602081101561063857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061110e565b005b600060016000838152602001908152602001600020600201549050919050565b6106ad60016000848152602001908152602001600020600201546106a86114f6565b610e32565b610702576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061201d602f913960400191505060405180910390fd5b61070c8282611505565b5050565b6107186114f6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612144602f913960400191505060405180910390fd5b6107a58282611599565b5050565b6107ef60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206107ea6114f6565b610e32565b610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806120ec602d913960400191505060405180910390fd5b61084c61162d565b565b6000600260009054906101000a900460ff16905090565b6000600260009054906101000a900460ff16156108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b61095682604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060001c600461173690919063ffffffff16565b6109c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5468652061646472657373206973206e6f7420612072656465656d657200000081525060200191505060405180910390fd5b60019050919050565b6000600260009054906101000a900460ff1615610a56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b670de0b6b3a7640000610a6f610a6a6114f6565b611766565b14610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806120726029913960400191505060405180910390fd5b610b38610ad06114f6565b604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060001c600461141f90919063ffffffff16565b507fc75990e9b8a5c195752f79cf4bd0df253f949a439ed1f88b30cb2ddc10a716d4610b626114f6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905090565b610bb26114f6565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610d7860405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020610d736114f6565b610e32565b610dcd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612119602b913960400191505060405180910390fd5b610dd5611ad5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610e2a8260016000868152602001908152602001600020600001611bdf90919063ffffffff16565b905092915050565b6000610e5c826001600086815260200190815260200160002060000161173690919063ffffffff16565b905092915050565b6000801b81565b6000610e756114f6565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f36576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600260009054906101000a900460ff1615610fb9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b8160039080519060200190610fcf929190611f88565b5060019050919050565b60038181548110610fe657fe5b906000526020600020016000915090505481565b600061101a60016000848152602001908152602001600020600001611bf9565b9050919050565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611072600160008481526020019081526020016000206002015461106d6114f6565b610e32565b6110c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061209b6030913960400191505060405180910390fd5b6110d18282611599565b5050565b60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b6111166114f6565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561125d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061204c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060186000369050101580156113645750611335611021565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b156113c6576113bf6000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060146000369050036113cd565b90506113ca565b3390505b90565b600060148201835110156113f4576113f36113ee600485516014860161144f565b6114ee565b5b60148201915073ffffffffffffffffffffffffffffffffffffffff8284015116905080905092915050565b6000611447836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611c0e565b905092915050565b6060632800659560e01b8484846040516024018084600781111561146f57fe5b60ff1681526020018381526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b805160208201fd5b600061150061131b565b905090565b61152d816001600085815260200190815260200160002060000161141f90919063ffffffff16565b156115955761153a6114f6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6115c18160016000858152602001908152602001600020600001611c7e90919063ffffffff16565b15611629576115ce6114f6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600260009054906101000a900460ff166116af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6116f36114f6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061175e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611cae565b905092915050565b6000600260009054906101000a900460ff16156117eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bebac86846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561188c57600080fd5b505afa1580156118a0573d6000803e3d6000fd5b505050506040513d60208110156118b657600080fd5b810190808051906020019092919050505090506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561193357600080fd5b505afa158015611947573d6000803e3d6000fd5b505050506040513d602081101561195d57600080fd5b81019080805190602001909291905050504211611a1c57600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b815260040160206040518083038186803b1580156119dc57600080fd5b505afa1580156119f0573d6000803e3d6000fd5b505050506040513d6020811015611a0657600080fd5b8101908080519060200190929190505050611ac0565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a8457600080fd5b505afa158015611a98573d6000803e3d6000fd5b505050506040513d6020811015611aae57600080fd5b81019080805190602001909291905050505b9050611acc8282611cd1565b92505050919050565b600260009054906101000a900460ff1615611b58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b9c6114f6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000611bee8360000183611d86565b60001c905092915050565b6000611c0782600001611e09565b9050919050565b6000611c1a8383611cae565b611c73578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611c78565b600090505b92915050565b6000611ca6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611e1a565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b6000600260009054906101000a900460ff1615611d56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6b033b2e3c9fd0803ce8000000611d768385611f0290919063ffffffff16565b81611d7d57fe5b04905092915050565b600081836000018054905011611de7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611ffb6022913960400191505060405180910390fd5b826000018281548110611df657fe5b9060005260206000200154905092915050565b600081600001805490509050919050565b60008083600101600084815260200190815260200160002054905060008114611ef65760006001820390506000600186600001805490500390506000866000018281548110611e6557fe5b9060005260206000200154905080876000018481548110611e8257fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480611eba57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611efc565b60009150505b92915050565b600080831415611f155760009050611f82565b6000828402905082848281611f2657fe5b0414611f7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806120cb6021913960400191505060405180910390fd5b809150505b92915050565b828054828255906000526020600020908101928215611fc4579160200282015b82811115611fc3578251825591602001919060010190611fa8565b5b509050611fd19190611fd5565b5090565b611ff791905b80821115611ff3576000816000905550600101611fdb565b5090565b9056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735468652063616c6c657220686173206e6f74206163637275656420312044616920696e746572657374416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77496e7369676e696144414f3a206d75737420686176652070617573657220726f6c6520746f20756e7061757365496e7369676e696144414f3a206d75737420686176652070617573657220726f6c6520746f207061757365416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a264697066735822122076b2258294427f09da96e93720b1385f2c45a4138545e452e606b26e6fe8432c64736f6c63430006080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101305760003560e01c80639010d07c116100ad578063ca15c87311610071578063ca15c8731461052a578063ce1b815f1461056c578063d547741f146105b6578063e63ab1e914610604578063f2fde38b1461062257610131565b80639010d07c1461031c57806391d1485414610394578063a217fddf146103fa578063aca5770314610418578063c2b40ae4146104e857610131565b806363a9c3d7116100f457806363a9c3d71461024057806368e4a1331461029c578063715018a6146102be5780638456cb59146102c85780638da5cb5b146102d257610131565b8063248a9ca3146101365780632f2ff15d1461017857806336568abe146101c65780633f4ba83a146102145780635c975abb1461021e57610131565b5b600080fd5b6101626004803603602081101561014c57600080fd5b8101908080359060200190929190505050610666565b6040518082815260200191505060405180910390f35b6101c46004803603604081101561018e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610686565b005b610212600480360360408110156101dc57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610710565b005b61021c6107a9565b005b61022661084e565b604051808215151515815260200191505060405180910390f35b6102826004803603602081101561025657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610865565b604051808215151515815260200191505060405180910390f35b6102a46109d1565b604051808215151515815260200191505060405180910390f35b6102c6610baa565b005b6102d0610d32565b005b6102da610dd7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103526004803603604081101561033257600080fd5b810190808035906020019092919080359060200190929190505050610e00565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103e0600480360360408110156103aa57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e32565b604051808215151515815260200191505060405180910390f35b610402610e64565b6040518082815260200191505060405180910390f35b6104ce6004803603602081101561042e57600080fd5b810190808035906020019064010000000081111561044b57600080fd5b82018360208201111561045d57600080fd5b8035906020019184602083028401116401000000008311171561047f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610e6b565b604051808215151515815260200191505060405180910390f35b610514600480360360208110156104fe57600080fd5b8101908080359060200190929190505050610fd9565b6040518082815260200191505060405180910390f35b6105566004803603602081101561054057600080fd5b8101908080359060200190929190505050610ffa565b6040518082815260200191505060405180910390f35b610574611021565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610602600480360360408110156105cc57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104b565b005b61060c6110d5565b6040518082815260200191505060405180910390f35b6106646004803603602081101561063857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061110e565b005b600060016000838152602001908152602001600020600201549050919050565b6106ad60016000848152602001908152602001600020600201546106a86114f6565b610e32565b610702576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061201d602f913960400191505060405180910390fd5b61070c8282611505565b5050565b6107186114f6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612144602f913960400191505060405180910390fd5b6107a58282611599565b5050565b6107ef60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b01905060405180910390206107ea6114f6565b610e32565b610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806120ec602d913960400191505060405180910390fd5b61084c61162d565b565b6000600260009054906101000a900460ff16905090565b6000600260009054906101000a900460ff16156108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b61095682604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060001c600461173690919063ffffffff16565b6109c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5468652061646472657373206973206e6f7420612072656465656d657200000081525060200191505060405180910390fd5b60019050919050565b6000600260009054906101000a900460ff1615610a56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b670de0b6b3a7640000610a6f610a6a6114f6565b611766565b14610ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806120726029913960400191505060405180910390fd5b610b38610ad06114f6565b604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060001c600461141f90919063ffffffff16565b507fc75990e9b8a5c195752f79cf4bd0df253f949a439ed1f88b30cb2ddc10a716d4610b626114f6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905090565b610bb26114f6565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610d7860405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020610d736114f6565b610e32565b610dcd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612119602b913960400191505060405180910390fd5b610dd5611ad5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610e2a8260016000868152602001908152602001600020600001611bdf90919063ffffffff16565b905092915050565b6000610e5c826001600086815260200190815260200160002060000161173690919063ffffffff16565b905092915050565b6000801b81565b6000610e756114f6565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f36576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600260009054906101000a900460ff1615610fb9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b8160039080519060200190610fcf929190611f88565b5060019050919050565b60038181548110610fe657fe5b906000526020600020016000915090505481565b600061101a60016000848152602001908152602001600020600001611bf9565b9050919050565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611072600160008481526020019081526020016000206002015461106d6114f6565b610e32565b6110c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061209b6030913960400191505060405180910390fd5b6110d18282611599565b5050565b60405180807f5041555345525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b6111166114f6565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561125d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061204c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060186000369050101580156113645750611335611021565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b156113c6576113bf6000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060146000369050036113cd565b90506113ca565b3390505b90565b600060148201835110156113f4576113f36113ee600485516014860161144f565b6114ee565b5b60148201915073ffffffffffffffffffffffffffffffffffffffff8284015116905080905092915050565b6000611447836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611c0e565b905092915050565b6060632800659560e01b8484846040516024018084600781111561146f57fe5b60ff1681526020018381526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b805160208201fd5b600061150061131b565b905090565b61152d816001600085815260200190815260200160002060000161141f90919063ffffffff16565b156115955761153a6114f6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6115c18160016000858152602001908152602001600020600001611c7e90919063ffffffff16565b15611629576115ce6114f6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600260009054906101000a900460ff166116af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6116f36114f6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061175e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611cae565b905092915050565b6000600260009054906101000a900460ff16156117eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bebac86846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561188c57600080fd5b505afa1580156118a0573d6000803e3d6000fd5b505050506040513d60208110156118b657600080fd5b810190808051906020019092919050505090506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561193357600080fd5b505afa158015611947573d6000803e3d6000fd5b505050506040513d602081101561195d57600080fd5b81019080805190602001909291905050504211611a1c57600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b815260040160206040518083038186803b1580156119dc57600080fd5b505afa1580156119f0573d6000803e3d6000fd5b505050506040513d6020811015611a0657600080fd5b8101908080519060200190929190505050611ac0565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a8457600080fd5b505afa158015611a98573d6000803e3d6000fd5b505050506040513d6020811015611aae57600080fd5b81019080805190602001909291905050505b9050611acc8282611cd1565b92505050919050565b600260009054906101000a900460ff1615611b58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b9c6114f6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000611bee8360000183611d86565b60001c905092915050565b6000611c0782600001611e09565b9050919050565b6000611c1a8383611cae565b611c73578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611c78565b600090505b92915050565b6000611ca6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611e1a565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b6000600260009054906101000a900460ff1615611d56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6b033b2e3c9fd0803ce8000000611d768385611f0290919063ffffffff16565b81611d7d57fe5b04905092915050565b600081836000018054905011611de7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611ffb6022913960400191505060405180910390fd5b826000018281548110611df657fe5b9060005260206000200154905092915050565b600081600001805490509050919050565b60008083600101600084815260200190815260200160002054905060008114611ef65760006001820390506000600186600001805490500390506000866000018281548110611e6557fe5b9060005260206000200154905080876000018481548110611e8257fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480611eba57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611efc565b60009150505b92915050565b600080831415611f155760009050611f82565b6000828402905082848281611f2657fe5b0414611f7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806120cb6021913960400191505060405180910390fd5b809150505b92915050565b828054828255906000526020600020908101928215611fc4579160200282015b82811115611fc3578251825591602001919060010190611fa8565b5b509050611fd19190611fd5565b5090565b611ff791905b80821115611ff3576000816000905550600101611fdb565b5090565b9056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735468652063616c6c657220686173206e6f74206163637275656420312044616920696e746572657374416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77496e7369676e696144414f3a206d75737420686176652070617573657220726f6c6520746f20756e7061757365496e7369676e696144414f3a206d75737420686176652070617573657220726f6c6520746f207061757365416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a264697066735822122076b2258294427f09da96e93720b1385f2c45a4138545e452e606b26e6fe8432c64736f6c63430006080033",
  "immutableReferences": {},
  "sourceMap": "1081:3661:3:-:0;;;1687:418;5:9:-1;2:2;;;27:1;24;17:12;2:2;1687:418:3;832:17:17;852:12;:10;;;:12;;:::i;:::-;832:32;;883:9;874:6;;:18;;;;;;;;;;;;;;;;;;940:9;907:43;;936:1;907:43;;;;;;;;;;;;798:159;900:5:33;890:7;;:15;;;;;;;;;;;;;;;;;;1718:39:3;1729:4:16;:18:3;;1749:7;:5;;;:7;;:::i;:::-;1718:10;;;:39;;:::i;:::-;1768:32;1300:24;;;;;;;;;;;;;;;;;;;1792:7;:5;;;:7;;:::i;:::-;1768:10;;;:32;;:::i;:::-;1938:42;1924:3;;:57;;;;;;;;;;;;;;;;;;2058:42;2039:16;;:61;;;;;;;;;;;;;;;;;;1081:3661;;2440:157;2523:15;2561:31;:29;;;;;:31;;:::i;:::-;2554:38;;2440:157;:::o;1033:77:17:-;1071:7;1097:6;;;;;;;;;;;1090:13;;1033:77;:::o;6132:110:16:-;6210:25;6221:4;6227:7;6210:10;;;:25;;:::i;:::-;6132:110;;:::o;1121:534:9:-;1183:15;1233:2;1214:8;;:15;;:21;;:69;;;;;1261:21;:19;;;:21;;:::i;:::-;1239:44;;:10;:44;;;1214:69;1210:412;;;1554:55;1578:8;;1554:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1554:55:9;;;;;;1606:2;1588:8;;:15;;:20;1554:23;;;;;:55;;:::i;:::-;1531:80;;;;1210:412;1638:10;1631:17;;1121:534;;:::o;6449:184:16:-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;;;:12;;:::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;760:109:9:-;820:7;846:16;;;;;;;;;;;839:23;;760:109;:::o;10857:1080:5:-;10978:14;11031:2;11023:5;:10;11012:1;:8;:21;11008:330;;;11049:278;11074:252;11139:92;11249:1;:8;11283:2;11275:5;:10;11074:47;;;;;:252;;:::i;:::-;11049:24;;;;;:278;;:::i;:::-;11008:330;11584:2;11575:11;;;;11855:42;11846:5;11843:1;11839:13;11833:20;11829:69;11819:79;;11924:6;11917:13;;10857:1080;;;;:::o;4831:141:32:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;;;:41;;:::i;:::-;4917:48;;4831:141;;;;:::o;1295:378:6:-;1483:12;1235:10;1554:37;;1605:9;1628:6;1648:8;1518:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1518:148:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;1518:148:6;1511:155;;1295:378;;;;;:::o;1492:170:7:-;1635:9;1629:16;1622:4;1611:9;1607:20;1600:46;1578:404:32;1641:4;1662:21;1672:3;1677:5;1662:9;;;:21;;:::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:32;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;1081:3661:3:-;;;;;;;",
  "deployedSourceMap": "1081:3661:3:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1081:3661:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;3826:112:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3826:112:16;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4188:223;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4188:223:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5362:205;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5362:205:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4584:155:3;;;:::i;:::-;;1007:76:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4040:219:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4040:219:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3564:304;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1656:145:17;;;:::i;:::-;;4351:139:3;;;:::i;:::-;;1033:77:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3509:136:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3509:136:16;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2494:137;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2494:137:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1684:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2849:144:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2849:144:3;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;2849:144:3;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2849:144:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2849:144:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2849:144:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1329:22;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1329:22:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2799:125:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2799:125:16;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;760:109:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4645:226:16;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4645:226:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1262:62:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1950:240:17;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1950:240:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;3826:112:16;3883:7;3909:6;:12;3916:4;3909:12;;;;;;;;;;;:22;;;3902:29;;3826:112;;;:::o;4188:223::-;4271:45;4279:6;:12;4286:4;4279:12;;;;;;;;;;;:22;;;4303:12;:10;:12::i;:::-;4271:7;:45::i;:::-;4263:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4379:25;4390:4;4396:7;4379:10;:25::i;:::-;4188:223;;:::o;5362:205::-;5459:12;:10;:12::i;:::-;5448:23;;:7;:23;;;5440:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5534:26;5546:4;5552:7;5534:11;:26::i;:::-;5362:205;;:::o;4584:155:3:-;4628:34;1300:24;;;;;;;;;;;;;;;;;;;4649:12;:10;:12::i;:::-;4628:7;:34::i;:::-;4620:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4722:10;:8;:10::i;:::-;4584:155::o;1007:76:33:-;1046:4;1069:7;;;;;;;;;;;1062:14;;1007:76;:::o;4040:219:3:-;4104:4;1236:7:33;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4124:79:3::1;4194:3;4177:21;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4177:21:3;;;4167:32;;;;;;4159:41;;4124:9;:18;;:79;;;;:::i;:::-;4116:121;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4250:4;4243:11;;4040:219:::0;;;:::o;3564:304::-;3618:4;1236:7:33;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:7:3::1;3638:18;3643:12;:10;:12::i;:::-;3638:4;:18::i;:::-;:29;3630:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3719;3784:12;:10;:12::i;:::-;3767:30;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3767:30:3;;;3757:41;;;;;;3749:50;;3719:9;:13;;:83;;;;:::i;:::-;;3813:33;3833:12;:10;:12::i;:::-;3813:33;;;;;;;;;;;;;;;;;;;;;;3859:4;3852:11;;3564:304:::0;:::o;1656:145:17:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:1:::1;1725:40;;1746:6;::::0;::::1;;;;;;;;;1725:40;;;;;;;;;;;;1792:1;1775:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1656:145::o:0;4351:139:3:-;4389:34;1300:24;;;;;;;;;;;;;;;;;;;4410:12;:10;:12::i;:::-;4389:7;:34::i;:::-;4381:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4477:8;:6;:8::i;:::-;4351:139::o;1033:77:17:-;1071:7;1097:6;;;;;;;;;;;1090:13;;1033:77;:::o;3509:136:16:-;3582:7;3608:30;3632:5;3608:6;:12;3615:4;3608:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;3601:37;;3509:136;;;;:::o;2494:137::-;2563:4;2586:38;2616:7;2586:6;:12;2593:4;2586:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;2579:45;;2494:137;;;;:::o;1684:49::-;1729:4;1684:49;;;:::o;2849:144:3:-;2941:4;1247:12:17;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:7:33::1;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2961:10:3::2;2953:5;:18;;;;;;;;;;;;:::i;:::-;;2984:4;2977:11;;2849:144:::0;;;:::o;1329:22::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2799:125:16:-;2862:7;2888:29;:6;:12;2895:4;2888:12;;;;;;;;;;;:20;;:27;:29::i;:::-;2881:36;;2799:125;;;:::o;760:109:9:-;820:7;846:16;;;;;;;;;;;839:23;;760:109;:::o;4645:226:16:-;4729:45;4737:6;:12;4744:4;4737:12;;;;;;;;;;;:22;;;4761:12;:10;:12::i;:::-;4729:7;:45::i;:::-;4721:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4838:26;4850:4;4856:7;4838:11;:26::i;:::-;4645:226;;:::o;1262:62:3:-;1300:24;;;;;;;;;;;;;;;;;;;1262:62;:::o;1950:240:17:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2058:1:::1;2038:22;;:8;:22;;;;2030:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2147:8;2118:38;;2139:6;::::0;::::1;;;;;;;;;2118:38;;;;;;;;;;;;2175:8;2166:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1950:240:::0;:::o;1121:534:9:-;1183:15;1233:2;1214:8;;:15;;:21;;:69;;;;;1261:21;:19;:21::i;:::-;1239:44;;:10;:44;;;1214:69;1210:412;;;1554:55;1578:8;;1554:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1554:55:9;;;;;;1606:2;1588:8;;:15;;:20;1554:23;:55::i;:::-;1531:80;;;;1210:412;1638:10;1631:17;;1121:534;;:::o;10857:1080:5:-;10978:14;11031:2;11023:5;:10;11012:1;:8;:21;11008:330;;;11049:278;11074:252;11139:92;11249:1;:8;11283:2;11275:5;:10;11074:47;:252::i;:::-;11049:24;:278::i;:::-;11008:330;11584:2;11575:11;;;;11855:42;11846:5;11843:1;11839:13;11833:20;11829:69;11819:79;;11924:6;11917:13;;10857:1080;;;;:::o;4831:141:32:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;:41::i;:::-;4917:48;;4831:141;;;;:::o;1295:378:6:-;1483:12;1235:10;1554:37;;1605:9;1628:6;1648:8;1518:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1518:148:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;1518:148:6;1511:155;;1295:378;;;;;:::o;1492:170:7:-;1635:9;1629:16;1622:4;1611:9;1607:20;1600:46;2440:157:3;2523:15;2561:31;:29;:31::i;:::-;2554:38;;2440:157;:::o;6449:184:16:-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;:12::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;6639:188::-;6713:36;6741:7;6713:6;:12;6720:4;6713:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;6709:112;;;6797:12;:10;:12::i;:::-;6770:40;;6788:7;6770:40;;6782:4;6770:40;;;;;;;;;;6709:112;6639:188;;:::o;1709:117:33:-;1427:7;;;;;;;;;;;1419:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:5:::1;1767:7;;:15;;;;;;;;;;;;;;;;;;1797:22;1806:12;:10;:12::i;:::-;1797:22;;;;;;;;;;;;;;;;;;;;;;1709:117::o:0;5368:156:32:-;5448:4;5471:46;5481:3;:10;;5509:5;5501:14;;5493:23;;5471:9;:46::i;:::-;5464:53;;5368:156;;;;:::o;3169:206:3:-;3233:11;1236:7:33;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3252:13:3::1;3268:3;;;;;;;;;;;:7;;;3276:3;3268:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3268:12:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3268:12:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;3268:12:3;;;;;;;;;;;;;;;;3252:28;;3286:11;3307:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3307:9:3;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3307:9:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;3307:9:3;;;;;;;;;;;;;;;;3301:3;:15;3300:42;;3333:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3333:9:3;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3333:9:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;3333:9:3;;;;;;;;;;;;;;;;3300:42;;;3320:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3320:10:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3320:10:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;3320:10:3;;;;;;;;;;;;;;;;3300:42;3286:56;;3354:16;3359:5;3366:3;3354:4;:16::i;:::-;3348:22;;1274:1:33;;3169:206:3::0;;;:::o;1535:115:33:-;1236:7;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:4:::1;1594:7;;:14;;;;;;;;;;;;;;;;;;1623:20;1630:12;:10;:12::i;:::-;1623:20;;;;;;;;;;;;;;;;;;;;;;1535:115::o:0;6052:147:32:-;6126:7;6168:22;6172:3;:10;;6184:5;6168:3;:22::i;:::-;6160:31;;6145:47;;6052:147;;;;:::o;5605:115::-;5668:7;5694:19;5702:3;:10;;5694:7;:19::i;:::-;5687:26;;5605:115;;;:::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:32;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;5140:147::-;5213:4;5236:44;5244:3;:10;;5272:5;5264:14;;5256:23;;5236:7;:44::i;:::-;5229:51;;5140:147;;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;1532:151:3:-;1605:9;1236:7:33;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1519:8:3::1;1664;1670:1;1664;:5;;:8;;;;:::i;:::-;:14;;;;;;1660:18;;1532:151:::0;;;;:::o;4390:201:32:-;4457:7;4505:5;4484:3;:11;;:18;;;;:26;4476:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;3951:107::-;4007:7;4033:3;:11;;:18;;;;4026:25;;3951:107;;;:::o;2150:1512::-;2216:4;2332:18;2353:3;:12;;:19;2366:5;2353:19;;;;;;;;;;;;2332:40;;2401:1;2387:10;:15;2383:1273;;2744:21;2781:1;2768:10;:14;2744:38;;2796:17;2837:1;2816:3;:11;;:18;;;;:22;2796:42;;3078:17;3098:3;:11;;3110:9;3098:22;;;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;:38;;;;3358:1;3342:13;:17;3316:3;:12;;:23;3329:9;3316:23;;;;;;;;;;;:43;;;;3465:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;2150:1512;;;;;:::o;2119:459:22:-;2177:7;2423:1;2418;:6;2414:45;;;2447:1;2440:8;;;;2414:45;2469:9;2485:1;2481;:5;2469:17;;2513:1;2508;2504;:5;;;;;;:10;2496:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2570:1;2563:8;;;2119:459;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.6.8;\n\n/// @title Non-transferable Badges for Maker Ecosystem Activity, issue #537\n/// @author Nazzareno Massari, Scott Herren\n/// @notice InsigniaDAO to check for activities on maker ecosystem and keep track of redeemers\n/// @dev see https://github.com/makerdao/community/issues/537\n/// @dev All function calls are currently implemented without side effecs through TDD approach\n/// @dev OpenZeppelin library is used for secure contract development\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/EnumerableSet.sol\";\nimport \"@opengsn/gsn/contracts/BaseRelayRecipient.sol\";\n\ninterface PotLike {\n\n    function pie(address guy) external view returns (uint256);\n    function chi() external view returns (uint256);\n    function rho() external view returns (uint256);\n    function drip() external view returns (uint256);\n\n}\n\ncontract InsigniaDAO is Ownable, AccessControl, Pausable, BaseRelayRecipient {\n\n  /// Libraries\n  using SafeMath for uint256;\n  using EnumerableSet for EnumerableSet.AddressSet;\n\n  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n  bytes32[] public roots;\n\n  EnumerableSet.AddressSet private redeemers;\n\n  /// Events\n  event DSRChallengeChecked(address guy);\n\n  PotLike  internal pot;\n\n  /// Math\n  uint256 constant RAY = 10 ** 27;\n\n  function rmul(uint256 x, uint256 y) internal view whenNotPaused returns (uint256 z) {\n          // always rounds down\n          z = x.mul(y) / RAY;\n  }\n\n  constructor() public {\n        _setupRole(DEFAULT_ADMIN_ROLE, owner());\n\n        _setupRole(PAUSER_ROLE, owner());\n\n        // MCD_POT Kovan Address https://kovan.etherscan.io/address/0xea190dbdc7adf265260ec4da6e9675fd4f5a78bb#code\n\t\t\t  pot = PotLike(0xEA190DBDC7adF265260ec4dA6e9675Fd4f5A78bb);\n\n        /// OpenGSN TruestedForwarder on Kovan\n        trustedForwarder = 0x6453D37248Ab2C16eBd1A8f782a2CBC65860E60B;\n  }\n\n  /// @notice Fallback function\n  /// @dev Added not payable to revert transactions not matching any other function which send value\n  fallback() external {\n    revert();\n  }\n\n  /// @notice OpenGSN _msgSender()\n  /// @dev override _msgSender() in OZ Context.sol and BaseRelayRecipient.sol\n  /// @return msg.sender after relay call\n  function _msgSender() internal override(Context, BaseRelayRecipient) view returns (address payable) {\n            return BaseRelayRecipient._msgSender();\n  }\n\n  /// @notice Set Merkle Tree Root Hashes array\n  /// @dev Called by owner to update roots for different address batches by templateId\n  /// @param rootHashes Root hashes of the Merkle Trees by templateId\n  /// @return True if successfully updated\n  function setRootHashes(bytes32[] memory rootHashes) public onlyOwner whenNotPaused returns (bool) {\n    roots = rootHashes;\n    return true;\n  }\n\n  /// @notice Return the accrued interest of guy on Pot\n  /// @dev Based on Chai dai() function\n  /// @param guy Address to check\n  /// @return wad Accrued interest of guy\n  function _dai(address guy) internal view whenNotPaused returns (uint256 wad) {\n    uint256 slice = pot.pie(guy);\n    uint256 chi = (now > pot.rho()) ? pot.drip() : pot.chi();\n    wad = rmul(slice, chi);\n  }\n\n  /// @notice First Challange: Earn 1$ interest on DSR\n  /// @dev Keep track of the hash of the caller if successful\n  /// @return True if the caller successfully checked for challange\n  function dsrChallenge() public whenNotPaused returns (bool) {\n    require(_dai(_msgSender()) == 1 ether, \"The caller has not accrued 1 Dai interest\");\n    redeemers.add(address(uint160(uint256(keccak256(abi.encodePacked(_msgSender()))))));\n    emit DSRChallengeChecked(_msgSender());\n    return true;\n  }\n\n  /// @notice Check if guy is a redeemer\n  /// @dev Verify if the hash of guy address exists\n  /// @param guy Address to verify\n  /// @return True if guy is a redeemer\n  function verify(address guy) public view whenNotPaused returns (bool) {\n    require(redeemers.contains(address(uint160(uint256(keccak256(abi.encodePacked(guy)))))), \"The address is not a redeemer\");\n    return true;\n  }\n\n  /// @notice Pause all the functions\n  /// @dev the caller must have the 'PAUSER_ROLE'\n  function pause() public {\n    require(hasRole(PAUSER_ROLE, _msgSender()), \"InsigniaDAO: must have pauser role to pause\");\n    _pause();\n  }\n\n  /// @notice Unpause all the functions\n  /// @dev the caller must have the 'PAUSER_ROLE'\n  function unpause() public {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"InsigniaDAO: must have pauser role to unpause\");\n        _unpause();\n    }\n\n}\n",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.6.8+commit.0bbfe453\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"DSChiefChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"FlipperChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"PotChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"checkRedeemer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"rootHashes\",\"type\":\"bytes32[]\"}],\"name\":\"setRootHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"checkRedeemer(uint256)\":{\"details\":\"Keep track of the hash of the caller if successful\",\"returns\":{\"_0\":\"True/False if the caller successfully checked for activities on MakerDAO or not\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"the caller must have the 'PAUSER_ROLE'\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"setRootHashes(bytes32[])\":{\"details\":\"Called by owner to update roots for different address batches by templateId\",\"params\":{\"rootHashes\":\"Root hashes of the Merkle Trees by templateId\"},\"returns\":{\"_0\":\"True if successfully updated\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"the caller must have the 'PAUSER_ROLE'\"},\"verify(address)\":{\"details\":\"Verify if the hash of guy address exists\",\"params\":{\"guy\":\"Address to verify\"},\"returns\":{\"_0\":\"True if guy is a redeemer\"}}}},\"userdoc\":{\"methods\":{\"checkRedeemer(uint256)\":{\"notice\":\"Check Redeemer\"},\"pause()\":{\"notice\":\"Pause all the functions\"},\"setRootHashes(bytes32[])\":{\"notice\":\"Set Merkle Tree Root Hashes array\"},\"unpause()\":{\"notice\":\"Unpause all the functions\"},\"verify(address)\":{\"notice\":\"Check if guy is a redeemer\"}}}},\"settings\":{\"compilationTarget\":{\"/home/sencha/insigniadao/contracts/InsigniaDAO.sol\":\"InsigniaDAO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/sencha/insigniadao/contracts/InsigniaDAO.sol\":{\"keccak256\":\"0xeaa4093c3eacb0c4cffb384c176a16516d0dcade5d605fdf242912156937c9fd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5fb636e15ce3f2e18404eb3142c7f78d73569b0516b2740e733de4410eedf878\",\"dweb:/ipfs/QmQZgPv7gPYvNsLd8yxB2KescvmXfksfPAGZa5CVNSNNYY\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc35d706da2c3b3228e8c2bfd9c775201688ef307e4990cd59a6dadc2a61abddc\",\"urls\":[\"bzz-raw://45c9859e241844143aaad5054ca5ffebf998a069592cd9c780c88c723849400b\",\"dweb:/ipfs/QmPFPTuys4hWRUga4UJvdyXKP32a9kdhg8hDu7Zku1ENFT\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x0336d64bd695c5d8bb962fd3dacb3d26f52879b19e75472d7dea9f91f7add79a\",\"urls\":[\"bzz-raw://d709c1de86475b74fa4f614458e868213f8e5b13eed8b29b465793cd97e5c0f5\",\"dweb:/ipfs/QmYVgazum1VVeDoJYYmKhAJ1mcuTy8vidb2iFEMWcVdSeY\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506000620000246200023c60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506000600260006101000a81548160ff021916908315150217905550620001016000801b620000f56200024460201b60201c565b6200026d60201b60201c565b6200013760405162000113906200043e565b60405180910390206200012b6200024460201b60201c565b6200026d60201b60201c565b73ea190dbdc7adf265260ec4da6e9675fd4f5a78bb600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073bbffc76e94b34f72d96d054b31f6424249c1337d600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073b40139ea36d35d0c9f6a2e62601b616f1ffbbd1b600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000460565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6200027f82826200028360201b60201c565b5050565b620002b281600160008581526020019081526020016000206000016200032760201b6200105a1790919060201c565b156200032357620002c86200023c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000357836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200035f60201b60201c565b905092915050565b6000620003738383620003d960201b60201c565b620003ce578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050620003d3565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b60006200040b600b8362000455565b91507f5041555345525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b60006200044b82620003fc565b9150819050919050565b600081905092915050565b6126b880620004706000396000f3fe608060405234801561001057600080fd5b50600436106101255760003560e01c80638da5cb5b116100ad578063c2b40ae411610071578063c2b40ae4146102fb578063ca15c8731461032b578063d547741f1461035b578063e63ab1e914610377578063f2fde38b1461039557610126565b80638da5cb5b1461022f5780639010d07c1461024d57806391d148541461027d578063a217fddf146102ad578063aca57703146102cb57610126565b80635a3d044e116100f45780635a3d044e1461019d5780635c975abb146101cd57806363a9c3d7146101eb578063715018a61461021b5780638456cb591461022557610126565b8063248a9ca31461012b5780632f2ff15d1461015b57806336568abe146101775780633f4ba83a1461019357610126565b5b600080fd5b61014560048036038101906101409190611c45565b6103b1565b6040516101529190612310565b60405180910390f35b61017560048036038101906101709190611c97565b6103d1565b005b610191600480360381019061018c9190611c97565b610445565b005b61019b6104c8565b005b6101b760048036038101906101b29190611d39565b61052e565b6040516101c491906122f5565b60405180910390f35b6101d561097e565b6040516101e291906122f5565b60405180910390f35b61020560048036038101906102009190611bdb565b610995565b60405161021291906122f5565b60405180910390f35b610223610a6c565b005b61022d610bc1565b005b610237610c27565b60405161024491906122bf565b60405180910390f35b61026760048036038101906102629190611cd3565b610c50565b60405161027491906122bf565b60405180910390f35b61029760048036038101906102929190611c97565b610c82565b6040516102a491906122f5565b60405180910390f35b6102b5610cb4565b6040516102c29190612310565b60405180910390f35b6102e560048036038101906102e09190611c04565b610cbb565b6040516102f291906122f5565b60405180910390f35b61031560048036038101906103109190611d39565b610dc3565b6040516103229190612310565b60405180910390f35b61034560048036038101906103409190611c45565b610de4565b60405161035291906124ab565b60405180910390f35b61037560048036038101906103709190611c97565b610e0b565b005b61037f610e7f565b60405161038c9190612310565b60405180910390f35b6103af60048036038101906103aa9190611bdb565b610e96565b005b600060016000838152602001908152602001600020600201549050919050565b6103f860016000848152602001908152602001600020600201546103f361108a565b610c82565b610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e9061234b565b60405180910390fd5b6104418282611092565b5050565b61044d61108a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b19061248b565b60405180910390fd5b6104c48282611126565b5050565b6104e56040516104d7906122aa565b604051809103902033610c82565b610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b9061242b565b60405180910390fd5b61052c6111ba565b565b6000600260009054906101000a900460ff1615610580576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610577906123cb565b60405180910390fd5b670de0b6b3a764000061059233611264565b1061065a576105db6105a261108a565b6040516020016105b2919061228f565b6040516020818303038152906040528051906020012060001c600461156890919063ffffffff16565b61061e5761061c336040516020016105f3919061228f565b6040516020818303038152906040528051906020012060001c600461105a90919063ffffffff16565b505b7fc53e300da4fe7bad9553037bb567acec8109a294de1f832291c2d814dfc262c43360405161064d91906122da565b60405180910390a1610974565b6000801b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d8bff5a5336040518263ffffffff1660e01b81526004016106b991906122da565b60206040518083038186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190611c6e565b146107ca5761074b33604051602001610722919061228f565b6040516020818303038152906040528051906020012060001c600461156890919063ffffffff16565b61078e5761078c33604051602001610763919061228f565b6040516020818303038152906040528051906020012060001c600461105a90919063ffffffff16565b505b7f359eefdc83d4cbeabeed5ea68cd9213056f02a7317e55e1310612edc535d5ae9336040516107bd91906122da565b60405180910390a1610973565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634423c5f1846040518263ffffffff1660e01b815260040161083c91906124ab565b6101006040518083038186803b15801561085557600080fd5b505afa158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d9190611d0f565b6040015173ffffffffffffffffffffffffffffffffffffffff161415610969576108ea336040516020016108c1919061228f565b6040516020818303038152906040528051906020012060001c600461156890919063ffffffff16565b61092d5761092b33604051602001610902919061228f565b6040516020818303038152906040528051906020012060001c600461105a90919063ffffffff16565b505b7f430bb0ab986389293d8f0855931d73d3e3bdc06890eb3e780550c98a7582a7ef3360405161095c91906122da565b60405180910390a1610972565b60009050610979565b5b5b600190505b919050565b6000600260009054906101000a900460ff16905090565b6000600260009054906101000a900460ff16156109e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109de906123cb565b60405180910390fd5b610a24826040516020016109fb9190612274565b6040516020818303038152906040528051906020012060001c600461156890919063ffffffff16565b610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a9061240b565b60405180910390fd5b60019050919050565b610a7461108a565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af99061244b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610bde604051610bd0906122aa565b604051809103902033610c82565b610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c149061246b565b60405180910390fd5b610c25611598565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610c7a826001600086815260200190815260200160002060000161164390919063ffffffff16565b905092915050565b6000610cac826001600086815260200190815260200160002060000161156890919063ffffffff16565b905092915050565b6000801b81565b6000610cc561108a565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4a9061244b565b60405180910390fd5b600260009054906101000a900460ff1615610da3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9a906123cb565b60405180910390fd5b8160039080519060200190610db992919061198d565b5060019050919050565b60038181548110610dd057fe5b906000526020600020016000915090505481565b6000610e046001600084815260200190815260200160002060000161165d565b9050919050565b610e326001600084815260200190815260200160002060020154610e2d61108a565b610c82565b610e71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e68906123ab565b60405180910390fd5b610e7b8282611126565b5050565b604051610e8b906122aa565b604051809103902081565b610e9e61108a565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f239061244b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f939061238b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611082836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611672565b905092915050565b600033905090565b6110ba816001600085815260200190815260200160002060000161105a90919063ffffffff16565b15611122576110c761108a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61114e81600160008581526020019081526020016000206000016116e290919063ffffffff16565b156111b65761115b61108a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600260009054906101000a900460ff16611209576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112009061236b565b60405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61124d61108a565b60405161125a91906122da565b60405180910390a1565b6000600260009054906101000a900460ff16156112b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ad906123cb565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bebac86846040518263ffffffff1660e01b815260040161131391906122bf565b60206040518083038186803b15801561132b57600080fd5b505afa15801561133f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113639190611d62565b90506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113cf57600080fd5b505afa1580156113e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114079190611d62565b42116114b257600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b815260040160206040518083038186803b15801561147557600080fd5b505afa158015611489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ad9190611d62565b611553565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561151a57600080fd5b505afa15801561152e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115529190611d62565b5b905061155f8282611712565b92505050919050565b6000611590836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611794565b905092915050565b600260009054906101000a900460ff16156115e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115df906123cb565b60405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861162c61108a565b60405161163991906122da565b60405180910390a1565b600061165283600001836117b7565b60001c905092915050565b600061166b82600001611824565b9050919050565b600061167e8383611794565b6116d75782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506116dc565b600090505b92915050565b600061170a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611835565b905092915050565b6000600260009054906101000a900460ff1615611764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175b906123cb565b60405180910390fd5b6b033b2e3c9fd0803ce8000000611784838561191d90919063ffffffff16565b8161178b57fe5b04905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081836000018054905011611802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f99061232b565b60405180910390fd5b82600001828154811061181157fe5b9060005260206000200154905092915050565b600081600001805490509050919050565b60008083600101600084815260200190815260200160002054905060008114611911576000600182039050600060018660000180549050039050600086600001828154811061188057fe5b906000526020600020015490508087600001848154811061189d57fe5b90600052602060002001819055506001830187600101600083815260200190815260200160002081905550866000018054806118d557fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611917565b60009150505b92915050565b6000808314156119305760009050611987565b600082840290508284828161194157fe5b0414611982576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611979906123eb565b60405180910390fd5b809150505b92915050565b8280548282559060005260206000209081019282156119c9579160200282015b828111156119c85782518255916020019190600101906119ad565b5b5090506119d691906119da565b5090565b6119fc91905b808211156119f85760008160009055506001016119e0565b5090565b90565b600081359050611a0e81612626565b92915050565b600081519050611a2381612626565b92915050565b600082601f830112611a3a57600080fd5b8135611a4d611a48826124f3565b6124c6565b91508181835260208401935060208101905083856020840282011115611a7257600080fd5b60005b83811015611aa25781611a888882611aac565b845260208401935060208301925050600181019050611a75565b5050505092915050565b600081359050611abb8161263d565b92915050565b600081519050611ad08161263d565b92915050565b60006101008284031215611ae957600080fd5b611af46101006124c6565b90506000611b0484828501611bb1565b6000830152506020611b1884828501611bb1565b6020830152506040611b2c84828501611a14565b6040830152506060611b4084828501611bc6565b6060830152506080611b5484828501611bc6565b60808301525060a0611b6884828501611a14565b60a08301525060c0611b7c84828501611a14565b60c08301525060e0611b9084828501611bb1565b60e08301525092915050565b600081359050611bab81612654565b92915050565b600081519050611bc081612654565b92915050565b600081519050611bd58161266b565b92915050565b600060208284031215611bed57600080fd5b6000611bfb848285016119ff565b91505092915050565b600060208284031215611c1657600080fd5b600082013567ffffffffffffffff811115611c3057600080fd5b611c3c84828501611a29565b91505092915050565b600060208284031215611c5757600080fd5b6000611c6584828501611aac565b91505092915050565b600060208284031215611c8057600080fd5b6000611c8e84828501611ac1565b91505092915050565b60008060408385031215611caa57600080fd5b6000611cb885828601611aac565b9250506020611cc9858286016119ff565b9150509250929050565b60008060408385031215611ce657600080fd5b6000611cf485828601611aac565b9250506020611d0585828601611b9c565b9150509250929050565b60006101008284031215611d2257600080fd5b6000611d3084828501611ad6565b91505092915050565b600060208284031215611d4b57600080fd5b6000611d5984828501611b9c565b91505092915050565b600060208284031215611d7457600080fd5b6000611d8284828501611bb1565b91505092915050565b611d94816125ad565b82525050565b611dab611da682612549565b6125f5565b82525050565b611dba81612537565b82525050565b611dd1611dcc82612537565b6125e3565b82525050565b611de08161255b565b82525050565b611def81612567565b82525050565b6000611e0260228361251b565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611e68602f8361251b565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000611ece60148361251b565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000611f0e60268361251b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f7460308361251b565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000611fda600b8361252c565b91507f5041555345525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b600061201a60108361251b565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b600061205a60218361251b565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120c0601d8361251b565b91507f5468652061646472657373206973206e6f7420612072656465656d65720000006000830152602082019050919050565b6000612100602d8361251b565b91507f496e7369676e696144414f3a206d75737420686176652070617573657220726f60008301527f6c6520746f20756e7061757365000000000000000000000000000000000000006020830152604082019050919050565b600061216660208361251b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006121a6602b8361251b565b91507f496e7369676e696144414f3a206d75737420686176652070617573657220726f60008301527f6c6520746f2070617573650000000000000000000000000000000000000000006020830152604082019050919050565b600061220c602f8361251b565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b61226e81612591565b82525050565b60006122808284611dc0565b60148201915081905092915050565b600061229b8284611d9a565b60148201915081905092915050565b60006122b582611fcd565b9150819050919050565b60006020820190506122d46000830184611db1565b92915050565b60006020820190506122ef6000830184611d8b565b92915050565b600060208201905061230a6000830184611dd7565b92915050565b60006020820190506123256000830184611de6565b92915050565b6000602082019050818103600083015261234481611df5565b9050919050565b6000602082019050818103600083015261236481611e5b565b9050919050565b6000602082019050818103600083015261238481611ec1565b9050919050565b600060208201905081810360008301526123a481611f01565b9050919050565b600060208201905081810360008301526123c481611f67565b9050919050565b600060208201905081810360008301526123e48161200d565b9050919050565b600060208201905081810360008301526124048161204d565b9050919050565b60006020820190508181036000830152612424816120b3565b9050919050565b60006020820190508181036000830152612444816120f3565b9050919050565b6000602082019050818103600083015261246481612159565b9050919050565b6000602082019050818103600083015261248481612199565b9050919050565b600060208201905081810360008301526124a4816121ff565b9050919050565b60006020820190506124c06000830184612265565b92915050565b6000604051905081810181811067ffffffffffffffff821117156124e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561250a57600080fd5b602082029050602081019050919050565b600082825260208201905092915050565b600081905092915050565b600061254282612571565b9050919050565b600061255482612571565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600065ffffffffffff82169050919050565b60006125b8826125bf565b9050919050565b60006125ca826125d1565b9050919050565b60006125dc82612571565b9050919050565b60006125ee82612607565b9050919050565b600061260082612607565b9050919050565b600061261282612619565b9050919050565b60008160601b9050919050565b61262f81612537565b811461263a57600080fd5b50565b61264681612567565b811461265157600080fd5b50565b61265d81612591565b811461266857600080fd5b50565b6126748161259b565b811461267f57600080fd5b5056fea26469706673582212202adf70ecc1ccd0e85998a614b3c2ff2353fda0397f6d11fe139e840b7e24054b64736f6c63430006080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101255760003560e01c80638da5cb5b116100ad578063c2b40ae411610071578063c2b40ae4146102fb578063ca15c8731461032b578063d547741f1461035b578063e63ab1e914610377578063f2fde38b1461039557610126565b80638da5cb5b1461022f5780639010d07c1461024d57806391d148541461027d578063a217fddf146102ad578063aca57703146102cb57610126565b80635a3d044e116100f45780635a3d044e1461019d5780635c975abb146101cd57806363a9c3d7146101eb578063715018a61461021b5780638456cb591461022557610126565b8063248a9ca31461012b5780632f2ff15d1461015b57806336568abe146101775780633f4ba83a1461019357610126565b5b600080fd5b61014560048036038101906101409190611c45565b6103b1565b6040516101529190612310565b60405180910390f35b61017560048036038101906101709190611c97565b6103d1565b005b610191600480360381019061018c9190611c97565b610445565b005b61019b6104c8565b005b6101b760048036038101906101b29190611d39565b61052e565b6040516101c491906122f5565b60405180910390f35b6101d561097e565b6040516101e291906122f5565b60405180910390f35b61020560048036038101906102009190611bdb565b610995565b60405161021291906122f5565b60405180910390f35b610223610a6c565b005b61022d610bc1565b005b610237610c27565b60405161024491906122bf565b60405180910390f35b61026760048036038101906102629190611cd3565b610c50565b60405161027491906122bf565b60405180910390f35b61029760048036038101906102929190611c97565b610c82565b6040516102a491906122f5565b60405180910390f35b6102b5610cb4565b6040516102c29190612310565b60405180910390f35b6102e560048036038101906102e09190611c04565b610cbb565b6040516102f291906122f5565b60405180910390f35b61031560048036038101906103109190611d39565b610dc3565b6040516103229190612310565b60405180910390f35b61034560048036038101906103409190611c45565b610de4565b60405161035291906124ab565b60405180910390f35b61037560048036038101906103709190611c97565b610e0b565b005b61037f610e7f565b60405161038c9190612310565b60405180910390f35b6103af60048036038101906103aa9190611bdb565b610e96565b005b600060016000838152602001908152602001600020600201549050919050565b6103f860016000848152602001908152602001600020600201546103f361108a565b610c82565b610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e9061234b565b60405180910390fd5b6104418282611092565b5050565b61044d61108a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b19061248b565b60405180910390fd5b6104c48282611126565b5050565b6104e56040516104d7906122aa565b604051809103902033610c82565b610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b9061242b565b60405180910390fd5b61052c6111ba565b565b6000600260009054906101000a900460ff1615610580576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610577906123cb565b60405180910390fd5b670de0b6b3a764000061059233611264565b1061065a576105db6105a261108a565b6040516020016105b2919061228f565b6040516020818303038152906040528051906020012060001c600461156890919063ffffffff16565b61061e5761061c336040516020016105f3919061228f565b6040516020818303038152906040528051906020012060001c600461105a90919063ffffffff16565b505b7fc53e300da4fe7bad9553037bb567acec8109a294de1f832291c2d814dfc262c43360405161064d91906122da565b60405180910390a1610974565b6000801b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d8bff5a5336040518263ffffffff1660e01b81526004016106b991906122da565b60206040518083038186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190611c6e565b146107ca5761074b33604051602001610722919061228f565b6040516020818303038152906040528051906020012060001c600461156890919063ffffffff16565b61078e5761078c33604051602001610763919061228f565b6040516020818303038152906040528051906020012060001c600461105a90919063ffffffff16565b505b7f359eefdc83d4cbeabeed5ea68cd9213056f02a7317e55e1310612edc535d5ae9336040516107bd91906122da565b60405180910390a1610973565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634423c5f1846040518263ffffffff1660e01b815260040161083c91906124ab565b6101006040518083038186803b15801561085557600080fd5b505afa158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d9190611d0f565b6040015173ffffffffffffffffffffffffffffffffffffffff161415610969576108ea336040516020016108c1919061228f565b6040516020818303038152906040528051906020012060001c600461156890919063ffffffff16565b61092d5761092b33604051602001610902919061228f565b6040516020818303038152906040528051906020012060001c600461105a90919063ffffffff16565b505b7f430bb0ab986389293d8f0855931d73d3e3bdc06890eb3e780550c98a7582a7ef3360405161095c91906122da565b60405180910390a1610972565b60009050610979565b5b5b600190505b919050565b6000600260009054906101000a900460ff16905090565b6000600260009054906101000a900460ff16156109e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109de906123cb565b60405180910390fd5b610a24826040516020016109fb9190612274565b6040516020818303038152906040528051906020012060001c600461156890919063ffffffff16565b610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a9061240b565b60405180910390fd5b60019050919050565b610a7461108a565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af99061244b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610bde604051610bd0906122aa565b604051809103902033610c82565b610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c149061246b565b60405180910390fd5b610c25611598565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610c7a826001600086815260200190815260200160002060000161164390919063ffffffff16565b905092915050565b6000610cac826001600086815260200190815260200160002060000161156890919063ffffffff16565b905092915050565b6000801b81565b6000610cc561108a565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4a9061244b565b60405180910390fd5b600260009054906101000a900460ff1615610da3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9a906123cb565b60405180910390fd5b8160039080519060200190610db992919061198d565b5060019050919050565b60038181548110610dd057fe5b906000526020600020016000915090505481565b6000610e046001600084815260200190815260200160002060000161165d565b9050919050565b610e326001600084815260200190815260200160002060020154610e2d61108a565b610c82565b610e71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e68906123ab565b60405180910390fd5b610e7b8282611126565b5050565b604051610e8b906122aa565b604051809103902081565b610e9e61108a565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f239061244b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f939061238b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611082836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611672565b905092915050565b600033905090565b6110ba816001600085815260200190815260200160002060000161105a90919063ffffffff16565b15611122576110c761108a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61114e81600160008581526020019081526020016000206000016116e290919063ffffffff16565b156111b65761115b61108a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600260009054906101000a900460ff16611209576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112009061236b565b60405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61124d61108a565b60405161125a91906122da565b60405180910390a1565b6000600260009054906101000a900460ff16156112b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ad906123cb565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bebac86846040518263ffffffff1660e01b815260040161131391906122bf565b60206040518083038186803b15801561132b57600080fd5b505afa15801561133f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113639190611d62565b90506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113cf57600080fd5b505afa1580156113e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114079190611d62565b42116114b257600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b815260040160206040518083038186803b15801561147557600080fd5b505afa158015611489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ad9190611d62565b611553565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561151a57600080fd5b505afa15801561152e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115529190611d62565b5b905061155f8282611712565b92505050919050565b6000611590836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611794565b905092915050565b600260009054906101000a900460ff16156115e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115df906123cb565b60405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861162c61108a565b60405161163991906122da565b60405180910390a1565b600061165283600001836117b7565b60001c905092915050565b600061166b82600001611824565b9050919050565b600061167e8383611794565b6116d75782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506116dc565b600090505b92915050565b600061170a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611835565b905092915050565b6000600260009054906101000a900460ff1615611764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175b906123cb565b60405180910390fd5b6b033b2e3c9fd0803ce8000000611784838561191d90919063ffffffff16565b8161178b57fe5b04905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081836000018054905011611802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f99061232b565b60405180910390fd5b82600001828154811061181157fe5b9060005260206000200154905092915050565b600081600001805490509050919050565b60008083600101600084815260200190815260200160002054905060008114611911576000600182039050600060018660000180549050039050600086600001828154811061188057fe5b906000526020600020015490508087600001848154811061189d57fe5b90600052602060002001819055506001830187600101600083815260200190815260200160002081905550866000018054806118d557fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611917565b60009150505b92915050565b6000808314156119305760009050611987565b600082840290508284828161194157fe5b0414611982576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611979906123eb565b60405180910390fd5b809150505b92915050565b8280548282559060005260206000209081019282156119c9579160200282015b828111156119c85782518255916020019190600101906119ad565b5b5090506119d691906119da565b5090565b6119fc91905b808211156119f85760008160009055506001016119e0565b5090565b90565b600081359050611a0e81612626565b92915050565b600081519050611a2381612626565b92915050565b600082601f830112611a3a57600080fd5b8135611a4d611a48826124f3565b6124c6565b91508181835260208401935060208101905083856020840282011115611a7257600080fd5b60005b83811015611aa25781611a888882611aac565b845260208401935060208301925050600181019050611a75565b5050505092915050565b600081359050611abb8161263d565b92915050565b600081519050611ad08161263d565b92915050565b60006101008284031215611ae957600080fd5b611af46101006124c6565b90506000611b0484828501611bb1565b6000830152506020611b1884828501611bb1565b6020830152506040611b2c84828501611a14565b6040830152506060611b4084828501611bc6565b6060830152506080611b5484828501611bc6565b60808301525060a0611b6884828501611a14565b60a08301525060c0611b7c84828501611a14565b60c08301525060e0611b9084828501611bb1565b60e08301525092915050565b600081359050611bab81612654565b92915050565b600081519050611bc081612654565b92915050565b600081519050611bd58161266b565b92915050565b600060208284031215611bed57600080fd5b6000611bfb848285016119ff565b91505092915050565b600060208284031215611c1657600080fd5b600082013567ffffffffffffffff811115611c3057600080fd5b611c3c84828501611a29565b91505092915050565b600060208284031215611c5757600080fd5b6000611c6584828501611aac565b91505092915050565b600060208284031215611c8057600080fd5b6000611c8e84828501611ac1565b91505092915050565b60008060408385031215611caa57600080fd5b6000611cb885828601611aac565b9250506020611cc9858286016119ff565b9150509250929050565b60008060408385031215611ce657600080fd5b6000611cf485828601611aac565b9250506020611d0585828601611b9c565b9150509250929050565b60006101008284031215611d2257600080fd5b6000611d3084828501611ad6565b91505092915050565b600060208284031215611d4b57600080fd5b6000611d5984828501611b9c565b91505092915050565b600060208284031215611d7457600080fd5b6000611d8284828501611bb1565b91505092915050565b611d94816125ad565b82525050565b611dab611da682612549565b6125f5565b82525050565b611dba81612537565b82525050565b611dd1611dcc82612537565b6125e3565b82525050565b611de08161255b565b82525050565b611def81612567565b82525050565b6000611e0260228361251b565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611e68602f8361251b565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000611ece60148361251b565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000611f0e60268361251b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f7460308361251b565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000611fda600b8361252c565b91507f5041555345525f524f4c450000000000000000000000000000000000000000006000830152600b82019050919050565b600061201a60108361251b565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b600061205a60218361251b565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120c0601d8361251b565b91507f5468652061646472657373206973206e6f7420612072656465656d65720000006000830152602082019050919050565b6000612100602d8361251b565b91507f496e7369676e696144414f3a206d75737420686176652070617573657220726f60008301527f6c6520746f20756e7061757365000000000000000000000000000000000000006020830152604082019050919050565b600061216660208361251b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006121a6602b8361251b565b91507f496e7369676e696144414f3a206d75737420686176652070617573657220726f60008301527f6c6520746f2070617573650000000000000000000000000000000000000000006020830152604082019050919050565b600061220c602f8361251b565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b61226e81612591565b82525050565b60006122808284611dc0565b60148201915081905092915050565b600061229b8284611d9a565b60148201915081905092915050565b60006122b582611fcd565b9150819050919050565b60006020820190506122d46000830184611db1565b92915050565b60006020820190506122ef6000830184611d8b565b92915050565b600060208201905061230a6000830184611dd7565b92915050565b60006020820190506123256000830184611de6565b92915050565b6000602082019050818103600083015261234481611df5565b9050919050565b6000602082019050818103600083015261236481611e5b565b9050919050565b6000602082019050818103600083015261238481611ec1565b9050919050565b600060208201905081810360008301526123a481611f01565b9050919050565b600060208201905081810360008301526123c481611f67565b9050919050565b600060208201905081810360008301526123e48161200d565b9050919050565b600060208201905081810360008301526124048161204d565b9050919050565b60006020820190508181036000830152612424816120b3565b9050919050565b60006020820190508181036000830152612444816120f3565b9050919050565b6000602082019050818103600083015261246481612159565b9050919050565b6000602082019050818103600083015261248481612199565b9050919050565b600060208201905081810360008301526124a4816121ff565b9050919050565b60006020820190506124c06000830184612265565b92915050565b6000604051905081810181811067ffffffffffffffff821117156124e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561250a57600080fd5b602082029050602081019050919050565b600082825260208201905092915050565b600081905092915050565b600061254282612571565b9050919050565b600061255482612571565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600065ffffffffffff82169050919050565b60006125b8826125bf565b9050919050565b60006125ca826125d1565b9050919050565b60006125dc82612571565b9050919050565b60006125ee82612607565b9050919050565b600061260082612607565b9050919050565b600061261282612619565b9050919050565b60008160601b9050919050565b61262f81612537565b811461263a57600080fd5b50565b61264681612567565b811461265157600080fd5b50565b61265d81612591565b811461266857600080fd5b50565b6126748161259b565b811461267f57600080fd5b5056fea26469706673582212202adf70ecc1ccd0e85998a614b3c2ff2353fda0397f6d11fe139e840b7e24054b64736f6c63430006080033",
  "immutableReferences": {},
  "sourceMap": "1420:4407:2:-:0;;;2144:691;5:9:-1;2:2;;;27:1;24;17:12;2:2;2144:691:2;832:17:6;852:12;:10;;;:12;;:::i;:::-;832:32;;883:9;874:6;;:18;;;;;;;;;;;;;;;;;;940:9;907:43;;936:1;907:43;;;;;;;;;;;;798:159;900:5:21;890:7;;:15;;;;;;;;;;;;;;;;;;2175:39:2;1729:4:5;2186:18:2;;2206:7;:5;;;:7;;:::i;:::-;2175:10;;;:39;;:::i;:::-;2225:32;1619:24;;;;;;;;;;;;;;2249:7;:5;;;:7;;:::i;:::-;2225:10;;;:32;;:::i;:::-;2396:42;2382:3;;:57;;;;;;;;;;;;;;;;;;2587:42;2567:5;;:63;;;;;;;;;;;;;;;;;;2786:42;2764:7;;:65;;;;;;;;;;;;;;;;;;1420:4407;;735:104:4;788:15;822:10;815:17;;735:104;:::o;1033:77:6:-;1071:7;1097:6;;;;;;;;;;;1090:13;;1033:77;:::o;6132:110:5:-;6210:25;6221:4;6227:7;6210:10;;;:25;;:::i;:::-;6132:110;;:::o;6449:184::-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;;;:12;;:::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;4831:141:20:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;;;:41;;:::i;:::-;4917:48;;4831:141;;;;:::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;;;:21;;:::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:20;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;6:347:-1:-;;184:85;266:2;261:3;184:85;;;177:92;;302:13;298:1;293:3;289:11;282:34;344:2;339:3;335:12;328:19;;170:183;;;;361:381;;569:148;713:3;569:148;;;562:155;;734:3;727:10;;550:192;;;;750:145;;886:3;871:18;;864:31;;;;;1420:4407:2;;;;;;;",
  "deployedSourceMap": "1420:4407:2:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1420:4407:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;3826:112:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4188:223;;;;;;;;;;;;;;;;:::i;:::-;;5362:205;;;;;;;;;;;;;;;;:::i;:::-;;5671:153:2;;;:::i;:::-;;3978:979;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1007:76:21;;;:::i;:::-;;;;;;;;;;;;;;;;5129:219:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1656:145:6;;;:::i;:::-;;5440:137:2;;;:::i;:::-;;1033:77:6;;;:::i;:::-;;;;;;;;;;;;;;;;3509:136:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2494:137;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1684:49;;;:::i;:::-;;;;;;;;;;;;;;;;3263:144:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1648:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2799:125:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4645:226;;;;;;;;;;;;;;;;:::i;:::-;;1581:62:2;;;:::i;:::-;;;;;;;;;;;;;;;;1950:240:6;;;;;;;;;;;;;;;;:::i;:::-;;3826:112:5;3883:7;3909:6;:12;3916:4;3909:12;;;;;;;;;;;:22;;;3902:29;;3826:112;;;:::o;4188:223::-;4271:45;4279:6;:12;4286:4;4279:12;;;;;;;;;;;:22;;;4303:12;:10;:12::i;:::-;4271:7;:45::i;:::-;4263:105;;;;;;;;;;;;;;;;;;;;;;4379:25;4390:4;4396:7;4379:10;:25::i;:::-;4188:223;;:::o;5362:205::-;5459:12;:10;:12::i;:::-;5448:23;;:7;:23;;;5440:83;;;;;;;;;;;;;;;;;;;;;;5534:26;5546:4;5552:7;5534:11;:26::i;:::-;5362:205;;:::o;5671:153:2:-;5715:32;1619:24;;;;;;;;;;;;;;5736:10;5715:7;:32::i;:::-;5707:90;;;;;;;;;;;;;;;;;;;;;;5807:10;:8;:10::i;:::-;5671:153::o;3978:979::-;4043:4;1236:7:21;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;4080:7:2::1;4060:16;4065:10;4060:4;:16::i;:::-;:27;4056:880;;4102:88;4172:12;:10;:12::i;:::-;4155:30;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4155:30:2;;;4145:41;;;;;;4137:50;;4102:9;:18;;:88;;;;:::i;:::-;4097:193;;4200:81;4265:10;4248:28;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4248:28:2;;;4238:39;;;;;;4230:48;;4200:9;:13;;:81;;;;:::i;:::-;;4097:193;4302:22;4313:10;4302:22;;;;;;;;;;;;;;;4056:880;;;4366:4;4339:31:::0;::::1;:5;;;;;;;;;;;:11;;;4351:10;4339:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;4339:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4339:23:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4339:23:2;;;;;;;;;:31;4336:600;;4385:86;4455:10;4438:28;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4438:28:2;;;4428:39;;;;;;4420:48;;4385:9;:18;;:86;;;;:::i;:::-;4380:191;;4481:81;4546:10;4529:28;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4529:28:2;;;4519:39;;;;;;4511:48;;4481:9;:13;;:81;;;;:::i;:::-;;4380:191;4583:26;4598:10;4583:26;;;;;;;;;;;;;;;4336:600;;;4648:10;4624:34;;:7;;;;;;;;;;;:12;;;4637:2;4624:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;4624:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;4624:16:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4624:16:2;;;;;;;;;:20;;;:34;;;4621:315;;;4673:86;4743:10;4726:28;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4726:28:2;;;4716:39;;;;;;4708:48;;4673:9;:18;;:86;;;;:::i;:::-;4668:191;;4769:81;4834:10;4817:28;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4817:28:2;;;4807:39;;;;;;4799:48;;4769:9;:13;;:81;;;;:::i;:::-;;4668:191;4871:26;4886:10;4871:26;;;;;;;;;;;;;;;4621:315;;;4924:5;4917:12;;;;4621:315;4336:600;4056:880;4948:4;4941:11;;1274:1:21;3978:979:2::0;;;:::o;1007:76:21:-;1046:4;1069:7;;;;;;;;;;;1062:14;;1007:76;:::o;5129:219:2:-;5193:4;1236:7:21;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;5213:79:2::1;5283:3;5266:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5266:21:2;;;5256:32;;;;;;5248:41;;5213:9;:18;;:79;;;;:::i;:::-;5205:121;;;;;;;;;;;;;;;;;;;;;;5339:4;5332:11;;5129:219:::0;;;:::o;1656:145:6:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;1762:1:::1;1725:40;;1746:6;::::0;::::1;;;;;;;;;1725:40;;;;;;;;;;;;1792:1;1775:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1656:145::o:0;5440:137:2:-;5478:32;1619:24;;;;;;;;;;;;;;5499:10;5478:7;:32::i;:::-;5470:88;;;;;;;;;;;;;;;;;;;;;;5564:8;:6;:8::i;:::-;5440:137::o;1033:77:6:-;1071:7;1097:6;;;;;;;;;;;1090:13;;1033:77;:::o;3509:136:5:-;3582:7;3608:30;3632:5;3608:6;:12;3615:4;3608:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;3601:37;;3509:136;;;;:::o;2494:137::-;2563:4;2586:38;2616:7;2586:6;:12;2593:4;2586:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;2579:45;;2494:137;;;;:::o;1684:49::-;1729:4;1684:49;;;:::o;3263:144:2:-;3355:4;1247:12:6;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;1236:7:21::1;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;3375:10:2::2;3367:5;:18;;;;;;;;;;;;:::i;:::-;;3398:4;3391:11;;3263:144:::0;;;:::o;1648:22::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2799:125:5:-;2862:7;2888:29;:6;:12;2895:4;2888:12;;;;;;;;;;;:20;;:27;:29::i;:::-;2881:36;;2799:125;;;:::o;4645:226::-;4729:45;4737:6;:12;4744:4;4737:12;;;;;;;;;;;:22;;;4761:12;:10;:12::i;:::-;4729:7;:45::i;:::-;4721:106;;;;;;;;;;;;;;;;;;;;;;4838:26;4850:4;4856:7;4838:11;:26::i;:::-;4645:226;;:::o;1581:62:2:-;1619:24;;;;;;;;;;;;;;1581:62;:::o;1950:240:6:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;2058:1:::1;2038:22;;:8;:22;;;;2030:73;;;;;;;;;;;;;;;;;;;;;;2147:8;2118:38;;2139:6;::::0;::::1;;;;;;;;;2118:38;;;;;;;;;;;;2175:8;2166:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1950:240:::0;:::o;4831:141:20:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;:41::i;:::-;4917:48;;4831:141;;;;:::o;735:104:4:-;788:15;822:10;815:17;;735:104;:::o;6449:184:5:-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;:12::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;6639:188::-;6713:36;6741:7;6713:6;:12;6720:4;6713:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;6709:112;;;6797:12;:10;:12::i;:::-;6770:40;;6788:7;6770:40;;6782:4;6770:40;;;;;;;;;;6709:112;6639:188;;:::o;1709:117:21:-;1427:7;;;;;;;;;;;1419:40;;;;;;;;;;;;;;;;;;;;;;1777:5:::1;1767:7;;:15;;;;;;;;;;;;;;;;;;1797:22;1806:12;:10;:12::i;:::-;1797:22;;;;;;;;;;;;;;;1709:117::o:0;3583:206:2:-;3647:11;1236:7:21;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;3666:13:2::1;3682:3;;;;;;;;;;;:7;;;3690:3;3682:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3682:12:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3682:12:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3682:12:2;;;;;;;;;3666:28;;3700:11;3721:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3721:9:2;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3721:9:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3721:9:2;;;;;;;;;3715:3;:15;3714:42;;3747:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3747:9:2;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3747:9:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3747:9:2;;;;;;;;;3714:42;;;3734:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3734:10:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3734:10:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3734:10:2;;;;;;;;;3714:42;3700:56;;3768:16;3773:5;3780:3;3768:4;:16::i;:::-;3762:22;;1274:1:21;;3583:206:2::0;;;:::o;5368:156:20:-;5448:4;5471:46;5481:3;:10;;5509:5;5501:14;;5493:23;;5471:9;:46::i;:::-;5464:53;;5368:156;;;;:::o;1535:115:21:-;1236:7;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;1604:4:::1;1594:7;;:14;;;;;;;;;;;;;;;;;;1623:20;1630:12;:10;:12::i;:::-;1623:20;;;;;;;;;;;;;;;1535:115::o:0;6052:147:20:-;6126:7;6168:22;6172:3;:10;;6184:5;6168:3;:22::i;:::-;6160:31;;6145:47;;6052:147;;;;:::o;5605:115::-;5668:7;5694:19;5702:3;:10;;5694:7;:19::i;:::-;5687:26;;5605:115;;;:::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:20;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;5140:147::-;5213:4;5236:44;5244:3;:10;;5272:5;5264:14;;5256:23;;5236:7;:44::i;:::-;5229:51;;5140:147;;;;:::o;1989:151:2:-;2062:9;1236:7:21;;;;;;;;;;;1235:8;1227:37;;;;;;;;;;;;;;;;;;;;;;1976:8:2::1;2121;2127:1;2121;:5;;:8;;;;:::i;:::-;:14;;;;;;2117:18;;1989:151:::0;;;;:::o;3743:127:20:-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;4390:201::-;4457:7;4505:5;4484:3;:11;;:18;;;;:26;4476:73;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;3951:107::-;4007:7;4033:3;:11;;:18;;;;4026:25;;3951:107;;;:::o;2150:1512::-;2216:4;2332:18;2353:3;:12;;:19;2366:5;2353:19;;;;;;;;;;;;2332:40;;2401:1;2387:10;:15;2383:1273;;2744:21;2781:1;2768:10;:14;2744:38;;2796:17;2837:1;2816:3;:11;;:18;;;;:22;2796:42;;3078:17;3098:3;:11;;3110:9;3098:22;;;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;:38;;;;3358:1;3342:13;:17;3316:3;:12;;:23;3329:9;3316:23;;;;;;;;;;;:43;;;;3465:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;2150:1512;;;;;:::o;2119:459:10:-;2177:7;2423:1;2418;:6;2414:45;;;2447:1;2440:8;;;;2414:45;2469:9;2485:1;2481;:5;2469:17;;2513:1;2508;2504;:5;;;;;;:10;2496:56;;;;;;;;;;;;;;;;;;;;;;2570:1;2563:8;;;2119:459;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:134;;226:6;220:13;211:22;;238:33;265:5;238:33;;;205:71;;;;;301:707;;418:3;411:4;403:6;399:17;395:27;385:2;;436:1;433;426:12;385:2;473:6;460:20;495:80;510:64;567:6;510:64;;;495:80;;;486:89;;592:5;617:6;610:5;603:21;647:4;639:6;635:17;625:27;;669:4;664:3;660:14;653:21;;722:6;769:3;761:4;753:6;749:17;744:3;740:27;737:36;734:2;;;786:1;783;776:12;734:2;811:1;796:206;821:6;818:1;815:13;796:206;;;879:3;901:37;934:3;922:10;901:37;;;896:3;889:50;962:4;957:3;953:14;946:21;;990:4;985:3;981:14;974:21;;853:149;843:1;840;836:9;831:14;;796:206;;;800:14;378:630;;;;;;;;1016:130;;1096:6;1083:20;1074:29;;1108:33;1135:5;1108:33;;;1068:78;;;;;1153:134;;1237:6;1231:13;1222:22;;1249:33;1276:5;1249:33;;;1216:71;;;;;1323:1423;;1443:6;1431:9;1426:3;1422:19;1418:32;1415:2;;;1463:1;1460;1453:12;1415:2;1481:22;1496:6;1481:22;;;1472:31;;1552:1;1584:60;1640:3;1631:6;1620:9;1616:22;1584:60;;;1577:4;1570:5;1566:16;1559:86;1513:143;1705:2;1738:60;1794:3;1785:6;1774:9;1770:22;1738:60;;;1731:4;1724:5;1720:16;1713:86;1666:144;1859:2;1892:60;1948:3;1939:6;1928:9;1924:22;1892:60;;;1885:4;1878:5;1874:16;1867:86;1820:144;2013:2;2046:59;2101:3;2092:6;2081:9;2077:22;2046:59;;;2039:4;2032:5;2028:16;2021:85;1974:143;2166:3;2200:59;2255:3;2246:6;2235:9;2231:22;2200:59;;;2193:4;2186:5;2182:16;2175:85;2127:144;2320:3;2354:60;2410:3;2401:6;2390:9;2386:22;2354:60;;;2347:4;2340:5;2336:16;2329:86;2281:145;2475:3;2509:60;2565:3;2556:6;2545:9;2541:22;2509:60;;;2502:4;2495:5;2491:16;2484:86;2436:145;2630:3;2664:60;2720:3;2711:6;2700:9;2696:22;2664:60;;;2657:4;2650:5;2646:16;2639:86;2591:145;1409:1337;;;;;2753:130;;2833:6;2820:20;2811:29;;2845:33;2872:5;2845:33;;;2805:78;;;;;2890:134;;2974:6;2968:13;2959:22;;2986:33;3013:5;2986:33;;;2953:71;;;;;3031:132;;3114:6;3108:13;3099:22;;3126:32;3152:5;3126:32;;;3093:70;;;;;3170:241;;3274:2;3262:9;3253:7;3249:23;3245:32;3242:2;;;3290:1;3287;3280:12;3242:2;3325:1;3342:53;3387:7;3378:6;3367:9;3363:22;3342:53;;;3332:63;;3304:97;3236:175;;;;;3418:377;;3547:2;3535:9;3526:7;3522:23;3518:32;3515:2;;;3563:1;3560;3553:12;3515:2;3626:1;3615:9;3611:17;3598:31;3649:18;3641:6;3638:30;3635:2;;;3681:1;3678;3671:12;3635:2;3701:78;3771:7;3762:6;3751:9;3747:22;3701:78;;;3691:88;;3577:208;3509:286;;;;;3802:241;;3906:2;3894:9;3885:7;3881:23;3877:32;3874:2;;;3922:1;3919;3912:12;3874:2;3957:1;3974:53;4019:7;4010:6;3999:9;3995:22;3974:53;;;3964:63;;3936:97;3868:175;;;;;4050:263;;4165:2;4153:9;4144:7;4140:23;4136:32;4133:2;;;4181:1;4178;4171:12;4133:2;4216:1;4233:64;4289:7;4280:6;4269:9;4265:22;4233:64;;;4223:74;;4195:108;4127:186;;;;;4320:366;;;4441:2;4429:9;4420:7;4416:23;4412:32;4409:2;;;4457:1;4454;4447:12;4409:2;4492:1;4509:53;4554:7;4545:6;4534:9;4530:22;4509:53;;;4499:63;;4471:97;4599:2;4617:53;4662:7;4653:6;4642:9;4638:22;4617:53;;;4607:63;;4578:98;4403:283;;;;;;4693:366;;;4814:2;4802:9;4793:7;4789:23;4785:32;4782:2;;;4830:1;4827;4820:12;4782:2;4865:1;4882:53;4927:7;4918:6;4907:9;4903:22;4882:53;;;4872:63;;4844:97;4972:2;4990:53;5035:7;5026:6;5015:9;5011:22;4990:53;;;4980:63;;4951:98;4776:283;;;;;;5066:304;;5201:3;5189:9;5180:7;5176:23;5172:33;5169:2;;;5218:1;5215;5208:12;5169:2;5253:1;5270:84;5346:7;5337:6;5326:9;5322:22;5270:84;;;5260:94;;5232:128;5163:207;;;;;5377:241;;5481:2;5469:9;5460:7;5456:23;5452:32;5449:2;;;5497:1;5494;5487:12;5449:2;5532:1;5549:53;5594:7;5585:6;5574:9;5570:22;5549:53;;;5539:63;;5511:97;5443:175;;;;;5625:263;;5740:2;5728:9;5719:7;5715:23;5711:32;5708:2;;;5756:1;5753;5746:12;5708:2;5791:1;5808:64;5864:7;5855:6;5844:9;5840:22;5808:64;;;5798:74;;5770:108;5702:186;;;;;5895:142;5986:45;6025:5;5986:45;;;5981:3;5974:58;5968:69;;;6044:184;6161:61;6189:32;6215:5;6189:32;;;6161:61;;;6156:3;6149:74;6143:85;;;6235:113;6318:24;6336:5;6318:24;;;6313:3;6306:37;6300:48;;;6355:152;6456:45;6476:24;6494:5;6476:24;;;6456:45;;;6451:3;6444:58;6438:69;;;6514:104;6591:21;6606:5;6591:21;;;6586:3;6579:34;6573:45;;;6625:113;6708:24;6726:5;6708:24;;;6703:3;6696:37;6690:48;;;6746:371;;6906:67;6970:2;6965:3;6906:67;;;6899:74;;7006:34;7002:1;6997:3;6993:11;6986:55;7075:4;7070:2;7065:3;7061:12;7054:26;7108:2;7103:3;7099:12;7092:19;;6892:225;;;;7126:384;;7286:67;7350:2;7345:3;7286:67;;;7279:74;;7386:34;7382:1;7377:3;7373:11;7366:55;7455:17;7450:2;7445:3;7441:12;7434:39;7501:2;7496:3;7492:12;7485:19;;7272:238;;;;7519:320;;7679:67;7743:2;7738:3;7679:67;;;7672:74;;7779:22;7775:1;7770:3;7766:11;7759:43;7830:2;7825:3;7821:12;7814:19;;7665:174;;;;7848:375;;8008:67;8072:2;8067:3;8008:67;;;8001:74;;8108:34;8104:1;8099:3;8095:11;8088:55;8177:8;8172:2;8167:3;8163:12;8156:30;8214:2;8209:3;8205:12;8198:19;;7994:229;;;;8232:385;;8392:67;8456:2;8451:3;8392:67;;;8385:74;;8492:34;8488:1;8483:3;8479:11;8472:55;8561:18;8556:2;8551:3;8547:12;8540:40;8608:2;8603:3;8599:12;8592:19;;8378:239;;;;8626:347;;8804:85;8886:2;8881:3;8804:85;;;8797:92;;8922:13;8918:1;8913:3;8909:11;8902:34;8964:2;8959:3;8955:12;8948:19;;8790:183;;;;8982:316;;9142:67;9206:2;9201:3;9142:67;;;9135:74;;9242:18;9238:1;9233:3;9229:11;9222:39;9289:2;9284:3;9280:12;9273:19;;9128:170;;;;9307:370;;9467:67;9531:2;9526:3;9467:67;;;9460:74;;9567:34;9563:1;9558:3;9554:11;9547:55;9636:3;9631:2;9626:3;9622:12;9615:25;9668:2;9663:3;9659:12;9652:19;;9453:224;;;;9686:329;;9846:67;9910:2;9905:3;9846:67;;;9839:74;;9946:31;9942:1;9937:3;9933:11;9926:52;10006:2;10001:3;9997:12;9990:19;;9832:183;;;;10024:382;;10184:67;10248:2;10243:3;10184:67;;;10177:74;;10284:34;10280:1;10275:3;10271:11;10264:55;10353:15;10348:2;10343:3;10339:12;10332:37;10397:2;10392:3;10388:12;10381:19;;10170:236;;;;10415:332;;10575:67;10639:2;10634:3;10575:67;;;10568:74;;10675:34;10671:1;10666:3;10662:11;10655:55;10738:2;10733:3;10729:12;10722:19;;10561:186;;;;10756:380;;10916:67;10980:2;10975:3;10916:67;;;10909:74;;11016:34;11012:1;11007:3;11003:11;10996:55;11085:13;11080:2;11075:3;11071:12;11064:35;11127:2;11122:3;11118:12;11111:19;;10902:234;;;;11145:384;;11305:67;11369:2;11364:3;11305:67;;;11298:74;;11405:34;11401:1;11396:3;11392:11;11385:55;11474:17;11469:2;11464:3;11460:12;11453:39;11520:2;11515:3;11511:12;11504:19;;11291:238;;;;11537:113;11620:24;11638:5;11620:24;;;11615:3;11608:37;11602:48;;;11657:253;;11785:75;11856:3;11847:6;11785:75;;;11882:2;11877:3;11873:12;11866:19;;11902:3;11895:10;;11773:137;;;;;11917:285;;12061:91;12148:3;12139:6;12061:91;;;12174:2;12169:3;12165:12;12158:19;;12194:3;12187:10;;12049:153;;;;;12209:381;;12417:148;12561:3;12417:148;;;12410:155;;12582:3;12575:10;;12398:192;;;;12597:222;;12724:2;12713:9;12709:18;12701:26;;12738:71;12806:1;12795:9;12791:17;12782:6;12738:71;;;12695:124;;;;;12826:238;;12961:2;12950:9;12946:18;12938:26;;12975:79;13051:1;13040:9;13036:17;13027:6;12975:79;;;12932:132;;;;;13071:210;;13192:2;13181:9;13177:18;13169:26;;13206:65;13268:1;13257:9;13253:17;13244:6;13206:65;;;13163:118;;;;;13288:222;;13415:2;13404:9;13400:18;13392:26;;13429:71;13497:1;13486:9;13482:17;13473:6;13429:71;;;13386:124;;;;;13517:416;;13717:2;13706:9;13702:18;13694:26;;13767:9;13761:4;13757:20;13753:1;13742:9;13738:17;13731:47;13792:131;13918:4;13792:131;;;13784:139;;13688:245;;;;13940:416;;14140:2;14129:9;14125:18;14117:26;;14190:9;14184:4;14180:20;14176:1;14165:9;14161:17;14154:47;14215:131;14341:4;14215:131;;;14207:139;;14111:245;;;;14363:416;;14563:2;14552:9;14548:18;14540:26;;14613:9;14607:4;14603:20;14599:1;14588:9;14584:17;14577:47;14638:131;14764:4;14638:131;;;14630:139;;14534:245;;;;14786:416;;14986:2;14975:9;14971:18;14963:26;;15036:9;15030:4;15026:20;15022:1;15011:9;15007:17;15000:47;15061:131;15187:4;15061:131;;;15053:139;;14957:245;;;;15209:416;;15409:2;15398:9;15394:18;15386:26;;15459:9;15453:4;15449:20;15445:1;15434:9;15430:17;15423:47;15484:131;15610:4;15484:131;;;15476:139;;15380:245;;;;15632:416;;15832:2;15821:9;15817:18;15809:26;;15882:9;15876:4;15872:20;15868:1;15857:9;15853:17;15846:47;15907:131;16033:4;15907:131;;;15899:139;;15803:245;;;;16055:416;;16255:2;16244:9;16240:18;16232:26;;16305:9;16299:4;16295:20;16291:1;16280:9;16276:17;16269:47;16330:131;16456:4;16330:131;;;16322:139;;16226:245;;;;16478:416;;16678:2;16667:9;16663:18;16655:26;;16728:9;16722:4;16718:20;16714:1;16703:9;16699:17;16692:47;16753:131;16879:4;16753:131;;;16745:139;;16649:245;;;;16901:416;;17101:2;17090:9;17086:18;17078:26;;17151:9;17145:4;17141:20;17137:1;17126:9;17122:17;17115:47;17176:131;17302:4;17176:131;;;17168:139;;17072:245;;;;17324:416;;17524:2;17513:9;17509:18;17501:26;;17574:9;17568:4;17564:20;17560:1;17549:9;17545:17;17538:47;17599:131;17725:4;17599:131;;;17591:139;;17495:245;;;;17747:416;;17947:2;17936:9;17932:18;17924:26;;17997:9;17991:4;17987:20;17983:1;17972:9;17968:17;17961:47;18022:131;18148:4;18022:131;;;18014:139;;17918:245;;;;18170:416;;18370:2;18359:9;18355:18;18347:26;;18420:9;18414:4;18410:20;18406:1;18395:9;18391:17;18384:47;18445:131;18571:4;18445:131;;;18437:139;;18341:245;;;;18593:222;;18720:2;18709:9;18705:18;18697:26;;18734:71;18802:1;18791:9;18787:17;18778:6;18734:71;;;18691:124;;;;;18822:256;;18884:2;18878:9;18868:19;;18922:4;18914:6;18910:17;19021:6;19009:10;19006:22;18985:18;18973:10;18970:34;18967:62;18964:2;;;19042:1;19039;19032:12;18964:2;19062:10;19058:2;19051:22;18862:216;;;;;19085:304;;19244:18;19236:6;19233:30;19230:2;;;19276:1;19273;19266:12;19230:2;19311:4;19303:6;19299:17;19291:25;;19374:4;19368;19364:15;19356:23;;19167:222;;;;19397:163;;19512:6;19507:3;19500:19;19549:4;19544:3;19540:14;19525:29;;19493:67;;;;;19569:145;;19705:3;19690:18;;19683:31;;;;;19722:91;;19784:24;19802:5;19784:24;;;19773:35;;19767:46;;;;19820:99;;19890:24;19908:5;19890:24;;;19879:35;;19873:46;;;;19926:85;;19999:5;19992:13;19985:21;19974:32;;19968:43;;;;20018:72;;20080:5;20069:16;;20063:27;;;;20097:121;;20170:42;20163:5;20159:54;20148:65;;20142:76;;;;20225:72;;20287:5;20276:16;;20270:27;;;;20304:92;;20376:14;20369:5;20365:26;20354:37;;20348:48;;;;20403:129;;20490:37;20521:5;20490:37;;;20477:50;;20471:61;;;;20539:121;;20618:37;20649:5;20618:37;;;20605:50;;20599:61;;;;20667:108;;20746:24;20764:5;20746:24;;;20733:37;;20727:48;;;;20782:95;;20846:26;20866:5;20846:26;;;20835:37;;20829:48;;;;20884:103;;20956:26;20976:5;20956:26;;;20945:37;;20939:48;;;;20994:89;;21058:20;21072:5;21058:20;;;21047:31;;21041:42;;;;21090:94;;21168:5;21164:2;21160:14;21138:36;;21132:52;;;;21192:117;21261:24;21279:5;21261:24;;;21254:5;21251:35;21241:2;;21300:1;21297;21290:12;21241:2;21235:74;;21316:117;21385:24;21403:5;21385:24;;;21378:5;21375:35;21365:2;;21424:1;21421;21414:12;21365:2;21359:74;;21440:117;21509:24;21527:5;21509:24;;;21502:5;21499:35;21489:2;;21548:1;21545;21538:12;21489:2;21483:74;;21564:115;21632:23;21649:5;21632:23;;;21625:5;21622:34;21612:2;;21670:1;21667;21660:12;21612:2;21606:73;",
  "source": "/// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.6.8;\npragma experimental ABIEncoderV2;\n\n\n/// @title Non-transferable Badges for Maker Ecosystem Activity, issue #537\n/// @author Nazzareno Massari, Scott Herren\n/// @notice InsigniaDAO to check for activities on maker ecosystem and keep track of redeemers\n/// @dev see https://github.com/makerdao/community/issues/537\n/// @dev All function calls are currently implemented without side effecs through TDD approach\n/// @dev OpenZeppelin library is used for secure contract development\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/EnumerableSet.sol\";\n\ninterface PotLike {\n\n    function pie(address guy) external view returns (uint256);\n    function chi() external view returns (uint256);\n    function rho() external view returns (uint256);\n    function drip() external view returns (uint256);\n\n}\n\ninterface DSChiefLike {\n  function votes(address) external view returns (bytes32);\n}\n\ninterface  FlipperLike {\n  struct Bid {\n    uint256 bid;\n    uint256 lot;\n    address guy;  // high bidder\n    uint48  tic;  // expiry time\n    uint48  end;\n    address usr;\n    address gal;\n    uint256 tab;\n}\n  function bids(uint256) external view returns (Bid memory);\n}\n\ncontract InsigniaDAO is Ownable, AccessControl, Pausable {\n\n  /// Libraries\n  using SafeMath for uint256;\n  using EnumerableSet for EnumerableSet.AddressSet;\n\n  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n  bytes32[] public roots;\n\n  EnumerableSet.AddressSet private redeemers;\n\n  /// Events\n  event PotChecked(address guy);\n  event DSChiefChecked(address guy);\n  event FlipperChecked(address guy);\n\n  /// Data\n  PotLike  internal pot;\n  DSChiefLike internal chief;\n  FlipperLike internal flipper;\n\n  /// Math\n  uint256 constant RAY = 10 ** 27;\n\n  function rmul(uint256 x, uint256 y) internal view whenNotPaused returns (uint256 z) {\n          // always rounds down\n          z = x.mul(y) / RAY;\n  }\n\n  constructor() public {\n        _setupRole(DEFAULT_ADMIN_ROLE, owner());\n\n        _setupRole(PAUSER_ROLE, owner());\n\n        /// MCD_POT Kovan Address https://kovan.etherscan.io/address/0xea190dbdc7adf265260ec4da6e9675fd4f5a78bb#code\n\t\t\t  pot = PotLike(0xEA190DBDC7adF265260ec4dA6e9675Fd4f5A78bb);\n\n        /// MCD_ADM Kovan Address https://kovan.etherscan.io/address/0xbBFFC76e94B34F72D96D054b31f6424249c1337d#code\n        chief = DSChiefLike(0xbBFFC76e94B34F72D96D054b31f6424249c1337d);\n        /// MCD_FLIP_ETH_A Kovan Address https://kovan.etherscan.io/address/0xB40139Ea36D35d0C9F6a2e62601B616F1FfbBD1b#code\n        flipper = FlipperLike(0xB40139Ea36D35d0C9F6a2e62601B616F1FfbBD1b);\n\n  }\n\n  /// @notice Fallback function\n  /// @dev Added not payable to revert transactions not matching any other function which send value\n  fallback() external {\n    revert();\n  }\n\n  /// @notice Set Merkle Tree Root Hashes array\n  /// @dev Called by owner to update roots for different address batches by templateId\n  /// @param rootHashes Root hashes of the Merkle Trees by templateId\n  /// @return True if successfully updated\n  function setRootHashes(bytes32[] memory rootHashes) public onlyOwner whenNotPaused returns (bool) {\n    roots = rootHashes;\n    return true;\n  }\n\n  /// @notice Return the accrued interest of guy on Pot\n  /// @dev Based on Chai dai() function\n  /// @param guy Address to check\n  /// @return wad Accrued interest of guy\n  function _dai(address guy) internal view whenNotPaused returns (uint256 wad) {\n    uint256 slice = pot.pie(guy);\n    uint256 chi = (now > pot.rho()) ? pot.drip() : pot.chi();\n    wad = rmul(slice, chi);\n  }\n\n  /// @notice Check Redeemer\n  /// @dev Keep track of the hash of the caller if successful\n  /// @return True/False if the caller successfully checked for activities on MakerDAO or not\n  function checkRedeemer(uint256 id) public whenNotPaused returns (bool) {\n\n    if (_dai(msg.sender) >= 1 ether) {\n      if (!redeemers.contains(address(uint160(uint256(keccak256(abi.encodePacked(_msgSender()))))))) {\n      redeemers.add(address(uint160(uint256(keccak256(abi.encodePacked(msg.sender))))));\n      }\n      emit PotChecked(msg.sender);\n    }else if(chief.votes(msg.sender) != 0x00) {\n      if (!redeemers.contains(address(uint160(uint256(keccak256(abi.encodePacked(msg.sender))))))) {\n      redeemers.add(address(uint160(uint256(keccak256(abi.encodePacked(msg.sender))))));\n      }\n      emit DSChiefChecked(msg.sender);\n    }else if(flipper.bids(id).guy == msg.sender) {\n      if (!redeemers.contains(address(uint160(uint256(keccak256(abi.encodePacked(msg.sender))))))) {\n      redeemers.add(address(uint160(uint256(keccak256(abi.encodePacked(msg.sender))))));\n      }\n      emit FlipperChecked(msg.sender);\n    }else {\n      return false;\n    }\n    return true;\n  }\n\n  /// @notice Check if guy is a redeemer\n  /// @dev Verify if the hash of guy address exists\n  /// @param guy Address to verify\n  /// @return True if guy is a redeemer\n  function verify(address guy) public view whenNotPaused returns (bool) {\n    require(redeemers.contains(address(uint160(uint256(keccak256(abi.encodePacked(guy)))))), \"The address is not a redeemer\");\n    return true;\n  }\n\n  /// @notice Pause all the functions\n  /// @dev the caller must have the 'PAUSER_ROLE'\n  function pause() public {\n    require(hasRole(PAUSER_ROLE, msg.sender), \"InsigniaDAO: must have pauser role to pause\");\n    _pause();\n  }\n\n  /// @notice Unpause all the functions\n  /// @dev the caller must have the 'PAUSER_ROLE'\n  function unpause() public {\n        require(hasRole(PAUSER_ROLE, msg.sender), \"InsigniaDAO: must have pauser role to unpause\");\n        _unpause();\n    }\n\n}\n",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
  "sourcePath": "/home/sencha/insigniadao/contracts/InsigniaDAO.sol",
  "ast": {
    "absolutePath": "/home/sencha/insigniadao/contracts/InsigniaDAO.sol",
    "exportedSymbols": {
      "DSChiefLike": [
        635
      ],
      "FlipperLike": [
        660
      ],
      "InsigniaDAO": [
<<<<<<< HEAD
        1016
      ],
      "PotLike": [
        733
      ]
    },
    "id": 1017,
=======
        1087
      ],
      "PotLike": [
        627
      ]
    },
    "id": 1088,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 704,
=======
        "id": 598,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "literals": [
          "solidity",
          "0.6",
          ".8"
<<<<<<< HEAD
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:3"
=======
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:2"
      },
      {
        "id": 599,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:33:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
<<<<<<< HEAD
        "id": 705,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 2736,
        "src": "504:52:3",
=======
        "id": 600,
        "nodeType": "ImportDirective",
        "scope": 1088,
        "sourceUnit": 1526,
        "src": "539:52:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
<<<<<<< HEAD
        "id": 706,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 2627,
        "src": "557:58:3",
=======
        "id": 601,
        "nodeType": "ImportDirective",
        "scope": 1088,
        "sourceUnit": 1417,
        "src": "592:58:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
        "file": "@openzeppelin/contracts/utils/Pausable.sol",
<<<<<<< HEAD
        "id": 707,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 5393,
        "src": "616:52:3",
=======
        "id": 602,
        "nodeType": "ImportDirective",
        "scope": 1088,
        "sourceUnit": 4085,
        "src": "651:52:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
<<<<<<< HEAD
        "id": 708,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 3169,
        "src": "669:51:3",
=======
        "id": 603,
        "nodeType": "ImportDirective",
        "scope": 1088,
        "sourceUnit": 1861,
        "src": "704:51:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
<<<<<<< HEAD
        "id": 709,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 5303,
        "src": "721:57:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@opengsn/gsn/contracts/BaseRelayRecipient.sol",
        "file": "@opengsn/gsn/contracts/BaseRelayRecipient.sol",
        "id": 710,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 1841,
        "src": "779:55:3",
=======
        "id": 604,
        "nodeType": "ImportDirective",
        "scope": 1088,
        "sourceUnit": 3995,
        "src": "756:57:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
<<<<<<< HEAD
        "id": 733,
        "linearizedBaseContracts": [
          733
=======
        "id": 627,
        "linearizedBaseContracts": [
          627
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        ],
        "name": "PotLike",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "0bebac86",
<<<<<<< HEAD
            "id": 717,
=======
            "id": 611,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pie",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 713,
=======
              "id": 607,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 712,
=======
                  "id": 606,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 717,
                  "src": "874:11:3",
=======
                  "scope": 611,
                  "src": "853:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:3",
=======
                    "id": 605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "873:13:3"
            },
            "returnParameters": {
              "id": 716,
=======
              "src": "852:13:2"
            },
            "returnParameters": {
              "id": 610,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 715,
=======
                  "id": 609,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 717,
                  "src": "910:7:3",
=======
                  "scope": 611,
                  "src": "889:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:3",
=======
                    "id": 608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "909:9:3"
            },
            "scope": 733,
            "src": "861:58:3",
=======
              "src": "888:9:2"
            },
            "scope": 627,
            "src": "840:58:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "c92aecc4",
<<<<<<< HEAD
            "id": 722,
=======
            "id": 616,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "chi",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "936:2:3"
            },
            "returnParameters": {
              "id": 721,
=======
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:2:2"
            },
            "returnParameters": {
              "id": 615,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 720,
=======
                  "id": 614,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 722,
                  "src": "962:7:3",
=======
                  "scope": 616,
                  "src": "941:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:3",
=======
                    "id": 613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "961:9:3"
            },
            "scope": 733,
            "src": "924:47:3",
=======
              "src": "940:9:2"
            },
            "scope": 627,
            "src": "903:47:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "20aba08b",
<<<<<<< HEAD
            "id": 727,
=======
            "id": 621,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rho",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:2:3"
            },
            "returnParameters": {
              "id": 726,
=======
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:2:2"
            },
            "returnParameters": {
              "id": 620,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 725,
=======
                  "id": 619,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 727,
                  "src": "1014:7:3",
=======
                  "scope": 621,
                  "src": "993:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:3",
=======
                    "id": 618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1013:9:3"
            },
            "scope": 733,
            "src": "976:47:3",
=======
              "src": "992:9:2"
            },
            "scope": 627,
            "src": "955:47:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "9f678cca",
<<<<<<< HEAD
            "id": 732,
=======
            "id": 626,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "drip",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:2:3"
            },
            "returnParameters": {
              "id": 731,
=======
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:2:2"
            },
            "returnParameters": {
              "id": 625,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 730,
=======
                  "id": 624,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 732,
                  "src": "1067:7:3",
=======
                  "scope": 626,
                  "src": "1046:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:3",
=======
                    "id": 623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1066:9:3"
            },
            "scope": 733,
            "src": "1028:48:3",
=======
              "src": "1045:9:2"
            },
            "scope": 627,
            "src": "1007:48:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
<<<<<<< HEAD
        "scope": 1017,
        "src": "836:243:3"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 734,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2735,
              "src": "1105:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2735",
                "typeString": "contract Ownable"
              }
            },
            "id": 735,
            "nodeType": "InheritanceSpecifier",
            "src": "1105:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 736,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2626,
              "src": "1114:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$2626",
                "typeString": "contract AccessControl"
              }
            },
            "id": 737,
            "nodeType": "InheritanceSpecifier",
            "src": "1114:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 738,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5392,
              "src": "1129:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$5392",
                "typeString": "contract Pausable"
              }
            },
            "id": 739,
            "nodeType": "InheritanceSpecifier",
            "src": "1129:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 740,
              "name": "BaseRelayRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1840,
              "src": "1139:18:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseRelayRecipient_$1840",
                "typeString": "contract BaseRelayRecipient"
              }
            },
            "id": 741,
            "nodeType": "InheritanceSpecifier",
            "src": "1139:18:3"
          }
        ],
        "contractDependencies": [
          1840,
          2097,
          2361,
          2626,
          2735,
          5392
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1016,
        "linearizedBaseContracts": [
          1016,
          1840,
          2097,
          5392,
          2626,
          2735,
          2361
=======
        "scope": 1088,
        "src": "815:243:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 635,
        "linearizedBaseContracts": [
          635
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
        ],
        "name": "DSChiefLike",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
<<<<<<< HEAD
            "id": 744,
            "libraryName": {
              "contractScope": null,
              "id": 742,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3168,
              "src": "1185:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3168",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1179:27:3",
            "typeName": {
              "id": 743,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1198:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 747,
            "libraryName": {
              "contractScope": null,
              "id": 745,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5302,
              "src": "1215:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$5302",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1209:49:3",
            "typeName": {
              "contractScope": null,
              "id": 746,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5098,
              "src": "1233:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$5098_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 752,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1016,
            "src": "1262:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 748,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1262:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "5041555345525f524f4c45",
                  "id": 750,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1310:13:3",
                  "subdenomination": null,
=======
            "body": null,
            "documentation": null,
            "functionSelector": "d8bff5a5",
            "id": 634,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "votes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 634,
                  "src": "1101:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 749,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1300:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 751,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1300:24:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2b40ae4",
            "id": 755,
            "mutability": "mutable",
            "name": "roots",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1016,
            "src": "1329:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 753,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1329:7:3",
=======
              "src": "1100:9:2"
            },
            "returnParameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 634,
                  "src": "1133:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1132:9:2"
            },
            "scope": 635,
            "src": "1086:56:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1088,
        "src": "1060:84:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 660,
        "linearizedBaseContracts": [
          660
        ],
        "name": "FlipperLike",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "FlipperLike.Bid",
            "id": 652,
            "members": [
              {
                "constant": false,
                "id": 637,
                "mutability": "mutable",
                "name": "bid",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1190:11:2",
                "stateVariable": false,
                "storageLocation": "default",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 636,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1190:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
<<<<<<< HEAD
              "id": 754,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1329:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
=======
              {
                "constant": false,
                "id": 639,
                "mutability": "mutable",
                "name": "lot",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1207:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 638,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1207:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 641,
                "mutability": "mutable",
                "name": "guy",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1224:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 640,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1224:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 643,
                "mutability": "mutable",
                "name": "tic",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1257:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint48",
                  "typeString": "uint48"
                },
                "typeName": {
                  "id": 642,
                  "name": "uint48",
                  "nodeType": "ElementaryTypeName",
                  "src": "1257:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 645,
                "mutability": "mutable",
                "name": "end",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1290:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint48",
                  "typeString": "uint48"
                },
                "typeName": {
                  "id": 644,
                  "name": "uint48",
                  "nodeType": "ElementaryTypeName",
                  "src": "1290:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 647,
                "mutability": "mutable",
                "name": "usr",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1307:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 646,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1307:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 649,
                "mutability": "mutable",
                "name": "gal",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1324:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 648,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1324:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 651,
                "mutability": "mutable",
                "name": "tab",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1341:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 650,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1341:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "Bid",
            "nodeType": "StructDefinition",
            "scope": 660,
            "src": "1173:182:2",
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "constant": false,
            "id": 757,
            "mutability": "mutable",
            "name": "redeemers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1016,
            "src": "1356:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$5098_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "contractScope": null,
              "id": 756,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5098,
              "src": "1356:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$5098_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 758,
              "nodeType": "StructuredDocumentation",
              "src": "1403:10:3",
              "text": "Events"
            },
            "id": 762,
            "name": "DSRChallengeChecked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 761,
=======
            "body": null,
            "documentation": null,
            "functionSelector": "4423c5f1",
            "id": 659,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "bids",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 655,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 760,
                  "indexed": false,
=======
                  "id": 654,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 762,
                  "src": "1442:11:3",
=======
                  "scope": 659,
                  "src": "1372:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:3",
                    "stateMutability": "nonpayable",
=======
                    "id": 653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1441:13:3"
            },
            "src": "1416:39:3"
          },
          {
            "constant": false,
            "id": 764,
            "mutability": "mutable",
            "name": "pot",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1016,
            "src": "1459:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PotLike_$733",
              "typeString": "contract PotLike"
=======
              "src": "1371:9:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 659,
                  "src": "1404:10:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Bid_$652_memory_ptr",
                    "typeString": "struct FlipperLike.Bid"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 656,
                    "name": "Bid",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 652,
                    "src": "1404:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bid_$652_storage_ptr",
                      "typeString": "struct FlipperLike.Bid"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1403:12:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "scope": 660,
            "src": "1358:58:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1088,
        "src": "1146:272:2"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
<<<<<<< HEAD
              "id": 763,
              "name": "PotLike",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 733,
              "src": "1459:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PotLike_$733",
                "typeString": "contract PotLike"
=======
              "id": 661,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1525,
              "src": "1444:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1525",
                "typeString": "contract Ownable"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            },
            "id": 662,
            "nodeType": "InheritanceSpecifier",
            "src": "1444:7:2"
          },
          {
<<<<<<< HEAD
            "constant": true,
            "id": 769,
            "mutability": "constant",
            "name": "RAY",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1016,
            "src": "1496:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 765,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1496:7:3",
=======
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 663,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1416,
              "src": "1453:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$1416",
                "typeString": "contract AccessControl"
              }
            },
            "id": 664,
            "nodeType": "InheritanceSpecifier",
            "src": "1453:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 665,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4084,
              "src": "1468:8:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$4084",
                "typeString": "contract Pausable"
              }
            },
<<<<<<< HEAD
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              },
              "id": 768,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 766,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1519:2:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3237",
                "id": 767,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1525:2:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_27_by_1",
                  "typeString": "int_const 27"
                },
                "value": "27"
              },
              "src": "1519:8:3",
=======
            "id": 666,
            "nodeType": "InheritanceSpecifier",
            "src": "1468:8:2"
          }
        ],
        "contractDependencies": [
          1151,
          1416,
          1525,
          4084
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1087,
        "linearizedBaseContracts": [
          1087,
          4084,
          1416,
          1525,
          1151
        ],
        "name": "InsigniaDAO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 669,
            "libraryName": {
              "contractScope": null,
              "id": 667,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1860,
              "src": "1504:8:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1860",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1498:27:2",
            "typeName": {
              "id": 668,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1517:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
<<<<<<< HEAD
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "1616:67:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 780,
                      "name": "z",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "1660:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 783,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "1670:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 781,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "1664:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3081,
                          "src": "1664:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1664:8:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 785,
                        "name": "RAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "1675:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1664:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1660:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 776,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 775,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "1582:13:3",
=======
            "id": 672,
            "libraryName": {
              "contractScope": null,
              "id": 670,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3994,
              "src": "1534:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$3994",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1528:49:2",
            "typeName": {
              "contractScope": null,
              "id": 671,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3790,
              "src": "1552:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$3790_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 677,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1581:62:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 673,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1581:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "5041555345525f524f4c45",
                  "id": 675,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1629:13:2",
                  "subdenomination": null,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
<<<<<<< HEAD
                },
                "nodeType": "ModifierInvocation",
                "src": "1582:13:3"
              }
            ],
            "name": "rmul",
            "nodeType": "FunctionDefinition",
=======
                ],
                "id": 674,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1619:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 676,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1619:24:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2b40ae4",
            "id": 680,
            "mutability": "mutable",
            "name": "roots",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1648:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 678,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1648:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 679,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1648:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 682,
            "mutability": "mutable",
            "name": "redeemers",
            "nodeType": "VariableDeclaration",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "overrides": null,
            "scope": 1087,
            "src": "1675:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "contractScope": null,
              "id": 681,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3790,
              "src": "1675:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$3790_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 683,
              "nodeType": "StructuredDocumentation",
              "src": "1722:10:2",
              "text": "Events"
            },
            "id": 687,
            "name": "PotChecked",
            "nodeType": "EventDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 774,
=======
              "id": 686,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 771,
=======
                  "id": 685,
                  "indexed": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 790,
                  "src": "1546:9:3",
=======
                  "scope": 687,
                  "src": "1752:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:7:3",
=======
                    "id": 684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:2",
                    "stateMutability": "nonpayable",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1751:13:2"
            },
            "src": "1735:30:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 691,
            "name": "DSChiefChecked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 773,
=======
                  "id": 689,
                  "indexed": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 790,
                  "src": "1557:9:3",
=======
                  "scope": 691,
                  "src": "1789:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:7:3",
=======
                    "id": 688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:2",
                    "stateMutability": "nonpayable",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1545:22:3"
            },
            "returnParameters": {
              "id": 779,
=======
              "src": "1788:13:2"
            },
            "src": "1768:34:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 695,
            "name": "FlipperChecked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 694,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 778,
=======
                  "id": 693,
                  "indexed": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 790,
                  "src": "1605:9:3",
=======
                  "scope": 695,
                  "src": "1826:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:3",
=======
                    "id": 692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:2",
                    "stateMutability": "nonpayable",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1604:11:3"
            },
            "scope": 1016,
            "src": "1532:151:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "1708:397:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "1729:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 795,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2671,
                          "src": "1749:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1749:7:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 793,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "1718:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1718:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 800,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "1779:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
=======
              "src": "1825:13:2"
            },
            "src": "1805:34:2"
          },
          {
            "constant": false,
            "id": 697,
            "mutability": "mutable",
            "name": "pot",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1854:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PotLike_$627",
              "typeString": "contract PotLike"
            },
            "typeName": {
              "contractScope": null,
              "id": 696,
              "name": "PotLike",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 627,
              "src": "1854:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PotLike_$627",
                "typeString": "contract PotLike"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 699,
            "mutability": "mutable",
            "name": "chief",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1879:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DSChiefLike_$635",
              "typeString": "contract DSChiefLike"
            },
            "typeName": {
              "contractScope": null,
              "id": 698,
              "name": "DSChiefLike",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "1879:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DSChiefLike_$635",
                "typeString": "contract DSChiefLike"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 701,
            "mutability": "mutable",
            "name": "flipper",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1909:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FlipperLike_$660",
              "typeString": "contract FlipperLike"
            },
            "typeName": {
              "contractScope": null,
              "id": 700,
              "name": "FlipperLike",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 660,
              "src": "1909:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FlipperLike_$660",
                "typeString": "contract FlipperLike"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 706,
            "mutability": "constant",
            "name": "RAY",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1953:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 702,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1953:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              },
              "id": 705,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 703,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1976:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3237",
                "id": 704,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1982:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_27_by_1",
                  "typeString": "int_const 27"
                },
                "value": "27"
              },
              "src": "1976:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "2073:67:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 717,
                      "name": "z",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "2117:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 720,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 710,
                            "src": "2127:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
<<<<<<< HEAD
                          "argumentTypes": [],
                          "id": 801,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2671,
                          "src": "1792:5:3",
=======
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 718,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "2121:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1773,
                          "src": "2121:5:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
<<<<<<< HEAD
                        "id": 802,
=======
                        "id": 721,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1792:7:3",
=======
                        "src": "2121:8:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 722,
                        "name": "RAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "2132:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
<<<<<<< HEAD
                      ],
                      "id": 799,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "1768:10:3",
=======
                      },
                      "src": "2121:14:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:32:3",
                    "tryCall": false,
=======
                    "src": "2117:18:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:32:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 805,
                      "name": "pot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "1924:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PotLike_$733",
                        "typeString": "contract PotLike"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307845413139304442444337616446323635323630656334644136653936373546643466354137386262",
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1938:42:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0xEA190DBDC7adF265260ec4dA6e9675Fd4f5A78bb"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 806,
                        "name": "PotLike",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "1930:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PotLike_$733_$",
                          "typeString": "type(contract PotLike)"
                        }
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1930:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PotLike_$733",
                        "typeString": "contract PotLike"
                      }
                    },
                    "src": "1924:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PotLike_$733",
                      "typeString": "contract PotLike"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 811,
                      "name": "trustedForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "2039:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "307836343533443337323438416232433136654264314138663738326132434243363538363045363042",
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2058:42:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x6453D37248Ab2C16eBd1A8f782a2CBC65860E60B"
                    },
                    "src": "2039:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:61:3"
=======
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:18:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 816,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:2:3"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1708:0:3"
            },
            "scope": 1016,
            "src": "1687:418:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 823,
              "nodeType": "Block",
              "src": "2262:19:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 820,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2268:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2268:8:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:8:3"
                }
              ]
            },
            "documentation": {
              "id": 817,
              "nodeType": "StructuredDocumentation",
              "src": "2109:130:3",
              "text": "@notice Fallback function\n @dev Added not payable to revert transactions not matching any other function which send value"
            },
            "id": 824,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2250:2:3"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:0:3"
            },
            "scope": 1016,
            "src": "2242:39:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1839,
              2349
            ],
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "2540:57:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 833,
                        "name": "BaseRelayRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1840,
                        "src": "2561:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseRelayRecipient_$1840_$",
                          "typeString": "type(contract BaseRelayRecipient)"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1839,
                      "src": "2561:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2561:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 832,
                  "id": 836,
                  "nodeType": "Return",
                  "src": "2554:38:3"
                }
              ]
            },
            "documentation": {
              "id": 825,
              "nodeType": "StructuredDocumentation",
              "src": "2285:152:3",
              "text": "@notice OpenGSN _msgSender()\n @dev override _msgSender() in OZ Context.sol and BaseRelayRecipient.sol\n @return msg.sender after relay call"
            },
            "id": 838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 829,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 827,
                  "name": "Context",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2361,
                  "src": "2480:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Context_$2361",
                    "typeString": "contract Context"
                  }
                },
                {
                  "contractScope": null,
                  "id": 828,
                  "name": "BaseRelayRecipient",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1840,
                  "src": "2489:18:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseRelayRecipient_$1840",
                    "typeString": "contract BaseRelayRecipient"
                  }
                }
              ],
              "src": "2471:37:3"
            },
            "parameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2459:2:3"
            },
            "returnParameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 838,
                  "src": "2523:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2522:17:3"
            },
            "scope": 1016,
            "src": "2440:157:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 857,
              "nodeType": "Block",
              "src": "2947:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 851,
                      "name": "roots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 755,
                      "src": "2953:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 852,
                      "name": "rootHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "2961:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "2953:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2984:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 850,
                  "id": 856,
                  "nodeType": "Return",
                  "src": "2977:11:3"
                }
              ]
            },
            "documentation": {
              "id": 839,
              "nodeType": "StructuredDocumentation",
              "src": "2601:245:3",
              "text": "@notice Set Merkle Tree Root Hashes array\n @dev Called by owner to update roots for different address batches by templateId\n @param rootHashes Root hashes of the Merkle Trees by templateId\n @return True if successfully updated"
            },
            "functionSelector": "aca57703",
            "id": 858,
=======
            "id": 727,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 845,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 844,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2684,
                  "src": "2908:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2908:9:3"
              },
              {
                "arguments": null,
                "id": 847,
=======
                "id": 713,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                "modifierName": {
                  "argumentTypes": null,
                  "id": 846,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 5349,
                  "src": "2918:13:3",
=======
                  "referencedDeclaration": 4041,
                  "src": "2039:13:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "2918:13:3"
=======
                "src": "2039:13:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "rmul",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 843,
=======
              "id": 711,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 858,
                  "src": "2872:27:3",
=======
                  "scope": 727,
                  "src": "2003:9:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "baseType": {
                      "id": 840,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2872:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 841,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2872:9:3",
=======
                    "id": 707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2003:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
<<<<<<< HEAD
                }
              ],
              "src": "2871:29:3"
            },
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
=======
                },
                {
                  "constant": false,
                  "id": 710,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "y",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 858,
                  "src": "2941:4:3",
=======
                  "scope": 727,
                  "src": "2014:9:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2014:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2002:22:2"
            },
            "returnParameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "z",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 727,
                  "src": "2062:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 848,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2941:4:3",
=======
                    "id": 714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2062:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2940:6:3"
            },
            "scope": 1016,
            "src": "2849:144:3",
            "stateMutability": "nonpayable",
=======
              "src": "2061:11:2"
            },
            "scope": 1087,
            "src": "1989:151:2",
            "stateMutability": "view",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 898,
              "nodeType": "Block",
              "src": "3246:129:3",
              "statements": [
                {
                  "assignments": [
                    869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 869,
                      "mutability": "mutable",
                      "name": "slice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 898,
                      "src": "3252:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 868,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3252:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 874,
                  "initialValue": {
=======
              "id": 760,
              "nodeType": "Block",
              "src": "2165:670:2",
              "statements": [
                {
                  "expression": {
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 872,
                        "name": "guy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "3276:3:3",
=======
                        "id": 731,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "2186:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 732,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1461,
                          "src": "2206:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2206:7:2",
                        "tryCall": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 730,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1351,
                      "src": "2175:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 870,
                        "name": "pot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "3268:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PotLike_$733",
                          "typeString": "contract PotLike"
                        }
                      },
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pie",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
                      "src": "3268:7:3",
=======
                        "id": 737,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "2236:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 738,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1461,
                          "src": "2249:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2249:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 736,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1351,
                      "src": "2225:10:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 873,
=======
                    "id": 740,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3268:12:3",
=======
                    "src": "2225:32:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3252:28:3"
                },
                {
                  "assignments": [
                    876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 876,
                      "mutability": "mutable",
                      "name": "chi",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 898,
                      "src": "3286:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 875,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3286:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 890,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
=======
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 742,
                      "name": "pot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 697,
                      "src": "2382:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PotLike_$627",
                        "typeString": "contract PotLike"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 881,
=======
                          "hexValue": "307845413139304442444337616446323635323630656334644136653936373546643466354137386262",
                          "id": 744,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
<<<<<<< HEAD
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 877,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "3301:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 878,
                                "name": "pot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 764,
                                "src": "3307:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PotLike_$733",
                                  "typeString": "contract PotLike"
                                }
                              },
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rho",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 727,
                              "src": "3307:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3307:9:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3301:15:3",
=======
                          "nodeType": "Literal",
                          "src": "2396:42:2",
                          "subdenomination": null,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0xEA190DBDC7adF265260ec4dA6e9675Fd4f5A78bb"
                        }
                      ],
<<<<<<< HEAD
                      "id": 882,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3300:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 886,
                          "name": "pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 764,
                          "src": "3333:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PotLike_$733",
                            "typeString": "contract PotLike"
                          }
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chi",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 722,
                        "src": "3333:7:3",
=======
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 743,
                        "name": "PotLike",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "2388:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PotLike_$627_$",
                          "typeString": "type(contract PotLike)"
                        }
                      },
<<<<<<< HEAD
                      "id": 888,
=======
                      "id": 745,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "3333:9:3",
=======
                      "src": "2388:51:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PotLike_$627",
                        "typeString": "contract PotLike"
                      }
                    },
<<<<<<< HEAD
                    "id": 889,
=======
                    "src": "2382:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PotLike_$627",
                      "typeString": "contract PotLike"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 752,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
<<<<<<< HEAD
                    "nodeType": "Conditional",
                    "src": "3300:42:3",
                    "trueExpression": {
=======
                    "leftHandSide": {
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "argumentTypes": null,
                      "id": 748,
                      "name": "chief",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 699,
                      "src": "2567:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DSChiefLike_$635",
                        "typeString": "contract DSChiefLike"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 883,
                          "name": "pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 764,
                          "src": "3320:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PotLike_$733",
                            "typeString": "contract PotLike"
                          }
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "drip",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 732,
                        "src": "3320:8:3",
=======
                          "hexValue": "307862424646433736653934423334463732443936443035346233316636343234323439633133333764",
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2587:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0xbBFFC76e94B34F72D96D054b31f6424249c1337d"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 749,
                        "name": "DSChiefLike",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "2575:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DSChiefLike_$635_$",
                          "typeString": "type(contract DSChiefLike)"
                        }
                      },
                      "id": 885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "3320:10:3",
=======
                      "src": "2575:55:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DSChiefLike_$635",
                        "typeString": "contract DSChiefLike"
                      }
                    },
                    "src": "2567:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DSChiefLike_$635",
                      "typeString": "contract DSChiefLike"
                    }
                  },
<<<<<<< HEAD
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3286:56:3"
=======
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "2567:63:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 896,
=======
                    "id": 758,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 891,
                      "name": "wad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "3348:3:3",
=======
                      "id": 754,
                      "name": "flipper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "2764:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlipperLike_$660",
                        "typeString": "contract FlipperLike"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 893,
                          "name": "slice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "3359:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 894,
                          "name": "chi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "3366:3:3",
=======
                          "hexValue": "307842343031333945613336443335643043394636613265363236303142363136463146666242443162",
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2786:42:2",
                          "subdenomination": null,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0xB40139Ea36D35d0C9F6a2e62601B616F1FfbBD1b"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
<<<<<<< HEAD
                        "id": 892,
                        "name": "rmul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "3354:4:3",
=======
                        "id": 755,
                        "name": "FlipperLike",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "2774:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FlipperLike_$660_$",
                          "typeString": "type(contract FlipperLike)"
                        }
                      },
<<<<<<< HEAD
                      "id": 895,
=======
                      "id": 757,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "3354:16:3",
=======
                      "src": "2774:55:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlipperLike_$660",
                        "typeString": "contract FlipperLike"
                      }
                    },
<<<<<<< HEAD
                    "src": "3348:22:3",
=======
                    "src": "2764:65:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlipperLike_$660",
                      "typeString": "contract FlipperLike"
                    }
                  },
<<<<<<< HEAD
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "3348:22:3"
                }
              ]
            },
            "documentation": {
              "id": 859,
              "nodeType": "StructuredDocumentation",
              "src": "2997:169:3",
              "text": "@notice Return the accrued interest of guy on Pot\n @dev Based on Chai dai() function\n @param guy Address to check\n @return wad Accrued interest of guy"
            },
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 864,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 863,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "3210:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3210:13:3"
              }
            ],
            "name": "_dai",
=======
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:65:2"
                }
              ]
            },
            "documentation": null,
            "id": 761,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:2:2"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2165:0:2"
            },
            "scope": 1087,
            "src": "2144:691:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 768,
              "nodeType": "Block",
              "src": "2992:19:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 765,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2998:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2998:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:8:2"
                }
              ]
            },
            "documentation": {
              "id": 762,
              "nodeType": "StructuredDocumentation",
              "src": "2839:130:2",
              "text": "@notice Fallback function\n @dev Added not payable to revert transactions not matching any other function which send value"
            },
            "id": 769,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2980:2:2"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2992:0:2"
            },
            "scope": 1087,
            "src": "2972:39:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 788,
              "nodeType": "Block",
              "src": "3361:46:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 782,
                      "name": "roots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "3367:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 783,
                      "name": "rootHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "3375:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "3367:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 785,
                  "nodeType": "ExpressionStatement",
                  "src": "3367:18:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3398:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 781,
                  "id": 787,
                  "nodeType": "Return",
                  "src": "3391:11:2"
                }
              ]
            },
            "documentation": {
              "id": 770,
              "nodeType": "StructuredDocumentation",
              "src": "3015:245:2",
              "text": "@notice Set Merkle Tree Root Hashes array\n @dev Called by owner to update roots for different address batches by templateId\n @param rootHashes Root hashes of the Merkle Trees by templateId\n @return True if successfully updated"
            },
            "functionSelector": "aca57703",
            "id": 789,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 776,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 775,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1474,
                  "src": "3322:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3322:9:2"
              },
              {
                "arguments": null,
                "id": 778,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 777,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "3332:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3332:13:2"
              }
            ],
            "name": "setRootHashes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 861,
=======
                  "id": 773,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "rootHashes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 899,
                  "src": "3183:11:3",
=======
                  "scope": 789,
                  "src": "3286:27:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3183:7:3",
                    "stateMutability": "nonpayable",
=======
                    "baseType": {
                      "id": 771,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3286:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 772,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3286:9:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3182:13:3"
            },
            "returnParameters": {
              "id": 867,
=======
              "src": "3285:29:2"
            },
            "returnParameters": {
              "id": 781,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 866,
=======
                  "id": 780,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 899,
                  "src": "3233:11:3",
=======
                  "scope": 789,
                  "src": "3355:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:3",
=======
                    "id": 779,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3232:13:3"
            },
            "scope": 1016,
            "src": "3169:206:3",
            "stateMutability": "view",
=======
              "src": "3354:6:2"
            },
            "scope": 1087,
            "src": "3263:144:2",
            "stateMutability": "nonpayable",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 945,
              "nodeType": "Block",
              "src": "3624:244:3",
=======
              "id": 829,
              "nodeType": "Block",
              "src": "3660:129:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "assignments": [
                    800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 800,
                      "mutability": "mutable",
                      "name": "slice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 829,
                      "src": "3666:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3666:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 909,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  838
                                ],
                                "referencedDeclaration": 838,
                                "src": "3643:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 910,
=======
                        "id": 803,
                        "name": "guy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "3690:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 801,
                        "name": "pot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "3682:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PotLike_$627",
                          "typeString": "contract PotLike"
                        }
                      },
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pie",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 611,
                      "src": "3682:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3682:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3666:28:2"
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "chi",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 829,
                      "src": "3700:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3700:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 821,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 808,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "3715:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 809,
                                "name": "pot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 697,
                                "src": "3721:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PotLike_$627",
                                  "typeString": "contract PotLike"
                                }
                              },
                              "id": 810,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
<<<<<<< HEAD
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3643:12:3",
                              "tryCall": false,
=======
                              "memberName": "rho",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 621,
                              "src": "3721:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
<<<<<<< HEAD
                            ],
                            "id": 908,
                            "name": "_dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "3638:4:3",
=======
                            },
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3721:9:2",
                            "tryCall": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3638:18:3",
                          "tryCall": false,
=======
                          "src": "3715:15:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 813,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3714:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "hexValue": "31",
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3660:7:3",
                          "subdenomination": "ether",
=======
                          "id": 817,
                          "name": "pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 697,
                          "src": "3747:3:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PotLike_$627",
                            "typeString": "contract PotLike"
                          }
                        },
<<<<<<< HEAD
                        "src": "3638:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652063616c6c657220686173206e6f74206163637275656420312044616920696e746572657374",
                        "id": 914,
=======
                        "id": 818,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
<<<<<<< HEAD
                        "nodeType": "Literal",
                        "src": "3669:43:3",
                        "subdenomination": null,
=======
                        "memberName": "chi",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 616,
                        "src": "3747:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
<<<<<<< HEAD
                      ],
                      "id": 907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3630:7:3",
=======
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3747:9:2",
                      "tryCall": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 915,
=======
                    "id": 820,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
<<<<<<< HEAD
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3630:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "3630:83:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "id": 929,
                                              "name": "_msgSender",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [
                                                838
                                              ],
                                              "referencedDeclaration": 838,
                                              "src": "3784:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                "typeString": "function () view returns (address payable)"
                                              }
                                            },
                                            "id": 930,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3784:12:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 927,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "3767:3:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 928,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encodePacked",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "3767:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 931,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3767:30:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 926,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "3757:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 932,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3757:41:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 925,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3749:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 924,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3749:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3749:50:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3741:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 922,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "3741:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3741:59:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3733:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 920,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3733:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 935,
=======
                    "nodeType": "Conditional",
                    "src": "3714:42:2",
                    "trueExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 814,
                          "name": "pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 697,
                          "src": "3734:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PotLike_$627",
                            "typeString": "contract PotLike"
                          }
                        },
                        "id": 815,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
<<<<<<< HEAD
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3733:68:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 917,
                        "name": "redeemers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "3719:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$5098_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 919,
=======
                        "memberName": "drip",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 626,
                        "src": "3734:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 816,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
<<<<<<< HEAD
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5121,
                      "src": "3719:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$5098_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$5098_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:83:3",
                    "tryCall": false,
=======
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3734:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 937,
                  "nodeType": "ExpressionStatement",
                  "src": "3719:83:3"
=======
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3700:56:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 939,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            838
                          ],
                          "referencedDeclaration": 838,
                          "src": "3833:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3833:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
=======
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 822,
                      "name": "wad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 797,
                      "src": "3762:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 824,
                          "name": "slice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 800,
                          "src": "3773:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        {
                          "argumentTypes": null,
                          "id": 825,
                          "name": "chi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "3780:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
<<<<<<< HEAD
                      "id": 938,
                      "name": "DSRChallengeChecked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "3813:19:3",
=======
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 823,
                        "name": "rmul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "3768:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3768:16:2",
                      "tryCall": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3813:33:3",
                    "tryCall": false,
=======
                    "src": "3762:22:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 942,
                  "nodeType": "EmitStatement",
                  "src": "3808:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3859:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 906,
                  "id": 944,
                  "nodeType": "Return",
                  "src": "3852:11:3"
=======
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "3762:22:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 900,
              "nodeType": "StructuredDocumentation",
              "src": "3379:182:3",
              "text": "@notice First Challange: Earn 1$ interest on DSR\n @dev Keep track of the hash of the caller if successful\n @return True if the caller successfully checked for challange"
            },
            "functionSelector": "68e4a133",
            "id": 946,
=======
              "id": 790,
              "nodeType": "StructuredDocumentation",
              "src": "3411:169:2",
              "text": "@notice Return the accrued interest of guy on Pot\n @dev Based on Chai dai() function\n @param guy Address to check\n @return wad Accrued interest of guy"
            },
            "id": 830,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 903,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 902,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "3595:13:3",
=======
                "id": 795,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 794,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "3624:13:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3595:13:3"
=======
                "src": "3624:13:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "_dai",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3585:2:3"
            },
            "returnParameters": {
              "id": 906,
=======
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 830,
                  "src": "3597:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3597:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3596:13:2"
            },
            "returnParameters": {
              "id": 798,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 905,
=======
                  "id": 797,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 946,
                  "src": "3618:4:3",
=======
                  "scope": 830,
                  "src": "3647:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 904,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:4:3",
=======
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3647:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3617:6:3"
            },
            "scope": 1016,
            "src": "3564:304:3",
            "stateMutability": "nonpayable",
=======
              "src": "3646:13:2"
            },
            "scope": 1087,
            "src": "3583:206:2",
            "stateMutability": "view",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 980,
              "nodeType": "Block",
              "src": "4110:149:3",
=======
              "id": 1016,
              "nodeType": "Block",
              "src": "4049:908:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 841,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4065:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4065:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 840,
                        "name": "_dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "4060:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4060:16:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4080:7:2",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "4060:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "arguments": [
                              {
                                "argumentTypes": null,
=======
                            "expression": {
                              "argumentTypes": null,
                              "id": 897,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4351:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4351:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 895,
                            "name": "chief",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "4339:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DSChiefLike_$635",
                              "typeString": "contract DSChiefLike"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 634,
                          "src": "4339:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bytes32_$",
                            "typeString": "function (address) view external returns (bytes32)"
                          }
                        },
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4339:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783030",
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4366:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x00"
                      },
                      "src": "4339:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 953,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 833,
                                "src": "4637:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 951,
                                "name": "flipper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "4624:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FlipperLike_$660",
                                  "typeString": "contract FlipperLike"
                                }
                              },
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bids",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 659,
                              "src": "4624:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Bid_$652_memory_ptr_$",
                                "typeString": "function (uint256) view external returns (struct FlipperLike.Bid memory)"
                              }
                            },
                            "id": 954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4624:16:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bid_$652_memory_ptr",
                              "typeString": "struct FlipperLike.Bid memory"
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "guy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 641,
                          "src": "4624:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 956,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4648:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4648:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4624:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1010,
                        "nodeType": "Block",
                        "src": "4909:27:2",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4924:5:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 839,
                            "id": 1009,
                            "nodeType": "Return",
                            "src": "4917:12:2"
                          }
                        ]
                      },
                      "id": 1011,
                      "nodeType": "IfStatement",
                      "src": "4621:315:2",
                      "trueBody": {
                        "id": 1007,
                        "nodeType": "Block",
                        "src": "4660:244:2",
                        "statements": [
                          {
                            "condition": {
                              "argumentTypes": null,
                              "id": 978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4672:87:2",
                              "subExpression": {
                                "argumentTypes": null,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
<<<<<<< HEAD
                                                "id": 968,
                                                "name": "guy",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 949,
                                                "src": "4194:3:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
=======
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 970,
                                                          "name": "msg",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": -15,
                                                          "src": "4743:3:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                          }
                                                        },
                                                        "id": 971,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "4743:10:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 968,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -1,
                                                        "src": "4726:3:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_abi",
                                                          "typeString": "abi"
                                                        }
                                                      },
                                                      "id": 969,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "encodePacked",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
                                                      "src": "4726:16:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                      }
                                                    },
                                                    "id": 972,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4726:28:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  ],
                                                  "id": 967,
                                                  "name": "keccak256",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -8,
                                                  "src": "4716:9:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                  }
                                                },
                                                "id": 973,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4716:39:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
<<<<<<< HEAD
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 966,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "4177:3:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 967,
=======
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "id": 966,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
<<<<<<< HEAD
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "4177:16:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 969,
=======
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "4708:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 965,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4708:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": null,
                                                  "typeString": null
                                                }
                                              }
                                            },
                                            "id": 974,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                                            "src": "4177:21:3",
=======
                                            "src": "4708:48:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
<<<<<<< HEAD
                                          "id": 965,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "4167:9:3",
=======
                                          "id": 964,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4700:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint160_$",
                                            "typeString": "type(uint160)"
                                          },
                                          "typeName": {
                                            "id": 963,
                                            "name": "uint160",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4700:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
<<<<<<< HEAD
                                        "id": 970,
=======
                                        "id": 975,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                                        "src": "4167:32:3",
=======
                                        "src": "4700:57:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      ],
<<<<<<< HEAD
                                      "id": 964,
=======
                                      "id": 962,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                      "src": "4159:7:3",
=======
                                      "src": "4692:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
<<<<<<< HEAD
                                        "id": 963,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4159:7:3",
=======
                                        "id": 961,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4692:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 971,
=======
                                    "id": 976,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                    "src": "4159:41:3",
=======
                                    "src": "4692:66:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 962,
=======
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 959,
                                    "name": "redeemers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "4673:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                      "typeString": "struct EnumerableSet.AddressSet storage ref"
                                    }
                                  },
                                  "id": 960,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
<<<<<<< HEAD
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4151:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 961,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4151:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 972,
=======
                                  "memberName": "contains",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3859,
                                  "src": "4673:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                    "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                                  }
                                },
                                "id": 977,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "4151:50:3",
=======
                                "src": "4673:86:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": null,
                            "id": 1001,
                            "nodeType": "IfStatement",
                            "src": "4668:191:2",
                            "trueBody": {
                              "id": 1000,
                              "nodeType": "Block",
                              "src": "4761:98:2",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                              "argumentTypes": null,
                                                              "id": 991,
                                                              "name": "msg",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": -15,
                                                              "src": "4834:3:2",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                              }
                                                            },
                                                            "id": 992,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": null,
                                                            "src": "4834:10:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address_payable",
                                                              "typeString": "address payable"
                                                            }
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_address_payable",
                                                              "typeString": "address payable"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "id": 989,
                                                            "name": "abi",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -1,
                                                            "src": "4817:3:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_magic_abi",
                                                              "typeString": "abi"
                                                            }
                                                          },
                                                          "id": 990,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "encodePacked",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": null,
                                                          "src": "4817:16:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                            "typeString": "function () pure returns (bytes memory)"
                                                          }
                                                        },
                                                        "id": 993,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4817:28:2",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes_memory_ptr",
                                                          "typeString": "bytes memory"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_bytes_memory_ptr",
                                                          "typeString": "bytes memory"
                                                        }
                                                      ],
                                                      "id": 988,
                                                      "name": "keccak256",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -8,
                                                      "src": "4807:9:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                      }
                                                    },
                                                    "id": 994,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4807:39:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  ],
                                                  "id": 987,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "4799:7:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_uint256_$",
                                                    "typeString": "type(uint256)"
                                                  },
                                                  "typeName": {
                                                    "id": 986,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "4799:7:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": null,
                                                      "typeString": null
                                                    }
                                                  }
                                                },
                                                "id": 995,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4799:48:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 985,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "4791:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint160_$",
                                                "typeString": "type(uint160)"
                                              },
                                              "typeName": {
                                                "id": 984,
                                                "name": "uint160",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4791:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": null,
                                                  "typeString": null
                                                }
                                              }
                                            },
                                            "id": 996,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4791:57:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint160",
                                              "typeString": "uint160"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint160",
                                              "typeString": "uint160"
                                            }
                                          ],
                                          "id": 983,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4783:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 982,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4783:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 997,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4783:66:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 979,
                                        "name": "redeemers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 682,
                                        "src": "4769:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                                        }
                                      },
                                      "id": 981,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "add",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3813,
                                      "src": "4769:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                      }
                                    },
                                    "id": 998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4769:81:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 999,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4769:81:2"
                                }
                              ]
                            }
                          },
                          {
                            "eventCall": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1003,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4886:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1004,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4886:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
<<<<<<< HEAD
                              "id": 960,
=======
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 1002,
                                "name": "FlipperChecked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 695,
                                "src": "4871:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 1005,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
<<<<<<< HEAD
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4143:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 959,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4143:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 973,
=======
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4871:26:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1006,
                            "nodeType": "EmitStatement",
                            "src": "4866:31:2"
                          }
                        ]
                      }
                    },
                    "id": 1012,
                    "nodeType": "IfStatement",
                    "src": "4336:600:2",
                    "trueBody": {
                      "id": 950,
                      "nodeType": "Block",
                      "src": "4372:244:2",
                      "statements": [
                        {
                          "condition": {
                            "argumentTypes": null,
                            "id": 921,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
<<<<<<< HEAD
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4143:59:3",
                            "tryCall": false,
=======
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4384:87:2",
                            "subExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 913,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -15,
                                                        "src": "4455:3:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_message",
                                                          "typeString": "msg"
                                                        }
                                                      },
                                                      "id": 914,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "sender",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
                                                      "src": "4455:10:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 911,
                                                      "name": "abi",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -1,
                                                      "src": "4438:3:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_abi",
                                                        "typeString": "abi"
                                                      }
                                                    },
                                                    "id": 912,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "4438:16:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                      "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                  },
                                                  "id": 915,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "4438:28:2",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                  }
                                                ],
                                                "id": 910,
                                                "name": "keccak256",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -8,
                                                "src": "4428:9:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                                }
                                              },
                                              "id": 916,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4428:39:2",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 909,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4420:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 908,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4420:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": null,
                                                "typeString": null
                                              }
                                            }
                                          },
                                          "id": 917,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4420:48:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 907,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4412:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint160_$",
                                          "typeString": "type(uint160)"
                                        },
                                        "typeName": {
                                          "id": 906,
                                          "name": "uint160",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4412:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 918,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4412:57:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                      }
                                    ],
                                    "id": 905,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4404:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 904,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4404:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 919,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4404:66:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 902,
                                  "name": "redeemers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 682,
                                  "src": "4385:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                    "typeString": "struct EnumerableSet.AddressSet storage ref"
                                  }
                                },
                                "id": 903,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "contains",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3859,
                                "src": "4385:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                                }
                              },
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4385:86:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": null,
                          "id": 944,
                          "nodeType": "IfStatement",
                          "src": "4380:191:2",
                          "trueBody": {
                            "id": 943,
                            "nodeType": "Block",
                            "src": "4473:98:2",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "id": 934,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "4546:3:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_magic_message",
                                                              "typeString": "msg"
                                                            }
                                                          },
                                                          "id": 935,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "sender",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": null,
                                                          "src": "4546:10:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 932,
                                                          "name": "abi",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": -1,
                                                          "src": "4529:3:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                          }
                                                        },
                                                        "id": 933,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "encodePacked",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "4529:16:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                          "typeString": "function () pure returns (bytes memory)"
                                                        }
                                                      },
                                                      "id": 936,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "4529:28:2",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                        "typeString": "bytes memory"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                        "typeString": "bytes memory"
                                                      }
                                                    ],
                                                    "id": 931,
                                                    "name": "keccak256",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -8,
                                                    "src": "4519:9:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                                    }
                                                  },
                                                  "id": 937,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "4519:39:2",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                ],
                                                "id": 930,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4511:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 929,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "4511:7:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": null,
                                                    "typeString": null
                                                  }
                                                }
                                              },
                                              "id": 938,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4511:48:2",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 928,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4503:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint160_$",
                                              "typeString": "type(uint160)"
                                            },
                                            "typeName": {
                                              "id": 927,
                                              "name": "uint160",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4503:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": null,
                                                "typeString": null
                                              }
                                            }
                                          },
                                          "id": 939,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4503:57:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                          }
                                        ],
                                        "id": 926,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4495:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 925,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4495:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 940,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4495:66:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 922,
                                      "name": "redeemers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 682,
                                      "src": "4481:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                        "typeString": "struct EnumerableSet.AddressSet storage ref"
                                      }
                                    },
                                    "id": 924,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3813,
                                    "src": "4481:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                      "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                    }
                                  },
                                  "id": 941,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4481:81:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 942,
                                "nodeType": "ExpressionStatement",
                                "src": "4481:81:2"
                              }
                            ]
                          }
                        },
                        {
                          "eventCall": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 957,
                            "name": "redeemers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "4124:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$5098_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contains",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5167,
                          "src": "4124:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$5098_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$5098_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4124:79:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652061646472657373206973206e6f7420612072656465656d6572",
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4205:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9314cb1500fd3fcba4cfa49f45c1d28efbee06006d48d62c77ef634c6bcef84d",
                          "typeString": "literal_string \"The address is not a redeemer\""
                        },
                        "value": "The address is not a redeemer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9314cb1500fd3fcba4cfa49f45c1d28efbee06006d48d62c77ef634c6bcef84d",
                          "typeString": "literal_string \"The address is not a redeemer\""
                        }
                      ],
                      "id": 956,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4116:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4116:121:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "4116:121:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4250:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 955,
                  "id": 979,
                  "nodeType": "Return",
                  "src": "4243:11:3"
                }
              ]
            },
            "documentation": {
              "id": 947,
              "nodeType": "StructuredDocumentation",
              "src": "3872:165:3",
              "text": "@notice Check if guy is a redeemer\n @dev Verify if the hash of guy address exists\n @param guy Address to verify\n @return True if guy is a redeemer"
            },
            "functionSelector": "63a9c3d7",
            "id": 981,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 952,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 951,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "4081:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4081:13:3"
              }
            ],
            "name": "verify",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 981,
                  "src": "4056:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4056:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4055:13:3"
            },
            "returnParameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 981,
                  "src": "4104:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4104:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4103:6:3"
            },
            "scope": 1016,
            "src": "4040:219:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 997,
              "nodeType": "Block",
              "src": "4375:115:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 987,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "4397:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 988,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                838
                              ],
                              "referencedDeclaration": 838,
                              "src": "4410:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 989,
=======
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 946,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4598:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 947,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4598:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 945,
                              "name": "DSChiefChecked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 691,
                              "src": "4583:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4583:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 949,
                          "nodeType": "EmitStatement",
                          "src": "4578:31:2"
                        }
                      ]
                    }
                  },
                  "id": 1013,
                  "nodeType": "IfStatement",
                  "src": "4056:880:2",
                  "trueBody": {
                    "id": 894,
                    "nodeType": "Block",
                    "src": "4089:242:2",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4101:89:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "arguments": [],
                                                    "expression": {
                                                      "argumentTypes": [],
                                                      "id": 857,
                                                      "name": "_msgSender",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1139,
                                                      "src": "4172:10:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view returns (address payable)"
                                                      }
                                                    },
                                                    "id": 858,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4172:12:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address_payable",
                                                      "typeString": "address payable"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address_payable",
                                                      "typeString": "address payable"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 855,
                                                    "name": "abi",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -1,
                                                    "src": "4155:3:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_abi",
                                                      "typeString": "abi"
                                                    }
                                                  },
                                                  "id": 856,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "encodePacked",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": null,
                                                  "src": "4155:16:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                    "typeString": "function () pure returns (bytes memory)"
                                                  }
                                                },
                                                "id": 859,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4155:30:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              ],
                                              "id": 854,
                                              "name": "keccak256",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -8,
                                              "src": "4145:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                              }
                                            },
                                            "id": 860,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4145:41:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 853,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4137:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 852,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4137:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 861,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4137:50:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 851,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4129:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint160_$",
                                        "typeString": "type(uint160)"
                                      },
                                      "typeName": {
                                        "id": 850,
                                        "name": "uint160",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4129:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 862,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4129:59:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  ],
                                  "id": 849,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4121:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 848,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4121:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4121:68:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 846,
                                "name": "redeemers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 682,
                                "src": "4102:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                  "typeString": "struct EnumerableSet.AddressSet storage ref"
                                }
                              },
                              "id": 847,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "contains",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3859,
                              "src": "4102:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                              }
                            },
                            "id": 864,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4410:12:3",
=======
                            "src": "4102:88:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 888,
                        "nodeType": "IfStatement",
                        "src": "4097:193:2",
                        "trueBody": {
                          "id": 887,
                          "nodeType": "Block",
                          "src": "4192:98:2",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 878,
                                                          "name": "msg",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": -15,
                                                          "src": "4265:3:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                          }
                                                        },
                                                        "id": 879,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "4265:10:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 876,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -1,
                                                        "src": "4248:3:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_abi",
                                                          "typeString": "abi"
                                                        }
                                                      },
                                                      "id": 877,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "encodePacked",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
                                                      "src": "4248:16:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                      }
                                                    },
                                                    "id": 880,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4248:28:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  ],
                                                  "id": 875,
                                                  "name": "keccak256",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -8,
                                                  "src": "4238:9:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                  }
                                                },
                                                "id": 881,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4238:39:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "id": 874,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "4230:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 873,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4230:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": null,
                                                  "typeString": null
                                                }
                                              }
                                            },
                                            "id": 882,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4230:48:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 872,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4222:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint160_$",
                                            "typeString": "type(uint160)"
                                          },
                                          "typeName": {
                                            "id": 871,
                                            "name": "uint160",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4222:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 883,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4222:57:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      ],
                                      "id": 870,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4214:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 869,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4214:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 884,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4214:66:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 866,
                                    "name": "redeemers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "4200:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                      "typeString": "struct EnumerableSet.AddressSet storage ref"
                                    }
                                  },
                                  "id": 868,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3813,
                                  "src": "4200:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                    "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                  }
                                },
                                "id": 885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4200:81:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 886,
                              "nodeType": "ExpressionStatement",
                              "src": "4200:81:2"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 890,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4313:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4313:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
<<<<<<< HEAD
                          "id": 986,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2424,
                          "src": "4389:7:3",
=======
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 889,
                            "name": "PotChecked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "4302:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4302:22:2",
                          "tryCall": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4389:34:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e7369676e696144414f3a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4425:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f24974f75682eb569f7641d9c92ca6e833cad0aab61726910bdc09bcb3690b40",
                          "typeString": "literal_string \"InsigniaDAO: must have pauser role to pause\""
                        },
                        "value": "InsigniaDAO: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f24974f75682eb569f7641d9c92ca6e833cad0aab61726910bdc09bcb3690b40",
                          "typeString": "literal_string \"InsigniaDAO: must have pauser role to pause\""
                        }
                      ],
                      "id": 985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4381:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4381:90:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:90:3"
=======
                        "id": 893,
                        "nodeType": "EmitStatement",
                        "src": "4297:27:2"
                      }
                    ]
                  }
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 994,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5375,
                      "src": "4477:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 995,
=======
                    "hexValue": "74727565",
                    "id": 1014,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
<<<<<<< HEAD
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4477:8:3",
                    "tryCall": false,
=======
                    "nodeType": "Literal",
                    "src": "4948:4:2",
                    "subdenomination": null,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
<<<<<<< HEAD
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:8:3"
=======
                  "functionReturnParameters": 839,
                  "id": 1015,
                  "nodeType": "Return",
                  "src": "4941:11:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 982,
              "nodeType": "StructuredDocumentation",
              "src": "4263:85:3",
              "text": "@notice Pause all the functions\n @dev the caller must have the 'PAUSER_ROLE'"
            },
            "functionSelector": "8456cb59",
            "id": 998,
=======
              "id": 831,
              "nodeType": "StructuredDocumentation",
              "src": "3793:182:2",
              "text": "@notice Check Redeemer\n @dev Keep track of the hash of the caller if successful\n @return True/False if the caller successfully checked for activities on MakerDAO or not"
            },
            "functionSelector": "5a3d044e",
            "id": 1017,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 836,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 835,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "4020:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4020:13:2"
              }
            ],
            "name": "checkRedeemer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4365:2:3"
            },
            "returnParameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4375:0:3"
            },
            "scope": 1016,
            "src": "4351:139:3",
=======
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1017,
                  "src": "4001:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4000:12:2"
            },
            "returnParameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1017,
                  "src": "4043:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4043:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4042:6:2"
            },
            "scope": 1087,
            "src": "3978:979:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1014,
              "nodeType": "Block",
              "src": "4610:129:3",
=======
              "id": 1051,
              "nodeType": "Block",
              "src": "5199:149:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1004,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "4636:11:3",
=======
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 1039,
                                                "name": "guy",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1020,
                                                "src": "5283:3:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1037,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "5266:3:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 1038,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "5266:16:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 1040,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5266:21:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 1036,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "5256:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 1041,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5256:32:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 1035,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5248:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1034,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5248:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 1042,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5248:41:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1033,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5240:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 1032,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5240:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 1043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5240:50:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5232:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1030,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5232:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5232:59:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1028,
                            "name": "redeemers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "5213:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contains",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3859,
                          "src": "5213:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5213:79:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652061646472657373206973206e6f7420612072656465656d6572",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5294:31:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9314cb1500fd3fcba4cfa49f45c1d28efbee06006d48d62c77ef634c6bcef84d",
                          "typeString": "literal_string \"The address is not a redeemer\""
                        },
                        "value": "The address is not a redeemer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9314cb1500fd3fcba4cfa49f45c1d28efbee06006d48d62c77ef634c6bcef84d",
                          "typeString": "literal_string \"The address is not a redeemer\""
                        }
                      ],
                      "id": 1027,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5205:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5205:121:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:121:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5339:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1026,
                  "id": 1050,
                  "nodeType": "Return",
                  "src": "5332:11:2"
                }
              ]
            },
            "documentation": {
              "id": 1018,
              "nodeType": "StructuredDocumentation",
              "src": "4961:165:2",
              "text": "@notice Check if guy is a redeemer\n @dev Verify if the hash of guy address exists\n @param guy Address to verify\n @return True if guy is a redeemer"
            },
            "functionSelector": "63a9c3d7",
            "id": 1052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1023,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1022,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "5170:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5170:13:2"
              }
            ],
            "name": "verify",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1020,
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1052,
                  "src": "5145:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5145:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5144:13:2"
            },
            "returnParameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1052,
                  "src": "5193:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5193:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5192:6:2"
            },
            "scope": 1087,
            "src": "5129:219:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1068,
              "nodeType": "Block",
              "src": "5464:113:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1058,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "5486:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1005,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                838
                              ],
                              "referencedDeclaration": 838,
                              "src": "4649:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4649:12:3",
                            "tryCall": false,
=======
                            "expression": {
                              "argumentTypes": null,
                              "id": 1059,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5499:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5499:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1057,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "5478:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5478:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e7369676e696144414f3a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5512:45:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f24974f75682eb569f7641d9c92ca6e833cad0aab61726910bdc09bcb3690b40",
                          "typeString": "literal_string \"InsigniaDAO: must have pauser role to pause\""
                        },
                        "value": "InsigniaDAO: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f24974f75682eb569f7641d9c92ca6e833cad0aab61726910bdc09bcb3690b40",
                          "typeString": "literal_string \"InsigniaDAO: must have pauser role to pause\""
                        }
                      ],
                      "id": 1056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5470:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5470:88:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1064,
                  "nodeType": "ExpressionStatement",
                  "src": "5470:88:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1065,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4067,
                      "src": "5564:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5564:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "5564:8:2"
                }
              ]
            },
            "documentation": {
              "id": 1053,
              "nodeType": "StructuredDocumentation",
              "src": "5352:85:2",
              "text": "@notice Pause all the functions\n @dev the caller must have the 'PAUSER_ROLE'"
            },
            "functionSelector": "8456cb59",
            "id": 1069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5454:2:2"
            },
            "returnParameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5464:0:2"
            },
            "scope": 1087,
            "src": "5440:137:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1085,
              "nodeType": "Block",
              "src": "5697:127:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1075,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "5723:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1076,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5736:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5736:10:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1003,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2424,
                          "src": "4628:7:3",
=======
                          "id": 1074,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "5715:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1007,
=======
                        "id": 1078,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4628:34:3",
=======
                        "src": "5715:32:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e7369676e696144414f3a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
<<<<<<< HEAD
                        "id": 1008,
=======
                        "id": 1079,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4664:47:3",
=======
                        "src": "5749:47:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97f194dd5039eff09b8ee0dcc6c14ac2dd7fabcbd6844dcc28b1c36fcdaa7927",
                          "typeString": "literal_string \"InsigniaDAO: must have pauser role to unpause\""
                        },
                        "value": "InsigniaDAO: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97f194dd5039eff09b8ee0dcc6c14ac2dd7fabcbd6844dcc28b1c36fcdaa7927",
                          "typeString": "literal_string \"InsigniaDAO: must have pauser role to unpause\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1002,
=======
                      "id": 1073,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "4620:7:3",
=======
                      "src": "5707:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1009,
=======
                    "id": 1080,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4620:92:3",
=======
                    "src": "5707:90:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "4620:92:3"
=======
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "5707:90:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 1011,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5391,
                      "src": "4722:8:3",
=======
                      "id": 1082,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4083,
                      "src": "5807:8:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
<<<<<<< HEAD
                    "id": 1012,
=======
                    "id": 1083,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4722:10:3",
=======
                    "src": "5807:10:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1013,
                  "nodeType": "ExpressionStatement",
                  "src": "4722:10:3"
=======
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "5807:10:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 999,
              "nodeType": "StructuredDocumentation",
              "src": "4494:87:3",
              "text": "@notice Unpause all the functions\n @dev the caller must have the 'PAUSER_ROLE'"
            },
            "functionSelector": "3f4ba83a",
            "id": 1015,
=======
              "id": 1070,
              "nodeType": "StructuredDocumentation",
              "src": "5581:87:2",
              "text": "@notice Unpause all the functions\n @dev the caller must have the 'PAUSER_ROLE'"
            },
            "functionSelector": "3f4ba83a",
            "id": 1086,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5687:2:2"
            },
            "returnParameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5697:0:2"
            },
            "scope": 1087,
            "src": "5671:153:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1088,
        "src": "1420:4407:2"
      }
    ],
    "src": "37:5791:2"
  },
  "legacyAST": {
    "absolutePath": "/home/sencha/insigniadao/contracts/InsigniaDAO.sol",
    "exportedSymbols": {
      "DSChiefLike": [
        635
      ],
      "FlipperLike": [
        660
      ],
      "InsigniaDAO": [
        1087
      ],
      "PotLike": [
        627
      ]
    },
    "id": 1088,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 598,
        "literals": [
          "solidity",
          "0.6",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:2"
      },
      {
        "id": 599,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 600,
        "nodeType": "ImportDirective",
        "scope": 1088,
        "sourceUnit": 1526,
        "src": "539:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 601,
        "nodeType": "ImportDirective",
        "scope": 1088,
        "sourceUnit": 1417,
        "src": "592:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
        "file": "@openzeppelin/contracts/utils/Pausable.sol",
        "id": 602,
        "nodeType": "ImportDirective",
        "scope": 1088,
        "sourceUnit": 4085,
        "src": "651:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 603,
        "nodeType": "ImportDirective",
        "scope": 1088,
        "sourceUnit": 1861,
        "src": "704:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "id": 604,
        "nodeType": "ImportDirective",
        "scope": 1088,
        "sourceUnit": 3995,
        "src": "756:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 627,
        "linearizedBaseContracts": [
          627
        ],
        "name": "PotLike",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "0bebac86",
            "id": 611,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pie",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 611,
                  "src": "853:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "852:13:2"
            },
            "returnParameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 611,
                  "src": "889:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "888:9:2"
            },
            "scope": 627,
            "src": "840:58:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "c92aecc4",
            "id": 616,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "chi",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:2:2"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 616,
                  "src": "941:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "940:9:2"
            },
            "scope": 627,
            "src": "903:47:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "20aba08b",
            "id": 621,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rho",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:2:2"
            },
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 621,
                  "src": "993:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "992:9:2"
            },
            "scope": 627,
            "src": "955:47:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "9f678cca",
            "id": 626,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "drip",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:2:2"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 626,
                  "src": "1046:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1045:9:2"
            },
            "scope": 627,
            "src": "1007:48:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1088,
        "src": "815:243:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 635,
        "linearizedBaseContracts": [
          635
        ],
        "name": "DSChiefLike",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "d8bff5a5",
            "id": 634,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "votes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 634,
                  "src": "1101:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1100:9:2"
            },
            "returnParameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 634,
                  "src": "1133:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1132:9:2"
            },
            "scope": 635,
            "src": "1086:56:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1088,
        "src": "1060:84:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 660,
        "linearizedBaseContracts": [
          660
        ],
        "name": "FlipperLike",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "FlipperLike.Bid",
            "id": 652,
            "members": [
              {
                "constant": false,
                "id": 637,
                "mutability": "mutable",
                "name": "bid",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1190:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 636,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1190:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 639,
                "mutability": "mutable",
                "name": "lot",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1207:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 638,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1207:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 641,
                "mutability": "mutable",
                "name": "guy",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1224:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 640,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1224:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 643,
                "mutability": "mutable",
                "name": "tic",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1257:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint48",
                  "typeString": "uint48"
                },
                "typeName": {
                  "id": 642,
                  "name": "uint48",
                  "nodeType": "ElementaryTypeName",
                  "src": "1257:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 645,
                "mutability": "mutable",
                "name": "end",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1290:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint48",
                  "typeString": "uint48"
                },
                "typeName": {
                  "id": 644,
                  "name": "uint48",
                  "nodeType": "ElementaryTypeName",
                  "src": "1290:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 647,
                "mutability": "mutable",
                "name": "usr",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1307:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 646,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1307:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 649,
                "mutability": "mutable",
                "name": "gal",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1324:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 648,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1324:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 651,
                "mutability": "mutable",
                "name": "tab",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 652,
                "src": "1341:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 650,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1341:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bid",
            "nodeType": "StructDefinition",
            "scope": 660,
            "src": "1173:182:2",
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "4423c5f1",
            "id": 659,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "bids",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4600:2:3"
            },
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4610:0:3"
            },
            "scope": 1016,
            "src": "4584:155:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1017,
        "src": "1081:3661:3"
      }
    ],
    "src": "37:4706:3"
  },
  "legacyAST": {
    "absolutePath": "/home/sencha/insigniadao/contracts/InsigniaDAO.sol",
    "exportedSymbols": {
      "InsigniaDAO": [
        1016
      ],
      "PotLike": [
        733
      ]
    },
    "id": 1017,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 704,
        "literals": [
          "solidity",
          "0.6",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 705,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 2736,
        "src": "504:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 706,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 2627,
        "src": "557:58:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
        "file": "@openzeppelin/contracts/utils/Pausable.sol",
        "id": 707,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 5393,
        "src": "616:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 708,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 3169,
        "src": "669:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "id": 709,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 5303,
        "src": "721:57:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@opengsn/gsn/contracts/BaseRelayRecipient.sol",
        "file": "@opengsn/gsn/contracts/BaseRelayRecipient.sol",
        "id": 710,
        "nodeType": "ImportDirective",
        "scope": 1017,
        "sourceUnit": 1841,
        "src": "779:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 733,
        "linearizedBaseContracts": [
          733
        ],
        "name": "PotLike",
        "nodeType": "ContractDefinition",
        "nodes": [
=======
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 659,
                  "src": "1372:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1371:9:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 659,
                  "src": "1404:10:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Bid_$652_memory_ptr",
                    "typeString": "struct FlipperLike.Bid"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 656,
                    "name": "Bid",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 652,
                    "src": "1404:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bid_$652_storage_ptr",
                      "typeString": "struct FlipperLike.Bid"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1403:12:2"
            },
            "scope": 660,
            "src": "1358:58:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1088,
        "src": "1146:272:2"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 661,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1525,
              "src": "1444:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1525",
                "typeString": "contract Ownable"
              }
            },
            "id": 662,
            "nodeType": "InheritanceSpecifier",
            "src": "1444:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 663,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1416,
              "src": "1453:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$1416",
                "typeString": "contract AccessControl"
              }
            },
            "id": 664,
            "nodeType": "InheritanceSpecifier",
            "src": "1453:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 665,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4084,
              "src": "1468:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$4084",
                "typeString": "contract Pausable"
              }
            },
            "id": 666,
            "nodeType": "InheritanceSpecifier",
            "src": "1468:8:2"
          }
        ],
        "contractDependencies": [
          1151,
          1416,
          1525,
          4084
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1087,
        "linearizedBaseContracts": [
          1087,
          4084,
          1416,
          1525,
          1151
        ],
        "name": "InsigniaDAO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 669,
            "libraryName": {
              "contractScope": null,
              "id": 667,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1860,
              "src": "1504:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1860",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1498:27:2",
            "typeName": {
              "id": 668,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1517:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 672,
            "libraryName": {
              "contractScope": null,
              "id": 670,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3994,
              "src": "1534:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$3994",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1528:49:2",
            "typeName": {
              "contractScope": null,
              "id": 671,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3790,
              "src": "1552:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$3790_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 677,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1581:62:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 673,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1581:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "5041555345525f524f4c45",
                  "id": 675,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1629:13:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 674,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1619:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 676,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1619:24:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2b40ae4",
            "id": 680,
            "mutability": "mutable",
            "name": "roots",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1648:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 678,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1648:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 679,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1648:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 682,
            "mutability": "mutable",
            "name": "redeemers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1675:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "contractScope": null,
              "id": 681,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3790,
              "src": "1675:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$3790_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 683,
              "nodeType": "StructuredDocumentation",
              "src": "1722:10:2",
              "text": "Events"
            },
            "id": 687,
            "name": "PotChecked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 685,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 687,
                  "src": "1752:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1751:13:2"
            },
            "src": "1735:30:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 691,
            "name": "DSChiefChecked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 691,
                  "src": "1789:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1788:13:2"
            },
            "src": "1768:34:2"
          },
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
          {
            "anonymous": false,
            "documentation": null,
<<<<<<< HEAD
            "functionSelector": "0bebac86",
            "id": 717,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pie",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 713,
=======
            "id": 695,
            "name": "FlipperChecked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 694,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 712,
=======
                  "id": 693,
                  "indexed": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 717,
                  "src": "874:11:3",
=======
                  "scope": 695,
                  "src": "1826:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:3",
=======
                    "id": 692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "873:13:3"
            },
            "returnParameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 717,
                  "src": "910:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:3",
=======
              "src": "1825:13:2"
            },
            "src": "1805:34:2"
          },
          {
            "constant": false,
            "id": 697,
            "mutability": "mutable",
            "name": "pot",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1854:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PotLike_$627",
              "typeString": "contract PotLike"
            },
            "typeName": {
              "contractScope": null,
              "id": 696,
              "name": "PotLike",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 627,
              "src": "1854:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PotLike_$627",
                "typeString": "contract PotLike"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 699,
            "mutability": "mutable",
            "name": "chief",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1879:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DSChiefLike_$635",
              "typeString": "contract DSChiefLike"
            },
            "typeName": {
              "contractScope": null,
              "id": 698,
              "name": "DSChiefLike",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 635,
              "src": "1879:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DSChiefLike_$635",
                "typeString": "contract DSChiefLike"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 701,
            "mutability": "mutable",
            "name": "flipper",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1909:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FlipperLike_$660",
              "typeString": "contract FlipperLike"
            },
            "typeName": {
              "contractScope": null,
              "id": 700,
              "name": "FlipperLike",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 660,
              "src": "1909:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FlipperLike_$660",
                "typeString": "contract FlipperLike"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 706,
            "mutability": "constant",
            "name": "RAY",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1087,
            "src": "1953:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 702,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1953:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              },
              "id": 705,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 703,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1976:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3237",
                "id": 704,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1982:2:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_27_by_1",
                  "typeString": "int_const 27"
                },
                "value": "27"
              },
              "src": "1976:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "2073:67:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 717,
                      "name": "z",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "2117:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 720,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 710,
                            "src": "2127:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 718,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "2121:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1773,
                          "src": "2121:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2121:8:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 722,
                        "name": "RAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "2132:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2121:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2117:18:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:18:2"
                }
<<<<<<< HEAD
              ],
              "src": "909:9:3"
            },
            "scope": 733,
            "src": "861:58:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "c92aecc4",
            "id": 722,
            "implemented": false,
=======
              ]
            },
            "documentation": null,
            "id": 727,
            "implemented": true,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 713,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 712,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "2039:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2039:13:2"
              }
            ],
            "name": "rmul",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "936:2:3"
            },
            "returnParameters": {
              "id": 721,
=======
              "id": 711,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 720,
=======
                  "id": 708,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 722,
                  "src": "962:7:3",
=======
                  "scope": 727,
                  "src": "2003:9:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:3",
=======
                    "id": 707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2003:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
<<<<<<< HEAD
                }
              ],
              "src": "961:9:3"
            },
            "scope": 733,
            "src": "924:47:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "20aba08b",
            "id": 727,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rho",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:2:3"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
=======
                },
                {
                  "constant": false,
                  "id": 710,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "y",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 727,
<<<<<<< HEAD
                  "src": "1014:7:3",
=======
                  "src": "2014:9:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:3",
=======
                    "id": 709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2014:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1013:9:3"
            },
            "scope": 733,
            "src": "976:47:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "9f678cca",
            "id": 732,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "drip",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:2:3"
            },
            "returnParameters": {
              "id": 731,
=======
              "src": "2002:22:2"
            },
            "returnParameters": {
              "id": 716,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 730,
=======
                  "id": 715,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "z",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 732,
                  "src": "1067:7:3",
=======
                  "scope": 727,
                  "src": "2062:9:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:3",
=======
                    "id": 714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2062:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1066:9:3"
            },
            "scope": 733,
            "src": "1028:48:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1017,
        "src": "836:243:3"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 734,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2735,
              "src": "1105:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2735",
                "typeString": "contract Ownable"
              }
            },
            "id": 735,
            "nodeType": "InheritanceSpecifier",
            "src": "1105:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 736,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2626,
              "src": "1114:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$2626",
                "typeString": "contract AccessControl"
              }
            },
            "id": 737,
            "nodeType": "InheritanceSpecifier",
            "src": "1114:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 738,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5392,
              "src": "1129:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$5392",
                "typeString": "contract Pausable"
              }
            },
            "id": 739,
            "nodeType": "InheritanceSpecifier",
            "src": "1129:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 740,
              "name": "BaseRelayRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1840,
              "src": "1139:18:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseRelayRecipient_$1840",
                "typeString": "contract BaseRelayRecipient"
              }
            },
            "id": 741,
            "nodeType": "InheritanceSpecifier",
            "src": "1139:18:3"
          }
        ],
        "contractDependencies": [
          1840,
          2097,
          2361,
          2626,
          2735,
          5392
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1016,
        "linearizedBaseContracts": [
          1016,
          1840,
          2097,
          5392,
          2626,
          2735,
          2361
        ],
        "name": "InsigniaDAO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 744,
            "libraryName": {
              "contractScope": null,
              "id": 742,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3168,
              "src": "1185:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3168",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1179:27:3",
            "typeName": {
              "id": 743,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1198:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 747,
            "libraryName": {
              "contractScope": null,
              "id": 745,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5302,
              "src": "1215:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$5302",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1209:49:3",
            "typeName": {
              "contractScope": null,
              "id": 746,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5098,
              "src": "1233:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$5098_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 752,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1016,
            "src": "1262:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 748,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1262:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "5041555345525f524f4c45",
                  "id": 750,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1310:13:3",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 749,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1300:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 751,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1300:24:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2b40ae4",
            "id": 755,
            "mutability": "mutable",
            "name": "roots",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1016,
            "src": "1329:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 753,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1329:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 754,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1329:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 757,
            "mutability": "mutable",
            "name": "redeemers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1016,
            "src": "1356:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$5098_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "contractScope": null,
              "id": 756,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5098,
              "src": "1356:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$5098_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 758,
              "nodeType": "StructuredDocumentation",
              "src": "1403:10:3",
              "text": "Events"
            },
            "id": 762,
            "name": "DSRChallengeChecked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 760,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 762,
                  "src": "1442:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:3",
                    "stateMutability": "nonpayable",
=======
              "src": "2061:11:2"
            },
            "scope": 1087,
            "src": "1989:151:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 760,
              "nodeType": "Block",
              "src": "2165:670:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 731,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "2186:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 732,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1461,
                          "src": "2206:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2206:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 730,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1351,
                      "src": "2175:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 737,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "2236:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 738,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1461,
                          "src": "2249:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2249:7:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 736,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1351,
                      "src": "2225:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 742,
                      "name": "pot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 697,
                      "src": "2382:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PotLike_$627",
                        "typeString": "contract PotLike"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307845413139304442444337616446323635323630656334644136653936373546643466354137386262",
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2396:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0xEA190DBDC7adF265260ec4dA6e9675Fd4f5A78bb"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 743,
                        "name": "PotLike",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "2388:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PotLike_$627_$",
                          "typeString": "type(contract PotLike)"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2388:51:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PotLike_$627",
                        "typeString": "contract PotLike"
                      }
                    },
                    "src": "2382:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PotLike_$627",
                      "typeString": "contract PotLike"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 748,
                      "name": "chief",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 699,
                      "src": "2567:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DSChiefLike_$635",
                        "typeString": "contract DSChiefLike"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307862424646433736653934423334463732443936443035346233316636343234323439633133333764",
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2587:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0xbBFFC76e94B34F72D96D054b31f6424249c1337d"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 749,
                        "name": "DSChiefLike",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "2575:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DSChiefLike_$635_$",
                          "typeString": "type(contract DSChiefLike)"
                        }
                      },
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2575:55:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DSChiefLike_$635",
                        "typeString": "contract DSChiefLike"
                      }
                    },
                    "src": "2567:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DSChiefLike_$635",
                      "typeString": "contract DSChiefLike"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "2567:63:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 754,
                      "name": "flipper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "2764:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlipperLike_$660",
                        "typeString": "contract FlipperLike"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307842343031333945613336443335643043394636613265363236303142363136463146666242443162",
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2786:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0xB40139Ea36D35d0C9F6a2e62601B616F1FfbBD1b"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 755,
                        "name": "FlipperLike",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "2774:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FlipperLike_$660_$",
                          "typeString": "type(contract FlipperLike)"
                        }
                      },
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2774:55:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlipperLike_$660",
                        "typeString": "contract FlipperLike"
                      }
                    },
                    "src": "2764:65:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlipperLike_$660",
                      "typeString": "contract FlipperLike"
                    }
                  },
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:65:2"
                }
<<<<<<< HEAD
              ],
              "src": "1441:13:3"
            },
            "src": "1416:39:3"
          },
          {
            "constant": false,
            "id": 764,
            "mutability": "mutable",
            "name": "pot",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1016,
            "src": "1459:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PotLike_$733",
              "typeString": "contract PotLike"
            },
            "typeName": {
              "contractScope": null,
              "id": 763,
              "name": "PotLike",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 733,
              "src": "1459:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PotLike_$733",
                "typeString": "contract PotLike"
              }
=======
              ]
            },
            "documentation": null,
            "id": 761,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:2:2"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2165:0:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "scope": 1087,
            "src": "2144:691:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "constant": true,
            "id": 769,
            "mutability": "constant",
            "name": "RAY",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1016,
            "src": "1496:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 765,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1496:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              },
              "id": 768,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 766,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1519:2:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3237",
                "id": 767,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1525:2:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_27_by_1",
                  "typeString": "int_const 27"
                },
                "value": "27"
              },
              "src": "1519:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              }
=======
            "body": {
              "id": 768,
              "nodeType": "Block",
              "src": "2992:19:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 765,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2998:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2998:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:8:2"
                }
              ]
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            },
            "documentation": {
              "id": 762,
              "nodeType": "StructuredDocumentation",
              "src": "2839:130:2",
              "text": "@notice Fallback function\n @dev Added not payable to revert transactions not matching any other function which send value"
            },
            "id": 769,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2980:2:2"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2992:0:2"
            },
            "scope": 1087,
            "src": "2972:39:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 789,
              "nodeType": "Block",
              "src": "1616:67:3",
=======
              "id": 788,
              "nodeType": "Block",
              "src": "3361:46:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 787,
=======
                    "id": 784,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 780,
                      "name": "z",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "1660:1:3",
=======
                      "id": 782,
                      "name": "roots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "3367:5:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 783,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "1670:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 781,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "1664:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3081,
                          "src": "1664:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1664:8:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 785,
                        "name": "RAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "1675:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1664:14:3",
=======
                      "id": 783,
                      "name": "rootHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "3375:10:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "1660:18:3",
=======
                    "src": "3367:18:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
<<<<<<< HEAD
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 790,
=======
                  "id": 785,
                  "nodeType": "ExpressionStatement",
                  "src": "3367:18:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3398:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 781,
                  "id": 787,
                  "nodeType": "Return",
                  "src": "3391:11:2"
                }
              ]
            },
            "documentation": {
              "id": 770,
              "nodeType": "StructuredDocumentation",
              "src": "3015:245:2",
              "text": "@notice Set Merkle Tree Root Hashes array\n @dev Called by owner to update roots for different address batches by templateId\n @param rootHashes Root hashes of the Merkle Trees by templateId\n @return True if successfully updated"
            },
            "functionSelector": "aca57703",
            "id": 789,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 776,
<<<<<<< HEAD
                "modifierName": {
                  "argumentTypes": null,
                  "id": 775,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "1582:13:3",
=======
                "modifierName": {
                  "argumentTypes": null,
                  "id": 775,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1474,
                  "src": "3322:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3322:9:2"
              },
              {
                "arguments": null,
                "id": 778,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 777,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "3332:13:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "1582:13:3"
=======
                "src": "3332:13:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "setRootHashes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 771,
=======
                  "id": 773,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "rootHashes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 790,
                  "src": "1546:9:3",
=======
                  "scope": 789,
                  "src": "3286:27:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:7:3",
=======
                    "baseType": {
                      "id": 771,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3286:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 772,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3286:9:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3285:29:2"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 773,
=======
                  "id": 780,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 790,
                  "src": "1557:9:3",
=======
                  "scope": 789,
                  "src": "3355:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:7:3",
=======
                    "id": 779,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1545:22:3"
            },
            "returnParameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "z",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 790,
                  "src": "1605:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1604:11:3"
            },
            "scope": 1016,
            "src": "1532:151:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "1708:397:3",
              "statements": [
                {
                  "expression": {
=======
              "src": "3354:6:2"
            },
            "scope": 1087,
            "src": "3263:144:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "3660:129:2",
              "statements": [
                {
                  "assignments": [
                    800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 800,
                      "mutability": "mutable",
                      "name": "slice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 829,
                      "src": "3666:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3666:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 794,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "1729:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 795,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2671,
                          "src": "1749:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1749:7:3",
                        "tryCall": false,
=======
                        "id": 803,
                        "name": "guy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "3690:3:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 793,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "1718:10:3",
=======
                      "expression": {
                        "argumentTypes": null,
                        "id": 801,
                        "name": "pot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "3682:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PotLike_$627",
                          "typeString": "contract PotLike"
                        }
                      },
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pie",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 611,
                      "src": "3682:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 797,
=======
                    "id": 804,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1718:39:3",
=======
                    "src": "3682:12:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 800,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "1779:11:3",
=======
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3666:28:2"
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "chi",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 829,
                      "src": "3700:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3700:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 821,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 808,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "3715:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 809,
                                "name": "pot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 697,
                                "src": "3721:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PotLike_$627",
                                  "typeString": "contract PotLike"
                                }
                              },
                              "id": 810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rho",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 621,
                              "src": "3721:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3721:9:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3715:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 813,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3714:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
<<<<<<< HEAD
                          "argumentTypes": [],
                          "id": 801,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2671,
                          "src": "1792:5:3",
=======
                          "argumentTypes": null,
                          "id": 817,
                          "name": "pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 697,
                          "src": "3747:3:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PotLike_$627",
                            "typeString": "contract PotLike"
                          }
                        },
<<<<<<< HEAD
                        "id": 802,
=======
                        "id": 818,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
<<<<<<< HEAD
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1792:7:3",
                        "tryCall": false,
=======
                        "memberName": "chi",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 616,
                        "src": "3747:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
<<<<<<< HEAD
                      ],
                      "id": 799,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "1768:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 803,
=======
                      },
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3747:9:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 820,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
<<<<<<< HEAD
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:32:3",
                    "tryCall": false,
=======
                    "nodeType": "Conditional",
                    "src": "3714:42:2",
                    "trueExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 814,
                          "name": "pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 697,
                          "src": "3734:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PotLike_$627",
                            "typeString": "contract PotLike"
                          }
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "drip",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 626,
                        "src": "3734:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3734:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:32:3"
=======
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3700:56:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 809,
=======
                    "id": 827,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 805,
                      "name": "pot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "1924:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PotLike_$733",
                        "typeString": "contract PotLike"
=======
                      "id": 822,
                      "name": "wad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 797,
                      "src": "3762:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "hexValue": "307845413139304442444337616446323635323630656334644136653936373546643466354137386262",
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1938:42:3",
                          "subdenomination": null,
=======
                          "id": 824,
                          "name": "slice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 800,
                          "src": "3773:5:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 825,
                          "name": "chi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "3780:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
<<<<<<< HEAD
                        "id": 806,
                        "name": "PotLike",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "1930:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PotLike_$733_$",
                          "typeString": "type(contract PotLike)"
                        }
                      },
                      "id": 808,
=======
                        "id": 823,
                        "name": "rmul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "3768:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 826,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "1930:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PotLike_$733",
                        "typeString": "contract PotLike"
                      }
                    },
                    "src": "1924:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PotLike_$733",
                      "typeString": "contract PotLike"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 811,
                      "name": "trustedForwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "2039:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "307836343533443337323438416232433136654264314138663738326132434243363538363045363042",
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2058:42:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x6453D37248Ab2C16eBd1A8f782a2CBC65860E60B"
                    },
                    "src": "2039:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:61:3"
                }
              ]
            },
            "documentation": null,
            "id": 816,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:2:3"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1708:0:3"
            },
            "scope": 1016,
            "src": "1687:418:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 823,
              "nodeType": "Block",
              "src": "2262:19:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 820,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2268:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2268:8:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:8:3"
                }
              ]
            },
            "documentation": {
              "id": 817,
              "nodeType": "StructuredDocumentation",
              "src": "2109:130:3",
              "text": "@notice Fallback function\n @dev Added not payable to revert transactions not matching any other function which send value"
            },
            "id": 824,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2250:2:3"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:0:3"
            },
            "scope": 1016,
            "src": "2242:39:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1839,
              2349
            ],
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "2540:57:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 833,
                        "name": "BaseRelayRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1840,
                        "src": "2561:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseRelayRecipient_$1840_$",
                          "typeString": "type(contract BaseRelayRecipient)"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1839,
                      "src": "2561:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2561:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 832,
                  "id": 836,
                  "nodeType": "Return",
                  "src": "2554:38:3"
                }
              ]
            },
            "documentation": {
              "id": 825,
              "nodeType": "StructuredDocumentation",
              "src": "2285:152:3",
              "text": "@notice OpenGSN _msgSender()\n @dev override _msgSender() in OZ Context.sol and BaseRelayRecipient.sol\n @return msg.sender after relay call"
            },
            "id": 838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 829,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 827,
                  "name": "Context",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2361,
                  "src": "2480:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Context_$2361",
                    "typeString": "contract Context"
                  }
                },
                {
                  "contractScope": null,
                  "id": 828,
                  "name": "BaseRelayRecipient",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1840,
                  "src": "2489:18:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseRelayRecipient_$1840",
                    "typeString": "contract BaseRelayRecipient"
                  }
                }
              ],
              "src": "2471:37:3"
            },
            "parameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2459:2:3"
            },
            "returnParameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 838,
                  "src": "2523:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2522:17:3"
            },
            "scope": 1016,
            "src": "2440:157:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 857,
              "nodeType": "Block",
              "src": "2947:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 851,
                      "name": "roots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 755,
                      "src": "2953:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 852,
                      "name": "rootHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "2961:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "2953:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2984:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
=======
                      "src": "3768:16:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    },
                    "src": "3762:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 850,
                  "id": 856,
                  "nodeType": "Return",
                  "src": "2977:11:3"
=======
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "3762:22:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 839,
              "nodeType": "StructuredDocumentation",
              "src": "2601:245:3",
              "text": "@notice Set Merkle Tree Root Hashes array\n @dev Called by owner to update roots for different address batches by templateId\n @param rootHashes Root hashes of the Merkle Trees by templateId\n @return True if successfully updated"
            },
            "functionSelector": "aca57703",
            "id": 858,
=======
              "id": 790,
              "nodeType": "StructuredDocumentation",
              "src": "3411:169:2",
              "text": "@notice Return the accrued interest of guy on Pot\n @dev Based on Chai dai() function\n @param guy Address to check\n @return wad Accrued interest of guy"
            },
            "id": 830,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 845,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 844,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2684,
                  "src": "2908:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2908:9:3"
              },
              {
                "arguments": null,
                "id": 847,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 846,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "2918:13:3",
=======
                "id": 795,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 794,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "3624:13:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "2918:13:3"
=======
                "src": "3624:13:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "_dai",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 843,
=======
              "id": 793,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 842,
=======
                  "id": 792,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 858,
                  "src": "2872:27:3",
=======
                  "scope": 830,
                  "src": "3597:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "baseType": {
                      "id": 840,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2872:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 841,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2872:9:3",
=======
                    "id": 791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3597:7:2",
                    "stateMutability": "nonpayable",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2871:29:3"
            },
            "returnParameters": {
              "id": 850,
=======
              "src": "3596:13:2"
            },
            "returnParameters": {
              "id": 798,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 849,
=======
                  "id": 797,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 858,
                  "src": "2941:4:3",
=======
                  "scope": 830,
                  "src": "3647:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 848,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2941:4:3",
=======
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3647:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2940:6:3"
            },
            "scope": 1016,
            "src": "2849:144:3",
            "stateMutability": "nonpayable",
=======
              "src": "3646:13:2"
            },
            "scope": 1087,
            "src": "3583:206:2",
            "stateMutability": "view",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 898,
              "nodeType": "Block",
              "src": "3246:129:3",
              "statements": [
                {
                  "assignments": [
                    869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 869,
                      "mutability": "mutable",
                      "name": "slice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 898,
                      "src": "3252:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 868,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3252:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 874,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 872,
                        "name": "guy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "3276:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 870,
                        "name": "pot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "3268:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PotLike_$733",
                          "typeString": "contract PotLike"
                        }
                      },
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pie",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
                      "src": "3268:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3268:12:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3252:28:3"
                },
                {
                  "assignments": [
                    876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 876,
                      "mutability": "mutable",
                      "name": "chi",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 898,
                      "src": "3286:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 875,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3286:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 890,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 877,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "3301:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 878,
                                "name": "pot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 764,
                                "src": "3307:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PotLike_$733",
                                  "typeString": "contract PotLike"
                                }
                              },
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rho",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 727,
                              "src": "3307:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3307:9:3",
                            "tryCall": false,
=======
              "id": 1016,
              "nodeType": "Block",
              "src": "4049:908:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 841,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4065:3:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "src": "3301:15:3",
=======
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4065:10:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
<<<<<<< HEAD
                      "id": 882,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3300:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 886,
                          "name": "pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 764,
                          "src": "3333:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PotLike_$733",
                            "typeString": "contract PotLike"
                          }
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chi",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 722,
                        "src": "3333:7:3",
=======
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 840,
                        "name": "_dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "4060:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 888,
=======
                      "id": 843,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "3333:9:3",
=======
                      "src": "4060:16:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3300:42:3",
                    "trueExpression": {
=======
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4080:7:2",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "4060:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 897,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4351:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4351:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
<<<<<<< HEAD
                          "argumentTypes": null,
                          "id": 883,
                          "name": "pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 764,
                          "src": "3320:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PotLike_$733",
                            "typeString": "contract PotLike"
                          }
                        },
                        "id": 884,
=======
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 895,
                            "name": "chief",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "4339:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DSChiefLike_$635",
                              "typeString": "contract DSChiefLike"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 634,
                          "src": "4339:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bytes32_$",
                            "typeString": "function (address) view external returns (bytes32)"
                          }
                        },
                        "id": 899,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
<<<<<<< HEAD
                        "memberName": "drip",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 732,
                        "src": "3320:8:3",
=======
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4339:23:2",
                        "tryCall": false,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
<<<<<<< HEAD
                      "id": 885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3320:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3286:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 891,
                      "name": "wad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "3348:3:3",
=======
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783030",
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4366:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x00"
                      },
                      "src": "4339:31:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 893,
                          "name": "slice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "3359:5:3",
=======
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 953,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 833,
                                "src": "4637:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 951,
                                "name": "flipper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "4624:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FlipperLike_$660",
                                  "typeString": "contract FlipperLike"
                                }
                              },
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bids",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 659,
                              "src": "4624:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Bid_$652_memory_ptr_$",
                                "typeString": "function (uint256) view external returns (struct FlipperLike.Bid memory)"
                              }
                            },
                            "id": 954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4624:16:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bid_$652_memory_ptr",
                              "typeString": "struct FlipperLike.Bid memory"
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "guy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 641,
                          "src": "4624:20:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 894,
                          "name": "chi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "3366:3:3",
=======
                          "expression": {
                            "argumentTypes": null,
                            "id": 956,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4648:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4648:10:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4624:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1010,
                        "nodeType": "Block",
                        "src": "4909:27:2",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4924:5:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 839,
                            "id": 1009,
                            "nodeType": "Return",
                            "src": "4917:12:2"
                          }
                        ]
                      },
                      "id": 1011,
                      "nodeType": "IfStatement",
                      "src": "4621:315:2",
                      "trueBody": {
                        "id": 1007,
                        "nodeType": "Block",
                        "src": "4660:244:2",
                        "statements": [
                          {
                            "condition": {
                              "argumentTypes": null,
                              "id": 978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4672:87:2",
                              "subExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 970,
                                                          "name": "msg",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": -15,
                                                          "src": "4743:3:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                          }
                                                        },
                                                        "id": 971,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "4743:10:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 968,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -1,
                                                        "src": "4726:3:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_abi",
                                                          "typeString": "abi"
                                                        }
                                                      },
                                                      "id": 969,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "encodePacked",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
                                                      "src": "4726:16:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                      }
                                                    },
                                                    "id": 972,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4726:28:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  ],
                                                  "id": 967,
                                                  "name": "keccak256",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -8,
                                                  "src": "4716:9:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                  }
                                                },
                                                "id": 973,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4716:39:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "id": 966,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "4708:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 965,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4708:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": null,
                                                  "typeString": null
                                                }
                                              }
                                            },
                                            "id": 974,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4708:48:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 964,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4700:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint160_$",
                                            "typeString": "type(uint160)"
                                          },
                                          "typeName": {
                                            "id": 963,
                                            "name": "uint160",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4700:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 975,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4700:57:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      ],
                                      "id": 962,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4692:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 961,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4692:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 976,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4692:66:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 959,
                                    "name": "redeemers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "4673:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                      "typeString": "struct EnumerableSet.AddressSet storage ref"
                                    }
                                  },
                                  "id": 960,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "contains",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3859,
                                  "src": "4673:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                    "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                                  }
                                },
                                "id": 977,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4673:86:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": null,
                            "id": 1001,
                            "nodeType": "IfStatement",
                            "src": "4668:191:2",
                            "trueBody": {
                              "id": 1000,
                              "nodeType": "Block",
                              "src": "4761:98:2",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                              "argumentTypes": null,
                                                              "id": 991,
                                                              "name": "msg",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": -15,
                                                              "src": "4834:3:2",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                              }
                                                            },
                                                            "id": 992,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": null,
                                                            "src": "4834:10:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address_payable",
                                                              "typeString": "address payable"
                                                            }
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_address_payable",
                                                              "typeString": "address payable"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "id": 989,
                                                            "name": "abi",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -1,
                                                            "src": "4817:3:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_magic_abi",
                                                              "typeString": "abi"
                                                            }
                                                          },
                                                          "id": 990,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "encodePacked",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": null,
                                                          "src": "4817:16:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                            "typeString": "function () pure returns (bytes memory)"
                                                          }
                                                        },
                                                        "id": 993,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "4817:28:2",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes_memory_ptr",
                                                          "typeString": "bytes memory"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_bytes_memory_ptr",
                                                          "typeString": "bytes memory"
                                                        }
                                                      ],
                                                      "id": 988,
                                                      "name": "keccak256",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -8,
                                                      "src": "4807:9:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                      }
                                                    },
                                                    "id": 994,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4807:39:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  ],
                                                  "id": 987,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "4799:7:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_uint256_$",
                                                    "typeString": "type(uint256)"
                                                  },
                                                  "typeName": {
                                                    "id": 986,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "4799:7:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": null,
                                                      "typeString": null
                                                    }
                                                  }
                                                },
                                                "id": 995,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4799:48:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 985,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "4791:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint160_$",
                                                "typeString": "type(uint160)"
                                              },
                                              "typeName": {
                                                "id": 984,
                                                "name": "uint160",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4791:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": null,
                                                  "typeString": null
                                                }
                                              }
                                            },
                                            "id": 996,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4791:57:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint160",
                                              "typeString": "uint160"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint160",
                                              "typeString": "uint160"
                                            }
                                          ],
                                          "id": 983,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4783:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 982,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4783:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 997,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4783:66:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 979,
                                        "name": "redeemers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 682,
                                        "src": "4769:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                                        }
                                      },
                                      "id": 981,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "add",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3813,
                                      "src": "4769:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                      }
                                    },
                                    "id": 998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4769:81:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 999,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4769:81:2"
                                }
                              ]
                            }
                          },
                          {
                            "eventCall": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1003,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4886:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1004,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4886:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 1002,
                                "name": "FlipperChecked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 695,
                                "src": "4871:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 1005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4871:26:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1006,
                            "nodeType": "EmitStatement",
                            "src": "4866:31:2"
                          }
<<<<<<< HEAD
                        ],
                        "id": 892,
                        "name": "rmul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "3354:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3354:16:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3348:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "3348:22:3"
                }
              ]
            },
            "documentation": {
              "id": 859,
              "nodeType": "StructuredDocumentation",
              "src": "2997:169:3",
              "text": "@notice Return the accrued interest of guy on Pot\n @dev Based on Chai dai() function\n @param guy Address to check\n @return wad Accrued interest of guy"
            },
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 864,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 863,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "3210:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3210:13:3"
              }
            ],
            "name": "_dai",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 899,
                  "src": "3183:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3183:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3182:13:3"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 899,
                  "src": "3233:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3232:13:3"
            },
            "scope": 1016,
            "src": "3169:206:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 945,
              "nodeType": "Block",
              "src": "3624:244:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 909,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  838
                                ],
                                "referencedDeclaration": 838,
                                "src": "3643:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 910,
=======
                        ]
                      }
                    },
                    "id": 1012,
                    "nodeType": "IfStatement",
                    "src": "4336:600:2",
                    "trueBody": {
                      "id": 950,
                      "nodeType": "Block",
                      "src": "4372:244:2",
                      "statements": [
                        {
                          "condition": {
                            "argumentTypes": null,
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4384:87:2",
                            "subExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 913,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -15,
                                                        "src": "4455:3:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_message",
                                                          "typeString": "msg"
                                                        }
                                                      },
                                                      "id": 914,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "sender",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
                                                      "src": "4455:10:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 911,
                                                      "name": "abi",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -1,
                                                      "src": "4438:3:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_abi",
                                                        "typeString": "abi"
                                                      }
                                                    },
                                                    "id": 912,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "4438:16:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                      "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                  },
                                                  "id": 915,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "4438:28:2",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                  }
                                                ],
                                                "id": 910,
                                                "name": "keccak256",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -8,
                                                "src": "4428:9:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                                }
                                              },
                                              "id": 916,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4428:39:2",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 909,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4420:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 908,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4420:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": null,
                                                "typeString": null
                                              }
                                            }
                                          },
                                          "id": 917,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4420:48:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 907,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4412:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint160_$",
                                          "typeString": "type(uint160)"
                                        },
                                        "typeName": {
                                          "id": 906,
                                          "name": "uint160",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4412:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 918,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4412:57:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                      }
                                    ],
                                    "id": 905,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4404:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 904,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4404:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 919,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4404:66:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 902,
                                  "name": "redeemers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 682,
                                  "src": "4385:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                    "typeString": "struct EnumerableSet.AddressSet storage ref"
                                  }
                                },
                                "id": 903,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "contains",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3859,
                                "src": "4385:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                                }
                              },
                              "id": 920,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "3643:12:3",
=======
                              "src": "4385:86:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
<<<<<<< HEAD
                            ],
                            "id": 908,
                            "name": "_dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "3638:4:3",
=======
                            },
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
<<<<<<< HEAD
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3638:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3660:7:3",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "3638:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652063616c6c657220686173206e6f74206163637275656420312044616920696e746572657374",
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3669:43:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3464593ba554b721472ca4cceaee0443685d60f73e4780d1e74c8f4b08a5ba53",
                          "typeString": "literal_string \"The caller has not accrued 1 Dai interest\""
                        },
                        "value": "The caller has not accrued 1 Dai interest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3464593ba554b721472ca4cceaee0443685d60f73e4780d1e74c8f4b08a5ba53",
                          "typeString": "literal_string \"The caller has not accrued 1 Dai interest\""
                        }
                      ],
                      "id": 907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3630:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3630:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "3630:83:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
=======
                          "falseBody": null,
                          "id": 944,
                          "nodeType": "IfStatement",
                          "src": "4380:191:2",
                          "trueBody": {
                            "id": 943,
                            "nodeType": "Block",
                            "src": "4473:98:2",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "id": 934,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "4546:3:2",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_magic_message",
                                                              "typeString": "msg"
                                                            }
                                                          },
                                                          "id": 935,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "sender",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": null,
                                                          "src": "4546:10:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 932,
                                                          "name": "abi",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": -1,
                                                          "src": "4529:3:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                          }
                                                        },
                                                        "id": 933,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "encodePacked",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "4529:16:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                          "typeString": "function () pure returns (bytes memory)"
                                                        }
                                                      },
                                                      "id": 936,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "4529:28:2",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                        "typeString": "bytes memory"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                        "typeString": "bytes memory"
                                                      }
                                                    ],
                                                    "id": 931,
                                                    "name": "keccak256",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -8,
                                                    "src": "4519:9:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                                    }
                                                  },
                                                  "id": 937,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "4519:39:2",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                ],
                                                "id": 930,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4511:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 929,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "4511:7:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": null,
                                                    "typeString": null
                                                  }
                                                }
                                              },
                                              "id": 938,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4511:48:2",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 928,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4503:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint160_$",
                                              "typeString": "type(uint160)"
                                            },
                                            "typeName": {
                                              "id": 927,
                                              "name": "uint160",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4503:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": null,
                                                "typeString": null
                                              }
                                            }
                                          },
                                          "id": 939,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4503:57:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                          }
                                        ],
                                        "id": 926,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4495:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 925,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4495:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 940,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4495:66:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 922,
                                      "name": "redeemers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 682,
                                      "src": "4481:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                        "typeString": "struct EnumerableSet.AddressSet storage ref"
                                      }
                                    },
                                    "id": 924,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3813,
                                    "src": "4481:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                      "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                    }
                                  },
                                  "id": 941,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4481:81:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 942,
                                "nodeType": "ExpressionStatement",
                                "src": "4481:81:2"
                              }
                            ]
                          }
                        },
                        {
                          "eventCall": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 946,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4598:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 947,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4598:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 945,
                              "name": "DSChiefChecked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 691,
                              "src": "4583:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4583:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 949,
                          "nodeType": "EmitStatement",
                          "src": "4578:31:2"
                        }
                      ]
                    }
                  },
                  "id": 1013,
                  "nodeType": "IfStatement",
                  "src": "4056:880:2",
                  "trueBody": {
                    "id": 894,
                    "nodeType": "Block",
                    "src": "4089:242:2",
                    "statements": [
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4101:89:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
<<<<<<< HEAD
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "id": 929,
                                              "name": "_msgSender",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [
                                                838
                                              ],
                                              "referencedDeclaration": 838,
                                              "src": "3784:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                "typeString": "function () view returns (address payable)"
                                              }
                                            },
                                            "id": 930,
=======
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "arguments": [],
                                                    "expression": {
                                                      "argumentTypes": [],
                                                      "id": 857,
                                                      "name": "_msgSender",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1139,
                                                      "src": "4172:10:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view returns (address payable)"
                                                      }
                                                    },
                                                    "id": 858,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4172:12:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address_payable",
                                                      "typeString": "address payable"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address_payable",
                                                      "typeString": "address payable"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 855,
                                                    "name": "abi",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -1,
                                                    "src": "4155:3:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_abi",
                                                      "typeString": "abi"
                                                    }
                                                  },
                                                  "id": 856,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "encodePacked",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": null,
                                                  "src": "4155:16:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                    "typeString": "function () pure returns (bytes memory)"
                                                  }
                                                },
                                                "id": 859,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4155:30:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              ],
                                              "id": 854,
                                              "name": "keccak256",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -8,
                                              "src": "4145:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                              }
                                            },
                                            "id": 860,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                                            "src": "3784:12:3",
=======
                                            "src": "4145:41:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
<<<<<<< HEAD
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 927,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "3767:3:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 928,
=======
                                          "id": 853,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
<<<<<<< HEAD
                                          "memberName": "encodePacked",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "3767:16:3",
=======
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4137:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 852,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4137:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
<<<<<<< HEAD
                                        "id": 931,
=======
                                        "id": 861,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                                        "src": "3767:30:3",
=======
                                        "src": "4137:50:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
<<<<<<< HEAD
                                      "id": 926,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "3757:9:3",
=======
                                      "id": 851,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4129:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint160_$",
                                        "typeString": "type(uint160)"
                                      },
                                      "typeName": {
                                        "id": 850,
                                        "name": "uint160",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4129:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 932,
=======
                                    "id": 862,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                    "src": "3757:41:3",
=======
                                    "src": "4129:59:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 925,
=======
                                  "id": 849,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "3749:7:3",
=======
                                  "src": "4121:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 924,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3749:7:3",
=======
                                    "id": 848,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4121:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
<<<<<<< HEAD
                                "id": 933,
=======
                                "id": 863,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "3749:50:3",
=======
                                "src": "4121:68:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
<<<<<<< HEAD
                              "id": 923,
=======
                              "expression": {
                                "argumentTypes": null,
                                "id": 846,
                                "name": "redeemers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 682,
                                "src": "4102:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                  "typeString": "struct EnumerableSet.AddressSet storage ref"
                                }
                              },
                              "id": 847,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
<<<<<<< HEAD
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3741:7:3",
=======
                              "memberName": "contains",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3859,
                              "src": "4102:18:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                              }
                            },
                            "id": 864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4102:88:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 888,
                        "nodeType": "IfStatement",
                        "src": "4097:193:2",
                        "trueBody": {
                          "id": 887,
                          "nodeType": "Block",
                          "src": "4192:98:2",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 878,
                                                          "name": "msg",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": -15,
                                                          "src": "4265:3:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                          }
                                                        },
                                                        "id": 879,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "4265:10:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 876,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -1,
                                                        "src": "4248:3:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_abi",
                                                          "typeString": "abi"
                                                        }
                                                      },
                                                      "id": 877,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "encodePacked",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
                                                      "src": "4248:16:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                      }
                                                    },
                                                    "id": 880,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4248:28:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  ],
                                                  "id": 875,
                                                  "name": "keccak256",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -8,
                                                  "src": "4238:9:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                  }
                                                },
                                                "id": 881,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4238:39:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "id": 874,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "4230:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 873,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4230:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": null,
                                                  "typeString": null
                                                }
                                              }
                                            },
                                            "id": 882,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4230:48:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 872,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4222:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint160_$",
                                            "typeString": "type(uint160)"
                                          },
                                          "typeName": {
                                            "id": 871,
                                            "name": "uint160",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4222:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 883,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4222:57:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      ],
                                      "id": 870,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4214:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 869,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4214:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 884,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4214:66:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 866,
                                    "name": "redeemers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 682,
                                    "src": "4200:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                                      "typeString": "struct EnumerableSet.AddressSet storage ref"
                                    }
                                  },
                                  "id": 868,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3813,
                                  "src": "4200:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                                    "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                  }
                                },
                                "id": 885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4200:81:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
<<<<<<< HEAD
                              "typeName": {
                                "id": 922,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "3741:7:3",
=======
                              "id": 886,
                              "nodeType": "ExpressionStatement",
                              "src": "4200:81:2"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 890,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4313:3:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4313:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
<<<<<<< HEAD
                            },
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3741:59:3",
                            "tryCall": false,
=======
                            ],
                            "id": 889,
                            "name": "PotChecked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "4302:10:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
<<<<<<< HEAD
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 921,
=======
                          },
                          "id": 892,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
<<<<<<< HEAD
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3733:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 920,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3733:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3733:68:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 917,
                        "name": "redeemers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "3719:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$5098_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 919,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5121,
                      "src": "3719:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$5098_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$5098_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 937,
                  "nodeType": "ExpressionStatement",
                  "src": "3719:83:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 939,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            838
                          ],
                          "referencedDeclaration": 838,
                          "src": "3833:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3833:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 938,
                      "name": "DSRChallengeChecked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "3813:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3813:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 942,
                  "nodeType": "EmitStatement",
                  "src": "3808:38:3"
=======
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4302:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 893,
                        "nodeType": "EmitStatement",
                        "src": "4297:27:2"
                      }
                    ]
                  }
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
<<<<<<< HEAD
                    "id": 943,
=======
                    "id": 1014,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "3859:4:3",
=======
                    "src": "4948:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 906,
                  "id": 944,
                  "nodeType": "Return",
                  "src": "3852:11:3"
=======
                  "functionReturnParameters": 839,
                  "id": 1015,
                  "nodeType": "Return",
                  "src": "4941:11:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 900,
              "nodeType": "StructuredDocumentation",
              "src": "3379:182:3",
              "text": "@notice First Challange: Earn 1$ interest on DSR\n @dev Keep track of the hash of the caller if successful\n @return True if the caller successfully checked for challange"
            },
            "functionSelector": "68e4a133",
            "id": 946,
=======
              "id": 831,
              "nodeType": "StructuredDocumentation",
              "src": "3793:182:2",
              "text": "@notice Check Redeemer\n @dev Keep track of the hash of the caller if successful\n @return True/False if the caller successfully checked for activities on MakerDAO or not"
            },
            "functionSelector": "5a3d044e",
            "id": 1017,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 903,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 902,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "3595:13:3",
=======
                "id": 836,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 835,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "4020:13:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3595:13:3"
=======
                "src": "4020:13:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "checkRedeemer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3585:2:3"
            },
            "returnParameters": {
              "id": 906,
=======
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1017,
                  "src": "4001:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4000:12:2"
            },
            "returnParameters": {
              "id": 839,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 905,
=======
                  "id": 838,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 946,
                  "src": "3618:4:3",
=======
                  "scope": 1017,
                  "src": "4043:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 904,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:4:3",
=======
                    "id": 837,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4043:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3617:6:3"
            },
            "scope": 1016,
            "src": "3564:304:3",
=======
              "src": "4042:6:2"
            },
            "scope": 1087,
            "src": "3978:979:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 980,
              "nodeType": "Block",
              "src": "4110:149:3",
=======
              "id": 1051,
              "nodeType": "Block",
              "src": "5199:149:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
<<<<<<< HEAD
                                                "id": 968,
                                                "name": "guy",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 949,
                                                "src": "4194:3:3",
=======
                                                "id": 1039,
                                                "name": "guy",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1020,
                                                "src": "5283:3:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
<<<<<<< HEAD
                                                "id": 966,
=======
                                                "id": 1037,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
<<<<<<< HEAD
                                                "src": "4177:3:3",
=======
                                                "src": "5266:3:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
<<<<<<< HEAD
                                              "id": 967,
=======
                                              "id": 1038,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
<<<<<<< HEAD
                                              "src": "4177:16:3",
=======
                                              "src": "5266:16:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
<<<<<<< HEAD
                                            "id": 969,
=======
                                            "id": 1040,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                                            "src": "4177:21:3",
=======
                                            "src": "5266:21:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
<<<<<<< HEAD
                                          "id": 965,
=======
                                          "id": 1036,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
<<<<<<< HEAD
                                          "src": "4167:9:3",
=======
                                          "src": "5256:9:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
<<<<<<< HEAD
                                        "id": 970,
=======
                                        "id": 1041,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                                        "src": "4167:32:3",
=======
                                        "src": "5256:32:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
<<<<<<< HEAD
                                      "id": 964,
=======
                                      "id": 1035,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                      "src": "4159:7:3",
=======
                                      "src": "5248:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
<<<<<<< HEAD
                                        "id": 963,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4159:7:3",
=======
                                        "id": 1034,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5248:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 971,
=======
                                    "id": 1042,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                    "src": "4159:41:3",
=======
                                    "src": "5248:41:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 962,
=======
                                  "id": 1033,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "4151:7:3",
=======
                                  "src": "5240:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 961,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4151:7:3",
=======
                                    "id": 1032,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5240:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
<<<<<<< HEAD
                                "id": 972,
=======
                                "id": 1043,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "4151:50:3",
=======
                                "src": "5240:50:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
<<<<<<< HEAD
                              "id": 960,
=======
                              "id": 1031,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4143:7:3",
=======
                              "src": "5232:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
<<<<<<< HEAD
                                "id": 959,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4143:7:3",
=======
                                "id": 1030,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5232:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
<<<<<<< HEAD
                            "id": 973,
=======
                            "id": 1044,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4143:59:3",
=======
                            "src": "5232:59:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 957,
                            "name": "redeemers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 757,
                            "src": "4124:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$5098_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 958,
=======
                            "id": 1028,
                            "name": "redeemers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "5213:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$3790_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 1029,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contains",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 5167,
                          "src": "4124:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$5098_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$5098_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 974,
=======
                          "referencedDeclaration": 3859,
                          "src": "5213:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$3790_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3790_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 1045,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4124:79:3",
=======
                        "src": "5213:79:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652061646472657373206973206e6f7420612072656465656d6572",
<<<<<<< HEAD
                        "id": 975,
=======
                        "id": 1046,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4205:31:3",
=======
                        "src": "5294:31:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9314cb1500fd3fcba4cfa49f45c1d28efbee06006d48d62c77ef634c6bcef84d",
                          "typeString": "literal_string \"The address is not a redeemer\""
                        },
                        "value": "The address is not a redeemer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9314cb1500fd3fcba4cfa49f45c1d28efbee06006d48d62c77ef634c6bcef84d",
                          "typeString": "literal_string \"The address is not a redeemer\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 956,
=======
                      "id": 1027,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "4116:7:3",
=======
                      "src": "5205:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 976,
=======
                    "id": 1047,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4116:121:3",
=======
                    "src": "5205:121:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "4116:121:3"
=======
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:121:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
<<<<<<< HEAD
                    "id": 978,
=======
                    "id": 1049,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "4250:4:3",
=======
                    "src": "5339:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 955,
                  "id": 979,
                  "nodeType": "Return",
                  "src": "4243:11:3"
=======
                  "functionReturnParameters": 1026,
                  "id": 1050,
                  "nodeType": "Return",
                  "src": "5332:11:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 947,
              "nodeType": "StructuredDocumentation",
              "src": "3872:165:3",
              "text": "@notice Check if guy is a redeemer\n @dev Verify if the hash of guy address exists\n @param guy Address to verify\n @return True if guy is a redeemer"
            },
            "functionSelector": "63a9c3d7",
            "id": 981,
=======
              "id": 1018,
              "nodeType": "StructuredDocumentation",
              "src": "4961:165:2",
              "text": "@notice Check if guy is a redeemer\n @dev Verify if the hash of guy address exists\n @param guy Address to verify\n @return True if guy is a redeemer"
            },
            "functionSelector": "63a9c3d7",
            "id": 1052,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 952,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 951,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5349,
                  "src": "4081:13:3",
=======
                "id": 1023,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1022,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4041,
                  "src": "5170:13:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "4081:13:3"
=======
                "src": "5170:13:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              }
            ],
            "name": "verify",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 950,
=======
              "id": 1021,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 949,
=======
                  "id": 1020,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "guy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 981,
                  "src": "4056:11:3",
=======
                  "scope": 1052,
                  "src": "5145:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4056:7:3",
=======
                    "id": 1019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5145:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4055:13:3"
            },
            "returnParameters": {
              "id": 955,
=======
              "src": "5144:13:2"
            },
            "returnParameters": {
              "id": 1026,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 954,
=======
                  "id": 1025,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
<<<<<<< HEAD
                  "scope": 981,
                  "src": "4104:4:3",
=======
                  "scope": 1052,
                  "src": "5193:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 953,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4104:4:3",
=======
                    "id": 1024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5193:4:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4103:6:3"
            },
            "scope": 1016,
            "src": "4040:219:3",
=======
              "src": "5192:6:2"
            },
            "scope": 1087,
            "src": "5129:219:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 997,
              "nodeType": "Block",
              "src": "4375:115:3",
=======
              "id": 1068,
              "nodeType": "Block",
              "src": "5464:113:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 987,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "4397:11:3",
=======
                            "id": 1058,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "5486:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
<<<<<<< HEAD
                              "argumentTypes": [],
                              "id": 988,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                838
                              ],
                              "referencedDeclaration": 838,
                              "src": "4410:10:3",
=======
                              "argumentTypes": null,
                              "id": 1059,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5499:3:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
<<<<<<< HEAD
                            "id": 989,
=======
                            "id": 1060,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
<<<<<<< HEAD
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4410:12:3",
                            "tryCall": false,
=======
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5499:10:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
<<<<<<< HEAD
                          "id": 986,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2424,
                          "src": "4389:7:3",
=======
                          "id": 1057,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "5478:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 990,
=======
                        "id": 1061,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4389:34:3",
=======
                        "src": "5478:32:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e7369676e696144414f3a206d75737420686176652070617573657220726f6c6520746f207061757365",
<<<<<<< HEAD
                        "id": 991,
=======
                        "id": 1062,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4425:45:3",
=======
                        "src": "5512:45:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f24974f75682eb569f7641d9c92ca6e833cad0aab61726910bdc09bcb3690b40",
                          "typeString": "literal_string \"InsigniaDAO: must have pauser role to pause\""
                        },
                        "value": "InsigniaDAO: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f24974f75682eb569f7641d9c92ca6e833cad0aab61726910bdc09bcb3690b40",
                          "typeString": "literal_string \"InsigniaDAO: must have pauser role to pause\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 985,
=======
                      "id": 1056,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "4381:7:3",
=======
                      "src": "5470:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 992,
=======
                    "id": 1063,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4381:90:3",
=======
                    "src": "5470:88:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:90:3"
=======
                  "id": 1064,
                  "nodeType": "ExpressionStatement",
                  "src": "5470:88:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 994,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5375,
                      "src": "4477:6:3",
=======
                      "id": 1065,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4067,
                      "src": "5564:6:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
<<<<<<< HEAD
                    "id": 995,
=======
                    "id": 1066,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4477:8:3",
=======
                    "src": "5564:8:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:8:3"
=======
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "5564:8:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 982,
              "nodeType": "StructuredDocumentation",
              "src": "4263:85:3",
              "text": "@notice Pause all the functions\n @dev the caller must have the 'PAUSER_ROLE'"
            },
            "functionSelector": "8456cb59",
            "id": 998,
=======
              "id": 1053,
              "nodeType": "StructuredDocumentation",
              "src": "5352:85:2",
              "text": "@notice Pause all the functions\n @dev the caller must have the 'PAUSER_ROLE'"
            },
            "functionSelector": "8456cb59",
            "id": 1069,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4365:2:3"
            },
            "returnParameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4375:0:3"
            },
            "scope": 1016,
            "src": "4351:139:3",
=======
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5454:2:2"
            },
            "returnParameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5464:0:2"
            },
            "scope": 1087,
            "src": "5440:137:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1014,
              "nodeType": "Block",
              "src": "4610:129:3",
=======
              "id": 1085,
              "nodeType": "Block",
              "src": "5697:127:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 1004,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "4636:11:3",
=======
                            "id": 1075,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "5723:11:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
<<<<<<< HEAD
                              "argumentTypes": [],
                              "id": 1005,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                838
                              ],
                              "referencedDeclaration": 838,
                              "src": "4649:10:3",
=======
                              "argumentTypes": null,
                              "id": 1076,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5736:3:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
<<<<<<< HEAD
                            "id": 1006,
=======
                            "id": 1077,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
<<<<<<< HEAD
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4649:12:3",
                            "tryCall": false,
=======
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5736:10:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1003,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2424,
                          "src": "4628:7:3",
=======
                          "id": 1074,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "5715:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 1007,
=======
                        "id": 1078,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4628:34:3",
=======
                        "src": "5715:32:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e7369676e696144414f3a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
<<<<<<< HEAD
                        "id": 1008,
=======
                        "id": 1079,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4664:47:3",
=======
                        "src": "5749:47:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97f194dd5039eff09b8ee0dcc6c14ac2dd7fabcbd6844dcc28b1c36fcdaa7927",
                          "typeString": "literal_string \"InsigniaDAO: must have pauser role to unpause\""
                        },
                        "value": "InsigniaDAO: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97f194dd5039eff09b8ee0dcc6c14ac2dd7fabcbd6844dcc28b1c36fcdaa7927",
                          "typeString": "literal_string \"InsigniaDAO: must have pauser role to unpause\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 1002,
=======
                      "id": 1073,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "4620:7:3",
=======
                      "src": "5707:7:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 1009,
=======
                    "id": 1080,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4620:92:3",
=======
                    "src": "5707:90:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "4620:92:3"
=======
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "5707:90:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 1011,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5391,
                      "src": "4722:8:3",
=======
                      "id": 1082,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4083,
                      "src": "5807:8:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
<<<<<<< HEAD
                    "id": 1012,
=======
                    "id": 1083,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4722:10:3",
=======
                    "src": "5807:10:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1013,
                  "nodeType": "ExpressionStatement",
                  "src": "4722:10:3"
=======
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "5807:10:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 999,
              "nodeType": "StructuredDocumentation",
              "src": "4494:87:3",
              "text": "@notice Unpause all the functions\n @dev the caller must have the 'PAUSER_ROLE'"
            },
            "functionSelector": "3f4ba83a",
            "id": 1015,
=======
              "id": 1070,
              "nodeType": "StructuredDocumentation",
              "src": "5581:87:2",
              "text": "@notice Unpause all the functions\n @dev the caller must have the 'PAUSER_ROLE'"
            },
            "functionSelector": "3f4ba83a",
            "id": 1086,
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
<<<<<<< HEAD
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4600:2:3"
            },
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4610:0:3"
            },
            "scope": 1016,
            "src": "4584:155:3",
=======
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5687:2:2"
            },
            "returnParameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5697:0:2"
            },
            "scope": 1087,
            "src": "5671:153:2",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
<<<<<<< HEAD
        "scope": 1017,
        "src": "1081:3661:3"
      }
    ],
    "src": "37:4706:3"
=======
        "scope": 1088,
        "src": "1420:4407:2"
      }
    ],
    "src": "37:5791:2"
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.8+commit.0bbfe453.Emscripten.clang"
  },
  "networks": {
    "1590000783054": {
      "events": {
        "0x359eefdc83d4cbeabeed5ea68cd9213056f02a7317e55e1310612edc535d5ae9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "guy",
              "type": "address"
            }
          ],
          "name": "DSChiefChecked",
          "type": "event"
        },
        "0x430bb0ab986389293d8f0855931d73d3e3bdc06890eb3e780550c98a7582a7ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "guy",
              "type": "address"
            }
          ],
          "name": "FlipperChecked",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
<<<<<<< HEAD
=======
          "name": "Paused",
          "type": "event"
        },
        "0xc53e300da4fe7bad9553037bb567acec8109a294de1f832291c2d814dfc262c4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "guy",
              "type": "address"
            }
          ],
          "name": "PotChecked",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
<<<<<<< HEAD
      "address": "0x098798b4aF578F9c0d933e114576d32550b24C75",
      "transactionHash": "0x32710b93fd2c06ca70b3a33396f7294dbb5c0a75feb895cbf164ade098f607e0"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-19T14:53:28.367Z",
=======
      "address": "0x7C6FAaCC70a989453F3C4fd21850bD5cc51fFCF9",
      "transactionHash": "0x0badd5ed8570b403bf35bdb0862bf1644e4408a810ede765d4182adc9172a0d0"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-20T18:53:21.577Z",
>>>>>>> ea7e333... Add makerdao activities + fix reentrancy on activateBadge() and burnBadge() + update to solc v0.6.8
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "checkRedeemer(uint256)": {
        "details": "Keep track of the hash of the caller if successful",
        "returns": {
          "_0": "True/False if the caller successfully checked for activities on MakerDAO or not"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "the caller must have the 'PAUSER_ROLE'"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "setRootHashes(bytes32[])": {
        "details": "Called by owner to update roots for different address batches by templateId",
        "params": {
          "rootHashes": "Root hashes of the Merkle Trees by templateId"
        },
        "returns": {
          "_0": "True if successfully updated"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "the caller must have the 'PAUSER_ROLE'"
      },
      "verify(address)": {
        "details": "Verify if the hash of guy address exists",
        "params": {
          "guy": "Address to verify"
        },
        "returns": {
          "_0": "True if guy is a redeemer"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkRedeemer(uint256)": {
        "notice": "Check Redeemer"
      },
      "pause()": {
        "notice": "Pause all the functions"
      },
      "setRootHashes(bytes32[])": {
        "notice": "Set Merkle Tree Root Hashes array"
      },
      "unpause()": {
        "notice": "Unpause all the functions"
      },
      "verify(address)": {
        "notice": "Check if guy is a redeemer"
      }
    }
  }
}